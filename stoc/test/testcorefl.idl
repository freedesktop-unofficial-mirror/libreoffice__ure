/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: testcorefl.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 08:22:11 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#include <com/sun/star/uno/XInterface.idl>

module ModuleA
{
    exception ExceptionA
    {
        boolean aBoolean;
    };

    struct StructA
    {
        long aLong;
        short aShort;
    };

    struct StructB : StructA								
    {
        double aDouble;
        float 	aFloat;
    };

    struct StructC : StructB
    {
        string 			   					aString;
        sequence<com::sun::star::uno::XInterface> 	aInterfaceSeq; 
    };

    exception ExceptionB : ExceptionA
    {
        StructC aStructC;
    };

    interface XInterface1 : com::sun::star::uno::XInterface
    {
    };
    
    exception ExceptionC : ExceptionB
    {
        XInterface1 aInterface1;
    };

    module ModuleB
    {
        enum EnumA { VAL_1, VAL_2, VAL_3 = 17};
    };

};

module ModuleC
{
    const boolean 			aConstBoolean 	= True;
    const byte 				aConstByte 		= 0;
    const short 			aConstShort 	= -1;
    const unsigned short 	aConstUShort 	= 1;
    const long 				aConstLong 		= -2;
    const unsigned long 	aConstULong 	= 2;
//  	const hyper				aConstHyper 	= -3;
//  	const unsigned hyper	aConstUHyper	= 3;
    const float				aConstFloat 	= 3.14;
    const double			aConstDouble	= 3.14e-10;


    interface XInterfaceA : com::sun::star::uno::XInterface
    {
        void methodA();
        [oneway] void methodB([in] short aShort);
        sequence<ModuleA::StructB> methodC([in] ModuleA::StructC aStructC, [inout] ModuleA::StructA aStructA);
    };

    interface XInterfaceB : XInterfaceA
    {
        [attribute] string aString;

        XInterfaceA methodD([in] ModuleA::ModuleB::EnumA aEnumA) raises (ModuleA::ExceptionA, ModuleA::ExceptionB, ModuleA::ExceptionC);
    };
};
