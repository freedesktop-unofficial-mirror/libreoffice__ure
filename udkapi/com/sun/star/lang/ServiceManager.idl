/*************************************************************************
 *
 *  $RCSfile: ServiceManager.idl,v $
 *
 *  $Revision: 1.1 $
 *
 *  last change: $Author: mi $ $Date: 2000-11-06 12:21:42 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_ServiceManager_idl__ 
#define __com_sun_star_lang_ServiceManager_idl__ 
 
#ifndef __com_sun_star_lang_MultiServiceFactory_idl__ 
#include <com/sun/star/lang/MultiServiceFactory.idl> 
#endif 
 
#ifndef __com_sun_star_lang_XComponent_idl__ 
#include <com/sun/star/lang/XComponent.idl> 
#endif 
 
#ifndef __com_sun_star_container_XSet_idl__ 
#include <com/sun/star/container/XSet.idl> 
#endif 
 
#ifndef __com_sun_star_container_XContentEnumerationAccess_idl__ 
#include <com/sun/star/container/XContentEnumerationAccess.idl> 
#endif 
 
#ifndef __com_sun_star_lang_XMultiServiceFactory_idl__ 
#include <com/sun/star/lang/XMultiServiceFactory.idl> 
#endif 
 
#ifndef __com_sun_star_lang_XServiceInfo_idl__ 
#include <com/sun/star/lang/XServiceInfo.idl> 
#endif 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module lang {  
 
//============================================================================= 
 
// DocMerge from xml: service com::sun::star::lang::ServiceManager
/** provides a collection of implementations for services.
    
    
    
    <p>The factories are accessed with a service name. It is possible to
    access the factories with their implementation names, but you should
    avoid this.
    
    </p>
    <p>The interfaces added through the <type scope="com::sun::star::container">XSet</type> interfaces
    should support the following interfaces:
    
    <dl>
    <dt>
    <type>XServiceInfo</type>
    
    </dt>
    <dd>is used to support access through the implementation with
    service names.
    
    </dd>
    <dt>
    <type>XSingleServiceFactory</type> (optional)
    </dt>
    <dd>is used to instanciate components from the implementation.
    
    </dd>
    <dt>
    <type scope="com::sun::star::beans">XPropertySet</type> (optional)
    </dt>
    <dd>offers additional information on the implementation.
    
    </dd>
    <dt>
    <type>XComponent</type> (optional)
    </dt>
    <dd>The service manager calls the method 
    
    
    
    
    
    
    on the registered factories. The service manager adds a
    listener to this factory. The factory is automatically
    revoked when the disposing listener is notified.
    </dd>
    </dl>
    
    </p>
 */
service ServiceManager
{ 
    // DocMerge: empty anyway
    service com::sun::star::lang::MultiServiceFactory; 
 
     
    // DocMerge from xml: service com::sun::star::lang::ServiceManager: interface com::sun::star::lang::XComponent
    /** Normally you should call the method 
                <method scope="com::sun::star::util">XComponent::dispose</method>  
                at the service manager just before the application terminates.  
                 
                <p>The service manager first broadcasts the 
                <method scope="com::sun::star::util">XEventListener::disposing()</method> 
                message to all registered listeners. In this state you can still get all 
                factories from the service manager, but it is not possible to 
                add disposing listeners. Second the service manager calls 
                <method scope="com::sun::star::util">XComponent::dispose</method> 
                at all registered factories that implement <type>XComponent</type>.  
                In this second state the service manager does not provide any factory.  
                This is called a two-phase shut down.
     */
    interface com::sun::star::lang::XComponent; 
 
     
    // DocMerge from xml: service com::sun::star::lang::ServiceManager: interface com::sun::star::container::XSet
    /** The implementations are managed with this interface. 
                The supported services (<type>XServiceInfo</type> is used) 
                are registered automatically.
     */
    interface com::sun::star::container::XSet; 
 
     
    // DocMerge from xml: service com::sun::star::lang::ServiceManager: interface com::sun::star::container::XContentEnumerationAccess
    /** It is possible to enumerate all implementations that support the 
                service specified with the argument of the 
                <method>XContentEnumerationAccess::createContentEnumeration</method> method. 
                 
                <p>The enumerator returns interfaces. The type of interfaces 
                are not specified. Normally these are 
                <type>XSingleServiceFactory</type>.
     */
    interface com::sun::star::container::XContentEnumerationAccess; 
 
     
    // DocMerge from xml: service com::sun::star::lang::ServiceManager: interface com::sun::star::lang::XMultiServiceFactory
    /** Use a service name or an implementation name to instanciate a 
                component with this interface. 
                 
                <p>First the service manager gets the factory registered  
                under the service name. Then  
                <method>XMultiServiceFactory::createInstance</type> or  
                <method>XMultiServiceFactory::createInstanceWithArguments</method>  
                of this factory is called.
     */
    interface com::sun::star::lang::XMultiServiceFactory; 
 
     
    // DocMerge from xml: service com::sun::star::lang::ServiceManager: interface com::sun::star::lang::XServiceInfo
    /** Services should always support this interface. For a 
                <type>RegistryServiceManager</type>, at least the service 
                "com.sun.star.lang.RegistryServiceManager" must be supported.
     */
    interface com::sun::star::lang::XServiceInfo; 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
    $Log: not supported by cvs2svn $
    Revision 1.1  2000/11/03 15:07:09  mi
    moved from api module
    
    Revision 1.2  2000/10/09 14:24:57  mi
    #78715# exchanged stardiv::... by com::sun::star::... (especially in @see tags)
    
    Revision 1.1.1.1  2000/09/18 23:35:25  hjs
    initial import
    
    Revision 1.7  2000/09/11 11:52:33  mi
    documentation merged from XML
     
    Revision 1.5  2000/02/07 11:24:39  mi 
    zu #70728# missing documentation marked 
     
    Revision 1.4  1999/11/18 12:13:30  mi 
    wrong #ifndef 
     
    Revision 1.3  1999/11/18 11:54:10  mi 
    wrong #ifndef 
     
    Revision 1.2  1999/11/18 11:49:57  mi 
    XComponent now in module lang 
     
    Revision 1.1.1.1  1999/11/11 09:48:43  jsc 
    new 
     
 
=============================================================================*/ 
#endif 
