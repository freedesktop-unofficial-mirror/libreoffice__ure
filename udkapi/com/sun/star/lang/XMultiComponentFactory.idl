/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XMultiComponentFactory.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 15:48:42 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_XMultiComponentFactory_idl__ 
#define __com_sun_star_lang_XMultiComponentFactory_idl__ 
 
#ifndef __com_sun_star_uno_XComponentContext_idl__
#include <com/sun/star/uno/XComponentContext.idl> 
#endif 


//=============================================================================

module com {  module sun {  module star {  module lang {

/** Factory interface for creating component instances giving a context from 
    which to retrieve deployment values.
    
    @see XInitialization 
*/
published interface XMultiComponentFactory : com::sun::star::uno::XInterface
{ 
    /** Creates an instance of a component which supports the
        services specified by the factory.
        
        @param aServiceSpecifier
               service name
        @param Context
               context the component instance gets its deployment values from
        @return
                component instance
    */
    com::sun::star::uno::XInterface createInstanceWithContext(
        [in] string aServiceSpecifier,
        [in] com::sun::star::uno::XComponentContext Context )
        raises (com::sun::star::uno::Exception);
    
    /** Creates an instance of a component which supports the
        services specified by the factory, and initializes the new instance
        with the given arguments and context.
        
        @param ServiceSpecifier
               service name
        @param Arguments
               arguments
        @param Context
               context the component instance gets its deployment values from
        @return
                component instance
    */
    com::sun::star::uno::XInterface createInstanceWithArgumentsAndContext(
        [in] string ServiceSpecifier, 
        [in] sequence<any> Arguments,
        [in] com::sun::star::uno::XComponentContext Context )
        raises (com::sun::star::uno::Exception);
    
    /** Gets the names of all supported services.
        
        @returns 
                 sequence of all service names
    */
    sequence< string > getAvailableServiceNames();
}; 
 
}; }; }; };  
 
#endif 
