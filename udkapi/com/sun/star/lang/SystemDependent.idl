/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: SystemDependent.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 15:46:01 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_SystemDependent_idl__ 
#define __com_sun_star_lang_SystemDependent_idl__ 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module lang {  
 
//============================================================================= 
 
// DocMerge from idl: constants com::sun::star::lang::SystemDependent
/** These constants are used to specify systems which depend on return values.  
         
    <p> You should avoid system-dependent methods if possible. 
     
    @example:C++ 
     
    <listing> 
    #ifdef __WINDOW	// Microsoft Windows 
    HWND	hWin = (HWND)xInterface->getWindowHandle(SystemDependentWIN32); 
    if( hWin ) ... 
    #elif( ... ) // other systems 
    ... 
    #endif 
    </listing> 

    <p>The Symbols are now prepended with SYSTEM_ thus we avoid collisions 
    with system headers.  </p>

    @see com::sun::star::awt::XSystemDependentWindowPeer
    @deprecated
 */
published constants SystemDependent
{ 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_WIN32
    /** The called interface method returns a value specified for the  
        32-bit Windows systems. 	 

        <p>These are Windows NT, Windows 95, Windows 98 or higher. </p>
     */
    const short SYSTEM_WIN32 = 1; 
 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_WIN16
    /** The called interface method returns a value specified for  
        the 16-bit Windows system.  
                 
        <p>This is Windows 3.11. </p>
     */
    const short SYSTEM_WIN16 = 2; 
 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_JAVA
    /** The called interface method returns a value specified for  the system java.  
                 
        <p>These are <em>JRE 1.1</em>, <em>JRE 1.2</em>, <em>JDK 1.1</em>,  
        <em>JDK 1.2</em> or higher.   </p>
         
        <p>The return should be a handle to a java object locked with 
        the call <code>JavaEnvironment->NewGlobalRef( ... )</code>  
        by the callee. </p>
     */
    const short SYSTEM_JAVA = 3; 
 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_OS2
    /** The called interface method returns a value specified for  the <em>OS/2</em> system.
     */
    const short SYSTEM_OS2 = 4; 
 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_MAC
    /** The called interface method returns a value specified for the <em>MAC-OS</em> system.
     */
    const short SYSTEM_MAC = 5; 
 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_XWINDOW
    /** The called interface method returns a value specified for the <em>X Window System</em>.
     */
    const short SYSTEM_XWINDOW = 6; 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
