/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XMultiServiceFactory.idl,v $
 *
 *  $Revision: 1.13 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 15:48:57 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_XMultiServiceFactory_idl__ 
#define __com_sun_star_lang_XMultiServiceFactory_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_uno_Exception_idl__ 
#include <com/sun/star/uno/Exception.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module lang {  
 
//============================================================================= 
 
/** Factories support this interface creating instances giving a name,
    e.g. a service name.
    
    <p>
    Note:
    Although this interface deals with the notion of "services", this is not
    generally be meant.  In general this interface can be used for all kinds
    of factories for all kinds of instances, indeed not only UNO services.
    </p>
*/
published interface XMultiServiceFactory: com::sun::star::uno::XInterface
{ 
    /** Creates an instance classified by the specified name.
        
        @param aServiceSpecifier
               classified name of instance
        @return
                instance
    */
    com::sun::star::uno::XInterface createInstance( [in] string aServiceSpecifier ) 
        raises( com::sun::star::uno::Exception ); 
    
    /** Creates an instance classified by the specified name and passes the arguments
        to that instance.
        
        @param ServiceSpecifier
               classified name of instance
        @param Arguments
               arguments passed to the instance
        @return
                instance
    */
    com::sun::star::uno::XInterface createInstanceWithArguments(
        [in] string ServiceSpecifier, 
        [in] sequence<any> Arguments ) 
        raises( com::sun::star::uno::Exception ); 
    
    /** Provides the available names of the factory to be used to create instances.
        
        @returns 
                 sequence of all names
    */
    sequence<string> getAvailableServiceNames();
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
