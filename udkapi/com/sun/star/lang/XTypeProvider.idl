/*************************************************************************
 *
 *  $RCSfile: XTypeProvider.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: mi $ $Date: 2000-12-13 15:47:01 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_XTypeProvider_idl__ 
#define __com_sun_star_lang_XTypeProvider_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_reflection_XIdlClass_idl__ 
#include <com/sun/star/reflection/XIdlClass.idl> 
#endif 
 
//============================================================================= 
 
module com {  module sun {  module star {  module lang {  
 
//============================================================================= 
 
// DocMerge from xml: interface com::sun::star::lang::XTypeProvider
/** interface to get information about the types 
    (usually interface types) supported by an object.
 */
[ uik(B163A7B0-C432-11d3-9F070050-04D8BBC7), ident( "XTypeProvider", 1.0 ) ]
interface XTypeProvider: com::sun::star::uno::XInterface
{ 
     
    // DocMerge from idl: method com::sun::star::lang::XTypeProvider::getTypes
    /** @returns 
            Sequence of all types (usually interface types) provided by the object. 
            Important: If the object aggregates other objects the sequence also has  
            to contain all types supportet by the aggregated objects.
     */
    sequence<TYPE_XIDLCLASS> getTypes(); 
 
     
    // DocMerge from idl: method com::sun::star::lang::XTypeProvider::getImplementationId
    /** @returns 
            a UUID as sequence of 16 bytes as an Id that can be used to unambiguously 
            distinguish between two sets of types, e.g. to realise hashing functionality 
            when the object is introspected. Two objects that return the same UUID also 
            have to return the same set of types in getTypes(). If an unique implementation 
            Id cannot be provided this method has to return an empty sequence. 
            Important: If the object aggregates other objects the UUID has to be unique 
            for the whole combination of objects.
     */
    sequence<byte> getImplementationId(); 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
    $Log: not supported by cvs2svn $
    Revision 1.4  2000/11/08 12:28:41  mi
    moved from api
    
    Revision 1.1.1.1  2000/09/18 23:35:25  hjs
    initial import
    
    Revision 1.3  2000/09/11 11:52:33  mi
    documentation merged from XML
     
    Revision 1.1  2000/01/14 10:57:01  jsc 
    #71616# Typumstellung 
     
     
 
=============================================================================*/ 
#endif 
 
 
