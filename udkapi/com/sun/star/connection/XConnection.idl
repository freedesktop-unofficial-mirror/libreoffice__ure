/*************************************************************************
 *
 *  $RCSfile: XConnection.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: mi $ $Date: 2001-11-16 14:25:39 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef _COM_SUN_STAR_CONNECTION_XCONNECTION_IDL_ 
#define _COM_SUN_STAR_CONNECTION_XCONNECTION_IDL_ 
 
#include <com/sun/star/io/IOException.idl> 
 
 
module com {  module sun {  module star {  module connection { 
 
/** A bidirectional bytestream.
    
    <p> You should additionally implement XConnection2.

    @see XConnection2
 */
interface XConnection: com::sun::star::uno::XInterface
{ 
     
    /** reads a requested number of bytes from the connection.
        <p> This method is blocking, meaning that it always returns a bytesequence
        with the requested number of bytes, unless it has reached end of file (which
        often means, that close() has been called).
        
        <p> please see also the readSomeBytes() method of XConnection2.
        
        @return The read number of bytes. 
                The return value and the length of the
                returned sequence must be identical.
        @param nBytesToRead
                The number of bytes to be read from the stream.

        @throws com::sun::star::io::IOException
               in case an error occurred during reading from the stream.
     */
    long read( [out] sequence < byte > aReadBytes , [in] long nBytesToRead ) 
            raises( com::sun::star::io::IOException ); 
 
     
    // DocMerge from xml: method com::sun::star::connection::XConnection::write
    /** writes the given bytesequence to the stream.
        <p>The method blocks until the whole sequence is written.

        @throws com::sun::star::io::IOException
               in case an error occurred during writing to the stream.
     */
    void write( [in] sequence < byte > aData ) 
        raises( com::sun::star::io::IOException ); 
 
 
    /** Empties all internal buffers.
     */
    void flush( ) 
            raises( com::sun::star::io::IOException ); 
 
    /** Immediately terminates any ongoing read or write calls.
        All subsequent read or write calls()
     */
    void close( ) 
            raises( com::sun::star::io::IOException ); 
     
     
    /** A unique string describing the connection. 

        <p>This string is different from the arguments to <member>XConnection::accept</member>
        and <member>XConnector::connect</member>. In general, the string contains an additional 
        handle value.  For example, "socket,host=localhost,port=2002,uniqueValue=2324". </p>
     */
    string getDescription(); 
}; 
 
};};};};  
 
#endif 
