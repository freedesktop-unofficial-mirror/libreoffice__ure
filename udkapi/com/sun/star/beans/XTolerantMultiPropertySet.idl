/*************************************************************************
 *
 *  $RCSfile: XTolerantMultiPropertySet.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: obo $ $Date: 2004-03-17 09:38:28 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_beans_XTolerantMultiPropertySet_idl__ 
#define __com_sun_star_beans_XTolerantMultiPropertySet_idl__ 
 

#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 

#ifndef __com_sun_star_beans_GetDirectPropertyTolerantResult_idl__ 
#include <com/sun/star/beans/GetDirectPropertyTolerantResult.idl> 
#endif 

#ifndef __com_sun_star_beans_GetPropertyTolerantResult_idl__ 
#include <com/sun/star/beans/GetPropertyTolerantResult.idl> 
#endif 

#ifndef __com_sun_star_beans_SetPropertyTolerantFailed_idl__ 
#include <com/sun/star/beans/SetPropertyTolerantFailed.idl> 
#endif 

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module beans {  
 
//============================================================================= 
 
/** provides access to multiple iformation of
    a set of properties with a single call.

    <p>The speciality of this interface is that none of the functions
    will throw the usual exceptions associated with setting and retrieving
    of property values. Instead the data for the failures is collected and
    returned.</p>

    <p>Note: There is no support for property change listeners in this
    interface.</p>

    @see com::sun::star::beans::XPropertySet
    @see com::sun::star::beans::XMultiPropertySet
 */
interface XTolerantMultiPropertySet : com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** sets the values to the properties with the specified names.
        
        @param aPropertyNames
            specifies the names of the properties. 
            The property names must be sorted ascending.

            <p>If the names are not sorted the behaviour of the method
            is undefined!</p>

        @param aPropertyValues
            specifies the values of the properties. 
            The order of the values has to be the same as in the
            <var>aPropertyNames</var> parameter int order to match
            the property name with its value.

        @returns
            An empty sequence if all properties are successfull set.

            Otherwise for every property value that could not successfully 
            be set an entry of the 
            <type scope="com::sun::star::beans">SetPropertyTolerantFailed</type>
            will be present in this sequence.
            The order of the properties is also alphabetically ascending.
        
        @throws IllegalArgumentException
            if the number of property names and values do not match.

     */
    sequence< com::sun::star::beans::SetPropertyTolerantFailed > setPropertyValuesTolerant( 
                [in] sequence< string > aPropertyNames, 
                [in] sequence< any >    aValues )
        raises( com::sun::star::lang::IllegalArgumentException );
 
    //------------------------------------------------------------------------- 
     
    /** retrieve the values of the specified properties
         
        <p>The count and order of the values in the returned sequence 
            will be the same as the order of the names in the argument.</p>

        @param aPropertyNames
            specifies the names of the properties. 
            The property names must be sorted ascending.

            <p>If the names are not sorted the behaviour of the method
            is undefined!</p>

        @returns
            a sequence of type
            <type scope="com::sun::star::beans">GetPropertyTolerantResult</type> 
            for each of the properties listed in <var>aPropertyNames</var>.
     */
    sequence< com::sun::star::beans::GetPropertyTolerantResult > getPropertyValuesTolerant( 
                [in] sequence< string > aPropertyNames );
 

    //------------------------------------------------------------------------- 

    /** retrieve only those values of the specified properties which
        are direct values.

        <p>Since the count of returned elements may be different from
        the number of supplied property names the returned elements
        will also state the name of the property.</p>

        @param aPropertyNames
            specifies the names of the properties. 
            The property names must be sorted ascending.

            <p>If the names are not sorted the behaviour of the method
            is undefined!</p>

        @returns
            a sequence of type
            <type scope="com::sun::star::beans">GetDirectPropertyTolerantResult</type> 
            but only for those properties supplied whoms state is
            <member scope="com::sun::star::beans::PropertyState">DIRECT_VALUE</member>.
     */
    sequence< com::sun::star::beans::GetDirectPropertyTolerantResult > getDirectPropertyValuesTolerant( 
                [in] sequence< string > aPropertyNames );

}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 

