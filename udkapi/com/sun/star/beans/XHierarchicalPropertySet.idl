/*************************************************************************
 *
 *  $RCSfile: XHierarchicalPropertySet.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: mi $ $Date: 2000-11-06 13:00:26 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_beans_XHierarchicalPropertySet_idl__ 
#define __com_sun_star_beans_XHierarchicalPropertySet_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_beans_XHierarchicalPropertySetInfo_idl__ 
#include <com/sun/star/beans/XHierarchicalPropertySetInfo.idl> 
#endif 
 
#ifndef __com_sun_star_beans_UnknownPropertyException_idl__ 
#include <com/sun/star/beans/UnknownPropertyException.idl> 
#endif 
 
#ifndef __com_sun_star_beans_PropertyVetoException_idl__ 
#include <com/sun/star/beans/PropertyVetoException.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module beans {  
 
//============================================================================= 
 
/** provides information about and access to the
    a hierarchy of properties from an implementation. 
    
    <p> Usually an object that implements this interface
        also implements <type>XPropertySet</type> and at 
        least some of the properties have subproperties.
    </p>
    <p> This interface allows direct access to subsubproperties, ...
        up to arbitrary nesting depth. Often the intermediate 
        elements of the hierarchy implement <type>XProperty</type>.
    </p>
    <p> Each implementation specifies how the 
        hierarchical property names, that are 
        used to access the elements of the hierarchy, 
        are formed.
    </p>
    <p> Commonly a notation similar to filesystem pathes
        (separated by '/' slashes) or nested module names
        (separated by dots '.' or '::') is used.
    </p>
    
 */
[ uik(7916BF21-A373-11D4-9F6A0050-DA6BA2A6), ident( "XHierarchicalPropertySet", 1.0 ) ]
interface XHierarchicalPropertySet: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** retrieve information about the hierarchy of properties

        @returns  
                the <type>XHierarchicalPropertySetInfo</type> interface, 
                which describes the property hierarchy of the object which 
                supplies this interface. 
                 
        @returns	 
                <NULL/> if the implementation cannot or will  
                not provide information about the properties; otherwise the  
                interface <type>XHierarchicalPropertySetInfo</type> is returned.
     */
    [const] com::sun::star::beans::XHierarchicalPropertySetInfo 
                getHierarchicalPropertySetInfo(); 
 
    //------------------------------------------------------------------------- 
     
    /** sets the value of the property with the specified nested name.
        
        @param	aHierarchicalPropertyName	 
                This parameter specifies the name of the property. 
         
        @param	aValue	 
                This parameter specifies the new value for the property. 
         
        @throws UnknownPropertyException	 
                if the property does not exist. 
         
        @throws PropertyVetoException  
                if the property is constrained and the change is vetoed by a 
                <type>XVetoableChangeListener</type>.
                
        @throws com::sun::star::uno::lang::IllegalArgumentException  
                if <var>aValue</var> is not a legal value for this property or 
                if <var>aHierarchicalPropertyName</var> is not a well-formed 
                nested name for this hierarchy.
            <p>	An implementation is not required to detect the latter
                condition </p>

        @throws com::sun::star::uno::lang::WrappedTargetException  
                if the implementation has an internal reason for the exception. 
                In this case the original exception is wrapped into that 
                <type scope="com::sun::star::uno::lang">WrappedTargetException</type>.
                
        @see XPropertySet::setPropertyValue
     */
    void setHierarchicalPropertyValue( [in] string aHierarchicalPropertyName, 
             [in] any aValue ) 
            raises( com::sun::star::beans::UnknownPropertyException, 
                    com::sun::star::beans::PropertyVetoException, 
                    com::sun::star::lang::IllegalArgumentException, 
                    com::sun::star::lang::WrappedTargetException ); 
 
    //------------------------------------------------------------------------- 
     
    /** @returns 
                the value of the property with the specified nested name. 
                 
        @param	aHierarchicalPropertyName	 
                This parameter specifies the name of the property. 
         
        @throws UnknownPropertyException	 
                if the property does not exist. 
         
        @throws com::sun::star::uno::lang::IllegalArgumentException  
                if <var>aHierarchicalPropertyName</var> is not a well-formed 
                nested name for this hierarchy.
            <p>	An implementation is not required to detect this
                condition </p>

        @throws com::sun::star::uno::lang::WrappedTargetException  
                if the implementation has an internal reason for the exception. 
                In this case the original exception is wrapped into that 
                <type scope="com::sun::star::uno::lang">WrappedTargetException</type>.
                
        @see XPropertySet::getPropertyValue
     */
    [const] any getHierarchicalPropertyValue( [in] string aHierarchicalPropertyName ) 
            raises( com::sun::star::beans::UnknownPropertyException, 
                    com::sun::star::lang::IllegalArgumentException, 
                    com::sun::star::lang::WrappedTargetException ); 
 
    //------------------------------------------------------------------------- 
     
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
    $Log: not supported by cvs2svn $
    Revision 1.1  2000/10/19 08:32:35  jb
    Added HierarchicalPropertySet Interfaces
    
 
=============================================================================*/ 
#endif 
