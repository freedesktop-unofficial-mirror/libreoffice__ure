/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XIntroTest.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 14:52:19 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_beans_XIntroTest_idl__
#define __com_sun_star_beans_XIntroTest_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_Property_idl__
#include <com/sun/star/beans/Property.idl>
#endif

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

#ifndef __com_sun_star_uno_TypeClass_idl__
#include <com/sun/star/uno/TypeClass.idl>
#endif

//=============================================================================

module com { module sun { module star { module beans { 

 published interface XPropertyChangeListener;
 published interface XPropertiesChangeListener;

//=============================================================================
/** This is a test interface for introspection.
    
    @deprecated
*/
published interface XIntroTest: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /**	contains the ID-String of the implementation.
     */
    [attribute] string	ObjectName;

    //-------------------------------------------------------------------------
    /**	contains the first name of a person.
     */
    [readonly, attribute] string	FirstName;

    //-------------------------------------------------------------------------
    /**	contains the last name of a person.
     */
    [readonly, attribute] string	LastName;

    //-------------------------------------------------------------------------
    /**	contains the age of a person.
     */
    [readonly, attribute] short		Age;

    //-------------------------------------------------------------------------
    /**	contains the number of children person has.
     */
    [attribute] short				ChildrenCount;

    //-------------------------------------------------------------------------
    /**	contains a struct of type <type>Property</type>.
     */
    [attribute] com::sun::star::beans::Property			FirstStruct;

    //-------------------------------------------------------------------------
    /**	contains a struct of type <type>PropertyValue</type>.
     */
    [attribute] com::sun::star::beans::PropertyValue	SecondStruct;

    //-------------------------------------------------------------------------
    /** output method.
    */
    void writeln( [in] string Text );

    //-------------------------------------------------------------------------
    /** ... 
    */
    long getDroenk();

    //-------------------------------------------------------------------------
    /** gets another object with this interface.
    */
    com::sun::star::beans::XIntroTest getIntroTest();

    //-------------------------------------------------------------------------
    /** !!! No property, because parameter exists
    */
    long getUps( [in] long l );

    //-------------------------------------------------------------------------
    /** ... 
    */
    void setDroenk( [in] long l );

    //-------------------------------------------------------------------------
    /** ... 
    */
    short getBla();

    //-------------------------------------------------------------------------
    /** !!! Not the set method for property Bla, because param type != return type.
    */
    void setBla( [in] long n );

    //-------------------------------------------------------------------------
    /** ... 
    */
    short getBlub();

    //-------------------------------------------------------------------------
    /** ... 
    */
    void setBlub( [in] short n );

    //-------------------------------------------------------------------------
    /** ... 
    */
    short getGulp();

    //-------------------------------------------------------------------------
    /** !!! Not the set method for property Gulp, because return type != void.
    */
    short setGulp( [in] short n );

    //-------------------------------------------------------------------------
    /** ... 
    */
    com::sun::star::uno::TypeClass getTypeClass( [in] short n );

    //-------------------------------------------------------------------------
    /** ... 
    */
    void setTypeClass( [in] com::sun::star::uno::TypeClass t,
             [in] double d1,
             [in] double d2 );

    //-------------------------------------------------------------------------
    sequence<string> getStrings();

    //-------------------------------------------------------------------------
    /** ... 
    */
    void setStrings( [in] sequence<string> Strings );

    //-------------------------------------------------------------------------
    /** ... 
    */
    void setStringsPerMethod( [in] sequence<string> Strings,
             [in] short n );

    //-------------------------------------------------------------------------
    sequence< sequence< sequence< short > > > getMultiSequence();

    //-------------------------------------------------------------------------
    /** ... 
    */
    void setMultiSequence( [in] sequence< sequence< sequence< short > > > Seq );

    //-------------------------------------------------------------------------
    /** adds a listener which is called, when one of the specified properties
        changes its value.

       <p>It is suggested to allow multiple registration of the same listener,
        thus for each time a listener is added, it has to be removed.
    */
    [oneway] void addPropertiesChangeListener( [in] sequence< string > PropertyNames,
             [in] XPropertiesChangeListener Listener );

    //-------------------------------------------------------------------------
    /** removes a listener.

       <p>It is suggested to allow multiple registration of the same listener,
        thus for each time a listener is added, it has to be removed.
    */
    [oneway] void removePropertiesChangeListener( [in] XPropertiesChangeListener Listener );

};

//=============================================================================

}; }; }; }; 

#endif
