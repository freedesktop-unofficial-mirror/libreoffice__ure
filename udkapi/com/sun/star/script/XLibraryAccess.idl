/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XLibraryAccess.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 16:18:58 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_script_XLibraryAccess_idl__ 
#define __com_sun_star_script_XLibraryAccess_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module script {  
 
//============================================================================= 
/** provides access to additional scripting code.
    
    <p>This code is organized in modules and these modules contain 
    the functions. It is possible to get just the code from a function, 
    but you can also get the whole code of a module with all functions in it.</p>
    @deprecated
 */
published interface XLibraryAccess: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
    /** returns <TRUE/>, if the function is accessible through this library; 
        otherwise it returns <FALSE/>. 
                 
                @param aFunctionName  
                the fully qualified name of a funtion. 
                (e.g., "UtilLibrary.ModuleDate.FunctionCurrentDate")
     */
    boolean isFunction( [in] string aFunctionName ); 
 
    //------------------------------------------------------------------------- 
    /** returns <TRUE/> if a fully qualified function name begins with this name. 
                 
                @param aPathName	 
                a part of a function name (e.g., "UtilLibrary").
     */
    boolean isValidPath( [in] string aPathName ); 
 
    //------------------------------------------------------------------------- 
    /** Return all module names which contain code. 
         e.g., { "UtilLibrary.ModuleDate", "UtilLibrary.Output", ... }
     */
    sequence<string> getModuleNames(); 
 
    //------------------------------------------------------------------------- 
    /** get the source code of a module.
     */
    string getModuleSource( [in] string aModulName ); 
 
    //------------------------------------------------------------------------- 
    /** Get the hole compiled code of a module. 
        
        @param ModuleName the full qualified name of a module. 
                            (e.g., "UtilLibrary.ModuleDate") 
        @return			an empty sequence, if this module is not found or the 
                            code is not compiled.
     */
    sequence<byte> getModuleCode( [in] string aModuleName ); 
 
    //------------------------------------------------------------------------- 
    /** get the source code of a function.
     */
    string getFunctionSource( [in] string aFunctionName ); 
 
    //------------------------------------------------------------------------- 
    /** Get the compiled code of a function. 
        
        @param FunctionName the full qualified name of a function. 
                            (e.g., "UtilLibrary.ModuleDate.Function.CurrentDate") 
        @return			an empty sequence, if this function is not found.
     */
    sequence<byte> getFunctionCode( [in] string FunctionName ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
