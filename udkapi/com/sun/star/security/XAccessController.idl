/*************************************************************************
 *
 *  $RCSfile: XAccessController.idl,v $
 *
 *  $Revision: 1.13 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-27 17:36:56 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_security_XAccessController_idl__ 
#define __com_sun_star_security_XAccessController_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl> 
#endif

#ifndef __com_sun_star_security_XAccessControlContext_idl__
#include <com/sun/star/security/XAccessControlContext.idl> 
#endif

#ifndef __com_sun_star_security_XAction_idl__
#include <com/sun/star/security/XAction.idl> 
#endif

#ifndef __com_sun_star_security_AccessControlException_idl__
#include <com/sun/star/security/AccessControlException.idl> 
#endif
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module security {  
 
//============================================================================= 
 
/** Interface for checking permissions and invoking privileged or restricted
    actions.
*/
interface XAccessController : com::sun::star::uno::XInterface
{
    /** Determines whether the access request indicated by the specified
        permission should be allowed or denied, based on the security policy
        currently in effect.
        The semantics are equivalent to the security permission classes of
        the Java platform.
        <p>
        You can also pass a sequence of permissions (sequence< any >) to check
        a set of permissions, e.g. for performance reasons.
        This method quietly returns if the access request is permitted,
        or throws a suitable AccessControlException otherwise.
        </p>
        
        @param perm
               permission to be checked
               
        @throws AccessControlException
                thrown if access is denied

        @see ::com::sun::star::security::AccessControlException
        @see ::com::sun::star::security::AllPermission
        @see ::com::sun::star::security::RuntimePermission
        @see ::com::sun::star::io::FilePermission
        @see ::com::sun::star::connection::SocketPermission
    */
    void checkPermission(
        [in] any perm )
        raises (AccessControlException);
    
    /** Perform the specified action restricting permissions to the given
        XAccessControlContext.
        The action is performed with the intersection of the permissions of the currently installed
        XAccessControlContext, the given XAccessControlContext and the security policy currently
        in effect.  The latter includes static security, e.g. based on user credentials.
        <p>
        If the specified XAccessControlContext is null, then the action is performed
        with unmodified permissions, i.e. the call makes no sense.
        </p>
        
        @param action
               action object to be executed
        @param restriction
               access control context to restrict permission; null for no restriction
        @return
                result
        @throws com::sun::star::uno::Exception
                any UNO exception may be thrown
    */
    any doRestricted(
        [in] XAction action,
        [in] XAccessControlContext restriction )
        raises (com::sun::star::uno::Exception);
    
    /** Perform the specified action adding a set of permissions defined by the given
        XAccessControlContext.
        The action is performed with the union of the permissions of the currently installed
        XAccessControlContext, the given XAccessControlContext and the security policy currently
        in effect.  The latter includes static security, e.g. based on user credentials.
        <p>
        If the given XAccessControlContext is null, then the action is performed
        <b>only</b> with the permissions of the security policy currently in effect.
        </p>
        
        @attention
        Do carefully use this method only for well known use-cases to avoid exploits!
        Script engines executing sandboxed scripts should generally deny calling this
        method.
        
        @param action
               action object to be executed
        @param restriction
               access control context to restrict permission; null for no restriction
        @return
                result
        @throws com::sun::star::uno::Exception
                any UNO exception may be thrown
    */
    any doPrivileged(
        [in] XAction action,
        [in] XAccessControlContext restriction )
        raises (com::sun::star::uno::Exception);
    
    /** This method takes a "snapshot" of the current calling context
        and returns it.
        <p>
        This context may then be checked at a later point, possibly in another thread.
        </p>
        @return
                snapshot of context
    */
    XAccessControlContext getContext();
};

//============================================================================= 

}; }; }; };

#endif
