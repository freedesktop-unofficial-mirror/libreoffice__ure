/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: Currency.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 15:06:00 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_bridge_oleautomation_Currency_idl__ 
#define __com_sun_star_bridge_oleautomation_Currency_idl__ 
 
 
module com {  module sun {  module star {  module bridge {  module oleautomation {
 
/** is the UNO representation of the Automation type <code>CY</code>, also know
    as <code>CURRENCY</code>.
    <p>
    A <code>CY</code> could actually be represented as <atom>hyper</atom> in UNO
    and therefore a typedef from <atom>hyper</atom> to a currency type would do.
    But a typedef cannot be expressed in all language bindings. In the case
    where no typedefs are supported the actual type is used. That is, a
    typedef'd currency type would be represented as <code>long</code> in Java.
    The information that the <code>long</code> is a currency type is lost. 
    </p>
    <p>
    When calling Automation objects from UNO the distinction between
    <atom>hyper</atom> and a currency type is important. Therefore
    <type>Currency</type> is declared as struct.
    </p>
    
    @since OOo 1.1.2
 */
struct Currency
{
    /** corresponds to the Automation type <code>CY</code>.
     */
    hyper Value;
}; 
 
}; }; }; }; }; 
 

#endif 
