/*************************************************************************
 *
 *  $RCSfile: Bridge.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: mi $ $Date: 2000-12-11 16:09:40 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_bridge_Bridge_idl__ 
#define __com_sun_star_bridge_Bridge_idl__ 

#ifndef __com_sun_star_lang_XInitialization_idl__ 
#include <com/sun/star/lang/XInitialization.idl>
#endif 

#ifndef __com_sun_star_lang_XComponent_idl__ 
#include <com/sun/star/lang/XComponent.idl>
#endif 

#ifndef __com_sun_star_bridge_XBridge_idl__ 
#include <com/sun/star/bridge/XBridge.idl>
#endif 
 
//============================================================================= 
 
module com {  module sun {  module star {  module bridge {  
 
//============================================================================= 
 
/** This meta service allows the bridgefactory service to instantiate an 
    interprocess bridge using a certain transfer protocol.

    <p> Components, that support a certain protocol, must have at least two
    service names: </p>

    <ul>
        <li> com.sun.star.bridge.Bridge </li>
        <li> arbitrary-module-path.ProtocolnameBridge </li>
    </ul>

    <p>The protocol name should be written as common servicenames, first letter is a
    capital letter, the rest in small letters postfixed by Bridge (e.g.:
    <code>com.sun.star.bridge.UrpBridge</code> would be correct servicename for the 
    "urp" protocol).  However, the protocol names are compared case insensitive.
    If there exist two services supporting the same protocol, it is arbitrary
    which one is chosen, so this should be omitted. </p>
 */
service Bridge
{ 
    /** allows to initialize the bridge service with the necessary
         arguments. The sequence&lt;any&gt; must have 4 members.
         
         <ol>
             <li> String: The unique name of the bridge or an empty string</li>
             <li> String: The protocol, that shall be instantiated</li>
             <li> XConnection: The bidirectional connection, the bridge should work on</li>
             <li> XInstanceProvider: 
                The instance provider, that shall be called to access the initial object.</li>
         </ol>
     */
    interface com::sun::star::lang::XInitialization;
    
    /** The main interface of the service
     */
    interface com::sun::star::bridge::XBridge;

    /** This interface allows to terminate the interprocess bridge.
     */
    interface com::sun::star::lang::XComponent;

}; 
 
//============================================================================= 
 
}; }; }; };  
#endif 
