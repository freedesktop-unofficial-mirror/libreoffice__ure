/*************************************************************************
 *
 *  $RCSfile: XIdlField2.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: mi $ $Date: 2002-12-10 10:31:35 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_reflection_XIdlField2_idl__ 
#define __com_sun_star_reflection_XIdlField2_idl__ 
 
#ifndef __com_sun_star_reflection_XIdlMember_idl__ 
#include <com/sun/star/reflection/XIdlMember.idl> 
#endif 
 
#ifndef __com_sun_star_reflection_XIdlClass_idl__ 
#include <com/sun/star/reflection/XIdlClass.idl> 
#endif 
 
#ifndef __com_sun_star_reflection_FieldAccessMode_idl__ 
#include <com/sun/star/reflection/FieldAccessMode.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalAccessException_idl__ 
#include <com/sun/star/lang/IllegalAccessException.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module reflection {  
 
//============================================================================= 
 
/** Reflects an IDL interface attribute, enum or compound type
    (i.e. struct/exception) member.
*/
interface XIdlField2: com::sun::star::reflection::XIdlMember
{ 
    /** Returns the type of the field.

        @return
                type of the field
    */
    com::sun::star::reflection::XIdlClass getType(); 
    
    /** Returns the access mode of the field, i.e. read-write, read-only or
        write-only (access mode "const" is deprecated).
        
        @return
                access mode of the field
    */
    com::sun::star::reflection::FieldAccessMode getAccessMode(); 
    
    /** Gets the value of the reflected field from the given object,
        i.e. an interface, enum or compound type (struct/exception).
        For enums, the given object is ignored; the returned value
        reflects the constant enum 32-bit value.
        
        @param obj
               object instance having member of reflected type
        @return
                value of field
                
        @throws IllegalAccessException
        An <type scope="com::sun::star::lang">IllegalAccessException</type>
        is thrown if the given object is no interface, enum or compound type;
        or the given object does not have the reflected field.
    */
    any get(
        [in] any obj ) 
        raises( com::sun::star::lang::IllegalArgumentException ); 
    
    /** Sets the value of the reflected field of the given object,
        i.e. an interface or compound type (struct/exception).
        
        @param obj
               object instance having member of reflected type
        @param value
               value to be set
               
        @throws IllegalAccessException
        An <type scope="com::sun::star::lang">IllegalAccessException</type>
        is thrown if the given object is no interface or compound type;
        or the given object does not have the reflected field.
    */
    void set(
        [inout] any obj, 
        [in] any value ) 
        raises( com::sun::star::lang::IllegalArgumentException, 
                com::sun::star::lang::IllegalAccessException );
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
    $Log: not supported by cvs2svn $
    Revision 1.3  2002/03/08 17:19:13  dbo
    #96711# reviewed reflection API documentation
    
    Revision 1.2  2001/11/16 15:02:57  mi
    proofing by Richard Holt
    
    Revision 1.1  2001/05/03 13:58:08  jsc
    new
    
 
=============================================================================*/ 
#endif 
