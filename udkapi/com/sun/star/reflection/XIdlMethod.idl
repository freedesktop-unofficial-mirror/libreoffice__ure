/*************************************************************************
 *
 *  $RCSfile: XIdlMethod.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: mi $ $Date: 2003-01-21 13:16:54 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_reflection_XIdlMethod_idl__ 
#define __com_sun_star_reflection_XIdlMethod_idl__ 
 
#ifndef __com_sun_star_reflection_XIdlMember_idl__ 
#include <com/sun/star/reflection/XIdlMember.idl> 
#endif 
 
#ifndef __com_sun_star_reflection_ParamInfo_idl__ 
#include <com/sun/star/reflection/ParamInfo.idl> 
#endif 
 
#ifndef __com_sun_star_reflection_MethodMode_idl__ 
#include <com/sun/star/reflection/MethodMode.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
#ifndef __com_sun_star_reflection_InvocationTargetException_idl__ 
#include <com/sun/star/reflection/InvocationTargetException.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module reflection {  
 
interface XIdlClass; 
 
//============================================================================= 
 
/** Reflects an IDL interface method.
*/
interface XIdlMethod: com::sun::star::reflection::XIdlMember
{ 
    /** Returns the return type of the reflected method.

        @return
                return type of reflected method
    */
    XIdlClass getReturnType(); 
    
    /** Returns the formal parameter types of the reflected method in order of IDL
        declaration.

        @return
                formal parameter types of reflected method
    */
    sequence<XIdlClass> getParameterTypes();
    
    /** Returns formal parameter informations of the reflected method
        in order of IDL declaration.
        Parameter information reflects the parameter's access mode (in, out, inout),
        the parameter's name and formal type.
        
        @return
                parameter informations of reflected method
    */
    sequence<ParamInfo> getParameterInfos(); 
    
    /** Returns the declared exceptions types of the reflected method.

        @return
                declared exception types of reflected method
    */
    sequence<com::sun::star::reflection::XIdlClass> getExceptionTypes(); 
    
    /** Returns the method mode in which calls are run, i.e. either oneway or
        twoway.  Method mode oneway denotes that a call may be run asynchronously
        (thus having no out parameters or return value)
        
        @return
                method mode of reflected method
    */
    com::sun::star::reflection::MethodMode getMode(); 
    
    /** Invokes the reflected method on a given object with the given parameters.
        The parameters may be widening converted to fit their exact IDL type,
        meaning no loss of information.
        
        @param obj
               object to call on
        @param args
               arguments passed to the method
        @return
                return value of the method call (may be empty for methods returning void)
                
        @throws IllegalArgumentException
        if the given object is a nuull reference or does not support the reflected
        method's interface
        @throws IllegalArgumentException
        if the given number of arguments differ from the expected number
        or the given arguments' types differ from the expected ones (even a
        widening conversion was not possible)
        @throws InvocationTargetException
        if the reflected method that has been invoked has thrown an exception.
        The original exception will be wrapped up and signalled by the
        InvocationTargetException
    */
    any invoke(
        [in] any obj, 
        [inout] sequence<any> args ) 
        raises( com::sun::star::lang::IllegalArgumentException, 
                com::sun::star::reflection::InvocationTargetException );
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
    $Log: not supported by cvs2svn $
    Revision 1.8  2002/03/08 17:19:13  dbo
    #96711# reviewed reflection API documentation
    
    Revision 1.7  2001/11/16 15:02:57  mi
    proofing by Richard Holt
    
    Revision 1.6  2001/03/16 15:10:38  jsc
    remove interfaceheader with uik and remove [const] in method definitions
    
    Revision 1.5  2000/12/19 13:49:36  mi
    syntax errors in documentation fixed
    
    Revision 1.4  2000/11/08 12:28:46  mi
    moved from api
    
    Revision 1.1.1.1  2000/09/18 23:35:32  hjs
    initial import
    
    Revision 1.5  2000/09/11 11:52:36  mi
    documentation merged from XML
     
    Revision 1.3  2000/04/20 14:09:39  mm 
    #74031# better documentation 
     
    Revision 1.2  2000/02/07 11:24:45  mi 
    zu #70728# missing documentation marked 
     
    Revision 1.1.1.1  1999/11/11 09:48:44  jsc 
    new 
     
 
=============================================================================*/ 
#endif 
