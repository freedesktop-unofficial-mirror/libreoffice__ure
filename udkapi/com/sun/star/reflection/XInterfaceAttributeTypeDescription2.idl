/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XInterfaceAttributeTypeDescription2.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 16:00:52 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_reflection_XInterfaceAttributeTypeDescription2_idl__
#define __com_sun_star_reflection_XInterfaceAttributeTypeDescription2_idl__

#include "com/sun/star/reflection/XInterfaceAttributeTypeDescription.idl"

module com {  module sun {  module star {  module reflection {

interface XCompoundTypeDescription;

/**
   Reflects a singleton, supporting interface-based singletons.

   <p>This type supersedes <type>XInterfaceAttributeTypeDescription</type>,
   which does not support extended attributes.</p>

   @since OOo 2.0.0
 */
interface XInterfaceAttributeTypeDescription2:
    XInterfaceAttributeTypeDescription
{
    /**
       Returns whether this object reflects a bound attribute.

       @return <TRUE/> iff this object reflects a bound attribute
     */
    boolean isBound();

    /**
       Returns the exceptions that can be raised by the attribute's getter.

       @return the reflections of all the exceptions that are listed in the
       <code>raises</code> specification of the attribute's getter (if any), in
       no particular order; all elements of the returned sequence will be
       reflections of exception types
     */
    sequence<XCompoundTypeDescription> getGetExceptions();

    /**
       Returns the exceptions that can be raised by the attribute's setter.

       @return the reflections of all the exceptions that are listed in the
       <code>raises</code> specification of the attribute's setter (if any), in
       no particular order; all elements of the returned sequence will be
       reflections of exception types
     */
    sequence<XCompoundTypeDescription> getSetExceptions();
};

}; }; }; };

#endif
