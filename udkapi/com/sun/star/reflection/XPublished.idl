/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XPublished.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 16:03:41 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_reflection_XPublished_idl__
#define __com_sun_star_reflection_XPublished_idl__

#include "com/sun/star/uno/XInterface.idl"

module com {  module sun {  module star {  module reflection {

/**
   Reflects the &ldquo;published&rdquo; status of a UNOIDL entity.

   <p>This interface is intended to be supported by objects that also support
   <type scope="com::sun::star::reflection">XTypeDescription</type>.
   (This interface could have been made an optional sub-interface of
   <type scope="com::sun::star::reflection">XTypeDescription</type>, but is
   instead kept independent for reasons of backwards compatibility.)</p>

   <p>For the various kinds of UNOIDL entities that are represented by objects
   supporting <type scope="com::sun::star::reflection">XTypeDescription</type>
   and its subtypes, this optional interface should be supported as follows:</p>
   <ul>
       <li>Enum types
       (<type scope="com::sun::star::reflection">XEnumTypeDescription</type>),
       plain struct types
       (<type scope="com::sun::star::reflection">XStructTypeDescription</type>),
       polymorphic struct type templates
       (<type scope="com::sun::star::reflection">XStructTypeDescription</type>),
       exception types (<type
       scope="com::sun::star::reflection">XCompoundTypeDescription</type>),
       interface types (<type
       scope="com::sun::star::reflection">XInterfaceTypeDescription2</type>),
       typedefs (<type
       scope="com::sun::star::reflection">XIndirectTypeDescription</type>),
       individual constants (<type
       scope="com::sun::star::reflection">XConstantTypeDescription</type>),
       constant groups (<type
       scope="com::sun::star::reflection">XConstantsTypeDescription</type>),
       single-interface&ndash;based services (<type
       scope="com::sun::star::reflection">XServiceTypeDescription2</type>),
       accumulation-based services (<type
       scope="com::sun::star::reflection">XServiceTypeDescription2</type>),
       interface-based singletons (<type
       scope="com::sun::star::reflection">XSingletonTypeDescription2</type>),
       and service-based singletons (<type
       scope="com::sun::star::reflection">XSingletonTypeDescription2</type>)
       support the notion of being published.  Therefore, for an object that
       represents any such entity,
       <type scope="com::sun::star::reflection">XPublished</type> should be
       supported.</li>

       <li>Sequence types (<type
       scope="com::sun::star::reflection">XIndirectTypeDescription</type>),
       type parameters of polymorphic struct type templates
       (<type scope="com::sun::star::reflection">XTypeDescription</type>),
       instantiated polymorphic struct types
       (<type scope="com::sun::star::reflection">XStructTypeDescription</type>),
       attributes of interface types (<type scope="com::sun::star::reflection">
       XInterfaceAttributeTypeDescription2</type>), methods of interface types
       (<type scope="com::sun::star::reflection">
       XInterfaceMethodTypeDescription</type>), properties of
       accumulation-based services (<type
       scope="com::sun::star::reflection">XPropertyTypeDescription</type>),
       deprecated
       <type scope="com::sun::star::reflection">XArrayTypeDescription</type>s,
       and deprecated
       <type scope="com::sun::star::reflection">XUnionTypeDescription</type>s do
       not support the notion of being published.  Therefore, for an object that
       represents any such entity,
       <type scope="com::sun::star::reflection">XPublished</type> should not be
       supported.</li>
   </ul>

   @since OOo 2.0.0
*/
interface XPublished {
    /**
       Returns the &ldquo;published&rdquo; status of a UNOIDL entity.

       @return <TRUE/> if the UNOIDL entity represented by this object is
       published
     */
    boolean isPublished();
};

}; }; }; };

#endif
