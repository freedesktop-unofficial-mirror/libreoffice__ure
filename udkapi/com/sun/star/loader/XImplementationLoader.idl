/*************************************************************************
 *
 *  $RCSfile: XImplementationLoader.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: mi $ $Date: 2003-01-16 09:35:58 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_loader_XImplementationLoader_idl__ 
#define __com_sun_star_loader_XImplementationLoader_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_registry_XRegistryKey_idl__ 
#include <com/sun/star/registry/XRegistryKey.idl> 
#endif 
 
#ifndef __com_sun_star_registry_CannotRegisterImplementationException_idl__ 
#include <com/sun/star/registry/CannotRegisterImplementationException.idl> 
#endif 
 
#ifndef __com_sun_star_loader_CannotActivateFactoryException_idl__ 
#include <com/sun/star/loader/CannotActivateFactoryException.idl> 
#endif 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module loader {  
 
//============================================================================= 
 
/** handles activation (loading) of a UNO component.
    @see		com::sun::star::registry::XImplementationRegistration
 */
interface XImplementationLoader: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** activates a concrete implementation within a component.
        @param implementationName The name of the implementation,
               which shall be instantiated. The method
               <member>XImplementationLoader::writeRegistryInfo</member>
               writes a list of implementation names hosted by this component.
        @param implementationLoaderUrl specification bug, ignore this parameter, please
               pass an empty string.
        @param locationUrl Points to the location of the file containing
               the component (for instance a .jar-file or a shared library).
               This parameter
               should be in an URL format (= protocol:protocol-dependent-part).
               In case the string contains no
               leading "protocol:", the implementation in general assumes,
               that it is a relative file url. <p>Special loaders may define
               their own protocol (for instance an executable loader may need
               more than only one file url).
               
        @param xKey A registry which may be used to read static data previously
               written via <method>XImplementationLoader::writeRegistryInfo()</method>.
               The use of this parameter is deprecated.
               
        @return returns a factory interface, which allows to create an instance of
                the concrete implementation. In general, the object supports a
                <type scope="com::sun::star::lang">XSingleComponentFactory</type>
                and the <type scope="com::sun::star::lang">XServiceInfo</type> interface. The
                XServiceInfo interface informs about the capabilities of the
                service implementation, not the factory itself.            
     */
    com::sun::star::uno::XInterface activate( [in] string implementationName, 
             [in] string implementationLoaderUrl, 
             [in] string locationUrl, 
             [in] com::sun::star::registry::XRegistryKey xKey ) 
            raises( com::sun::star::loader::CannotActivateFactoryException ); 
 
    //------------------------------------------------------------------------- 
    /** writes a list of all implementations hosted by this component into a registry key.
        <p>This method is called during registering a component.
        @param xKey The registry key, which shall be used to write for each
                    implementation the implementation name plus a list of supported
                    services.
        @param implementationLoaderUrl specification bug, ignore this parameter, please
               pass an empty string.
        @param locationUrl Points to the location of the file containing
               the component (for instance a .jar-file or a shared library).
               This parameter
               should be in an URL format (= protocol:protocol-dependent-part).
               In case the string contains no
               leading &quot;protocol:&quot;, the implementation in general assumes,
               that it is a relative file url. <p>Special loaders may define
               their own protocol (for instance an executable loader may need
               more than only one file url).
        @see com::sun::star::registry::XImplementationRegistration
     */
    boolean writeRegistryInfo( [in] com::sun::star::registry::XRegistryKey xKey, 
             [in] string implementationLoaderUrl, 
             [in] string locationUrl ) 
            raises( com::sun::star::registry::CannotRegisterImplementationException ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
