/*************************************************************************
 *
 *  $RCSfile: NestedRegistry.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: mi $ $Date: 2002-12-11 13:29:23 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_registry_DefaultRegistry_idl__ 
#define __com_sun_star_registry_DefaultRegistry_idl__ 
 
#ifndef __com_sun_star_registry_XSimpleRegistry_idl__ 
#include <com/sun/star/registry/XSimpleRegistry.idl> 
#endif 
#ifndef __com_sun_star_lang_XInitialization_idl__ 
#include <com/sun/star/lang/XInitialization.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module registry {  
 
//============================================================================= 
 
// DocMerge from xml: service com::sun::star::registry::NestedRegistry
/** supports a shared view on two different registries. The registry 
    files will be opened in two different modes, registry1 will be opened with read/write 
    rights and registry2 will be opened read-only.
    In the context of this service, the functions <code>open</code>, <code>close</code>, 
    and <code>destroy</code> from <type>XSimpleRegistry</type> are not supported and 
    throw an exception if they are used. 
    <dl>
    <dt>Functions of <type>XSimpleRegistry</type>:
    <dl>
    <dt>	<b>getURL</b> 
    </dt>
    <dd> returns the name of registry1.
    
    </dd>
    <dt>	<b>isValid</b> 
    </dt>
    <dd> checks if registry1 is valid. If the interface is not <NULL/>
    then registry1 should always be valid. 
    
    </dd>
    <dt>	<b>isReadOnly</b> 
    </dt>
    <dd> checks if registry1 has write protection.
    </dd>
    <dt>	<b>mergeKey</b> 
    </dt>
    <dd> merges all information from the specified registry in registry1.
    
    </dd>
    <dt>	<b>getRootKey</b> 
    </dt>
    <dd> returns a virtual rootkey of both registries.
    </dd>
    </dl>   
    
    <br>
    
    </dt>
    <dt>Functions of <type>XRegistryKey</type>:
    <dl>
    <dt> <b>openKey</b> 
    </dt>
    <dd> returns a virtual key which is specified in registy1 or registry2.
    
    </dd>
    <dt> <b>deleteKey</b> 
    </dt>
    <dd> deletes the key only if it is present in registry1.
    
    </dd>
    <dt> <b>setLongValue, setAsciiValue, setStringValue, setBinaryValue</b> 
    </dt>
    <dd> sets the value at the specified key in registry1.
    
    </dd>
    <dt> <b>getLongValue, getAsciiValue, getStringValue, getBinaryValue</b> 
    </dt>
    <dd> returns the value at the specified key in registry1, or if 
    the value is not present in registry1, it will return the value of registry2.
    
    </dd>
    <dt> <b>openKeys</b> 
    </dt>
    <dd> returns a sequence of all subkeys in both registries.
    
    </dd>
    <dt> <b>getKeyNames</b> 
    </dt>
    <dd> returns a sequence with the names of all subkeys in both 
    registries.
    
    </dd>
    <dt>
    <br>
    <b>Note: all write functions only work on registry1.</b>
    </dt>
    </dl>
    </dt>
    </dl>
    <br>
    How to initialize the registries:<br>
    Use a sequence of <type>XSimpleRegistry</type> with two elements. The first element must be 
    the registry which is opened with read/write rights and the second element must be 
    the read-only one.<br>
    Two different ways are possible:<br>
    <ul>
    <li> use <method scope="com::sun::star::lang">XMultiServiceFactory::createInstanceWithArguments()</method> to
    create an instance of this service where the value of the any parameter must be the sequence with
    the two open registries.
    <li> use the initialize function of the <type scope="com::sun::star::lang">XInitialization</type> interface where the value of the 
    any parameter must be the sequence with the two open registries.
    </ul>
    <br>
    
    
    Guarantees:
    <ul>
    <li>-thread safe</li>
    </ul>
 */
service NestedRegistry
{ 
    // DocMerge: empty anyway
    interface com::sun::star::registry::XSimpleRegistry; 
    
    // DocMerge: empty anyway
    interface com::sun::star::lang::XInitialization; 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
