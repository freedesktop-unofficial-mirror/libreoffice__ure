/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XUnloadingPreference.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 16:35:31 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_uno_XUnloadingPreference_idl__ 
#define __com_sun_star_uno_XUnloadingPreference_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
  
//============================================================================= 
 
module com {  module sun {  module star {  module uno {  
 
//============================================================================= 
/** Components can implement <code>XUnloadingPreference</code> in order to indicate
    how they should be treated when their hosting library is to be unloaded.

   When someone calls <code>rtl_unloadUnusedModules</code> then the unloading
    listeners are notified by calling previously registered callback
    functions. A listener is an entity that employs, registers, and
    unregisters the callback functions on its behalf. Upon notification
    (the callback function is being called) 
    a listener may release references to UNO components. Thus, the
    loaded libraries can be unloaded, if no one else keeps any 
    objects from the library alive. <br>
    Before a listener releases references, it should ask for this interface.
    If the interface is not implemented, then the listener may release the
    object; otherwise, it calls <code>releaseOnNotification</code>. If the function
    returns false then the listener should keep the reference, otherwise 
    it may release it.
*/
published interface XUnloadingPreference: com::sun::star::uno::XInterface
{ 
    /**
        The return value determines if the object wants to stay
        alive in case of an unloading procedure.
        @return 
        <FALSE/>do not release references to this object,otherwise
        <TRUE/>
    */
    boolean releaseOnNotification();
}; 
//============================================================================= 
 
}; }; }; };  
 
#endif 
