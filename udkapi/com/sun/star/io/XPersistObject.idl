/*************************************************************************
 *
 *  $RCSfile: XPersistObject.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: mi $ $Date: 2003-01-16 09:32:35 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_io_XPersistObject_idl__ 
#define __com_sun_star_io_XPersistObject_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_io_IOException_idl__ 
#include <com/sun/star/io/IOException.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module io {  
 
interface XObjectInputStream; 
interface XObjectOutputStream; 
 
//============================================================================= 
 
/** allows to make UNO objects persistent

  <p>Every UNO object, that wants to be serializable, should implement
     this interface. The object stores stores itself, when the
     write method is called.
     <p>
     The object needs to be created before it deserializes
     itself again (by using the read method). Therefor it must be
     createable by name via a factory, which is in general
     the global service manager. The create and read mechanism
     is implemented by the <type scope="com::sun::star::io">ObjectInputStream</type>.

     <p>The serialization format (the series of strings, integers, objects) must
     be specified at the specification of the concrete service.

     <p>The interface does not support any special versioning mechanism.

     @see com::sun::star::io::XObjectOutputStream
     @see com::sun::star::io::XObjectInputStream
 */
interface XPersistObject: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** gives the service name of the object

      @returns  
            the service name that specifies the behavior and the  
            persistent data format of this implementation.  
         
        <p>This name is used to create such an object by a factory
        during deserialization. </p>
         
        @see com::sun::star::lang::XServiceInfo::getAvailableServiceNames
     */
    string getServiceName(); 
 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::XPersistObject::write
    /** writes all the persistent data of the object to the stream.
        <p>The implementation
        must write the data in the order documented in the service specification.
        @param OutStream the stream, the data shall be written to. The stream
               supports simple types and other XPersistObject implementations.
     */
    void write( [in] com::sun::star::io::XObjectOutputStream OutStream ) 
            raises( com::sun::star::io::IOException ); 
 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::XPersistObject::read
    /** reads all the persistent data of the object from the stream.
        <p>In case
        other XPersistObjects are read from the stream, the implementation uses a factory
        to create these objects (in general the global service manager).
        <p> The implementation must read the data in the order documented at
        the service specification.
        @param InStream the stream, the data shall be read from. 
     */
    void read( [in] com::sun::star::io::XObjectInputStream InStream ) 
            raises( com::sun::star::io::IOException ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
