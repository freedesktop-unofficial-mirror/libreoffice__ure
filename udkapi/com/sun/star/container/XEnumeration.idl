/*************************************************************************
 *
 *  $RCSfile: XEnumeration.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-27 17:34:59 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_container_XEnumeration_idl__ 
#define __com_sun_star_container_XEnumeration_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_container_NoSuchElementException_idl__ 
#include <com/sun/star/container/NoSuchElementException.idl> 
#endif 
 
#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module container {  
 
//============================================================================= 
 
/** provides functionality to enumerate the contents of a container.
    
    <p>An object that implements the <type>XEnumeration</type> interface
    generates a series of elements, one at a time. Successive calls to
    the <code>XEnumeration::nextElement</code> method return successive 
    elements of the series.  </p>

    <p>For example (Java), to print all elements of a vector <var>aVect</var>: 
    </p>

    <listing>
    for ( XEnumeration xEnum = aVect.elements() ; 
    xEnum.hasMoreElements() ; ) 
    {
    System.out.println( xEnum.nextElement() );
    }
    </listing>
    
    
    <p> If the object changed, the behavior of the enumeration is 
    not specified. This is not a remote interface.  </p>
 */
interface XEnumeration: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** tests whether this enumeration contains more elements.
     */
    boolean hasMoreElements(); 
 
    //------------------------------------------------------------------------- 
     
    /** @returns      
            the next element of this enumeration.  
                 
        @throws  NoSuchElementException   
            if no more elements exist. 
                 
        @throws  com::sun::star::lang::WrappedTargetException  
            If the implementation has internal reasons for exceptions,  
            then wrap these in a <type scope="com::sun::star::lang">WrappedTargetException</type> 
            exception.
     */
    any nextElement() 
            raises( com::sun::star::container::NoSuchElementException, 
                    com::sun::star::lang::WrappedTargetException ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
