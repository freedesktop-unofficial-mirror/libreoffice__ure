/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: udk-modules.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-09 14:42:19 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_modules_idl__ 
#define __com_sun_star_modules_idl__ 

module com { module sun { module star { 

/// Java beans-like property access and introspection.
module beans{};

/// Interfaces for building bridges to other component models.
module bridge {};

/// Data exchange interfaces for inter-process communication.
module connection {};

/// Interfaces for collections and containers.
module container {};

/// Modules for IOP, IIOP and GIOP.
module corba {};

/// General input/output interfaces.
module io {};

/// Java to UNO connectivity interfaces.
module java {};

/// General UNO concepts like factories etc.
module lang {};

/// Component implementation loader interfaces.
module loader {};

/// Runtime object inspection / core reflection interfaces.
module reflection {};

/// Interfaces to access registration databases.
module registry {};

/// Scripting language bindings.
module script {};

/// Interface for authorisation and authentification.
module security {};

/// Test interfaces for core-reflection, introspection and marshalling.
module test {};

/// Basic UNO interfaces.
module uno {};

/// URI processing.
module uri {};

}; }; };

#endif
