#*************************************************************************
#
#   OpenOffice.org - a multi-platform office productivity suite
#
#   $RCSfile: readme,v $
#
#   $Revision: 1.3 $
#
#   last change: $Author: rt $ $Date: 2005-09-07 23:01:27 $
#
#   The Contents of this file are made available subject to
#   the terms of GNU Lesser General Public License Version 2.1.
#
#
#     GNU Lesser General Public License Version 2.1
#     =============================================
#     Copyright 2005 by Sun Microsystems, Inc.
#     901 San Antonio Road, Palo Alto, CA 94303, USA
#
#     This library is free software; you can redistribute it and/or
#     modify it under the terms of the GNU Lesser General Public
#     License version 2.1, as published by the Free Software Foundation.
#
#     This library is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     Lesser General Public License for more details.
#
#     You should have received a copy of the GNU Lesser General Public
#     License along with this library; if not, write to the Free Software
#     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
#     MA  02111-1307  USA
#
#*************************************************************************

Test that a Java URP bridge started in a native process uses the same thread
pool as a C++ URP bridge.  This test currently only works on Linux Intel.

There are two processes involved.  The client starts as a native process.  It
first loads a Java component (Relay) via the in-process JNI bridge, which in
turn starts to accept incomming URP connections.  The native part of the client
then connects to the server, retrieves a thread-local token from it, and checks
the token for correctness.  The server simply waits for a connection from the
native part of the client, creates a connection to the Java part of the client,
and routes all requests from the native part of the client to the Java part of
the client.  The Java part of the client in turn uses the in-process JNI bridge
to obtain the thread-local token.
