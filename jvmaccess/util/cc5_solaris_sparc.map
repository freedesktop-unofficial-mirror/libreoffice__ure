#*************************************************************************
#
#   $RCSfile: cc5_solaris_sparc.map,v $
#
#   $Revision: 1.8 $
#
#   last change: $Author: obo $ $Date: 2005-07-07 10:54:08 $
#
#   The Contents of this file are made available subject to the terms of
#   either of the following licenses
#
#          - GNU Lesser General Public License Version 2.1
#          - Sun Industry Standards Source License Version 1.1
#
#   Sun Microsystems Inc., October, 2000
#
#   GNU Lesser General Public License Version 2.1
#   =============================================
#   Copyright 2000 by Sun Microsystems, Inc.
#   901 San Antonio Road, Palo Alto, CA 94303, USA
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public
#   License version 2.1, as published by the Free Software Foundation.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public
#   License along with this library; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston,
#   MA  02111-1307  USA
#
#
#   Sun Industry Standards Source License Version 1.1
#   =================================================
#   The contents of this file are subject to the Sun Industry Standards
#   Source License Version 1.1 (the "License"); You may not use this file
#   except in compliance with the License. You may obtain a copy of the
#   License at http://www.openoffice.org/license.html.
#
#   Software provided under this License is provided on an "AS IS" basis,
#   WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#   WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#   MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#   See the License for the specific provisions governing your rights and
#   obligations concerning the Software.
#
#   The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#   Copyright: 2005 by Sun Microsystems, Inc.
#
#   All Rights Reserved.
#
#   Contributor(s): _______________________________________
#
#
#*************************************************************************

UDK_3.1 {
    global:
        # jvmaccess/virtualmachine.hxx:
        __1cJjvmaccessOVirtualMachineLAttachGuardRCreationException2t6M_v_; # jvmaccess::VirtualMachine::AttachGuard::CreationException::CreationException()
        __1cJjvmaccessOVirtualMachineLAttachGuardRCreationException2t6Mrk3_v_; # jvmaccess::VirtualMachine::AttachGuard::CreationException::CreationException(CreationException const &)
        __1cJjvmaccessOVirtualMachineLAttachGuardRCreationException2T6M_v_; # jvmaccess::VirtualMachine::AttachGuard::CreationException::~CreationException()
        __1cJjvmaccessOVirtualMachineLAttachGuardRCreationException2G6Mrk3_r3_; # jvmaccess::VirtualMachine::AttachGuard::CreationException::operator =(CreationException const &)
        __1cJjvmaccesscO__RTTI__1nJjvmaccessOVirtualMachineLAttachGuardRCreationException__; # RTTI for jvmaccess::VirtualMachine::AttachGuard::CreationException
        __1cJjvmaccessOVirtualMachineLAttachGuard2t6MrknDrtlJReference4n0B____v_; # jvmaccess::VirtualMachine::AttachGuard::AttachGuard(rtl::Reference< VirtualMachine > const &)
        __1cJjvmaccessOVirtualMachineLAttachGuard2t5B6MrknDrtlJReference4n0B____v_; # jvmaccess::VirtualMachine::AttachGuard::AttachGuard(rtl::Reference< VirtualMachine > const &) #Nvariant 1
        __1cJjvmaccessOVirtualMachineLAttachGuard2T6M_v_; # jvmaccess::VirtualMachine::AttachGuard::~AttachGuard()
        __1cJjvmaccessOVirtualMachineLAttachGuard2T5B6M_v_; # jvmaccess::VirtualMachine::AttachGuard::~AttachGuard() #Nvariant 1
        __1cJjvmaccessOVirtualMachine2t6MpnHJavaVM__ibpnHJNIEnv___v_; # jvmaccess::VirtualMachine::VirtualMachine(JavaVM *, int, bool, JNIEnv *)

    local:
        *;
};

UDK_3.2 {
    global:
        # initially forgotten jvmaccess/virtualmachine.hxx:
        __1cJjvmaccessOVirtualMachineLAttachGuardRCreationException2t5B6M_v_; # jvmaccess::VirtualMachine::AttachGuard::CreationException::CreationException() #Nvariant 1
        __1cJjvmaccessOVirtualMachineLAttachGuardRCreationException2t5B6Mrk3_v_; # jvmaccess::VirtualMachine::AttachGuard::CreationException::CreationException(CreationException const &) #Nvariant 1
        __1cJjvmaccessOVirtualMachineLAttachGuardRCreationException2T5B6M_v_; # jvmaccess::VirtualMachine::AttachGuard::CreationException::~CreationException() #Nvariant 1
        __1cJjvmaccesscQ__RTTI__1CpnJjvmaccessOVirtualMachineLAttachGuardRCreationException__; # RTTI for jvmaccess::VirtualMachine::AttachGuard::CreationException *
        __1cJjvmaccesscR__RTTI__1CpknJjvmaccessOVirtualMachineLAttachGuardRCreationException__; # RTTI for jvmaccess::VirtualMachine::AttachGuard::CreationException const *
        __1cJjvmaccessOVirtualMachine2t5B6MpnHJavaVM__ibpnHJNIEnv___v_; # jvmaccess::VirtualMachine::VirtualMachine(JavaVM *, int, bool, JNIEnv *) #Nvariant 1
} UDK_3.1;

UDK_3.3 {
    global:
        # jvmaccess/unovirtualmachine.hxx:
        __1cJjvmaccessRUnoVirtualMachineRCreationException2t6M_v_; # jvmaccess::UnoVirtualMachine::CreationException::CreationException()
        __1cJjvmaccessRUnoVirtualMachineRCreationException2t5B6M_v_; # jvmaccess::UnoVirtualMachine::CreationException::CreationException() #Nvariant 1
        __1cJjvmaccessRUnoVirtualMachineRCreationException2t6Mrk2_v_; # jvmaccess::UnoVirtualMachine::CreationException::CreationException(CreationException const &)
        __1cJjvmaccessRUnoVirtualMachineRCreationException2t5B6Mrk2_v_; # jvmaccess::UnoVirtualMachine::CreationException::CreationException(CreationException const &) #Nvariant 1
        __1cJjvmaccessRUnoVirtualMachineRCreationException2T6M_v_; # jvmaccess::UnoVirtualMachine::CreationException::~CreationException()
        __1cJjvmaccessRUnoVirtualMachineRCreationException2T5B6M_v_; # jvmaccess::UnoVirtualMachine::CreationException::~CreationException() #Nvariant 1
        __1cJjvmaccessRUnoVirtualMachineRCreationException2G6Mrk2_r2_; # jvmaccess::UnoVirtualMachine::CreationException::operator =(CreationException const &)
        __1cJjvmaccesscF__RTTI__1nJjvmaccessRUnoVirtualMachineRCreationException__; # RTTI for jvmaccess::UnoVirtualMachine::CreationException
        __1cJjvmaccesscH__RTTI__1CpnJjvmaccessRUnoVirtualMachineRCreationException__; # RTTI for jvmaccess::UnoVirtualMachine::CreationException *
        __1cJjvmaccesscI__RTTI__1CpknJjvmaccessRUnoVirtualMachineRCreationException__; # RTTI for jvmaccess::UnoVirtualMachine::CreationException const *
        __1cJjvmaccessRUnoVirtualMachine2t6MrknDrtlJReference4n0AOVirtualMachine___pv_v_; # jvmaccess::UnoVirtualMachine::UnoVirtualMachine(rtl::Reference< jvmaccess::VirtualMachine > const &, void *)
        __1cJjvmaccessRUnoVirtualMachine2t5B6MrknDrtlJReference4n0AOVirtualMachine___pv_v_; # jvmaccess::UnoVirtualMachine::UnoVirtualMachine(rtl::Reference< jvmaccess::VirtualMachine > const &, void *) #Nvariant 1
        __1cJjvmaccessRUnoVirtualMachineRgetVirtualMachine6kM_nDrtlJReference4n0AOVirtualMachine____; # jvmaccess::UnoVirtualMachine::getVirtualMachine() const
        __1cJjvmaccessRUnoVirtualMachineOgetClassLoader6kM_pv_; # jvmaccess::UnoVirtualMachine::getClassLoader() const
} UDK_3.2;
