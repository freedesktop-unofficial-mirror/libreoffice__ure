#*************************************************************************
#
#   OpenOffice.org - a multi-platform office productivity suite
#
#   $RCSfile: methodoverload.tests,v $
#
#   $Revision: 1.4 $
#
#   last change: $Author: kz $ $Date: 2006-11-06 14:41:44 $
#
#   The Contents of this file are made available subject to
#   the terms of GNU Lesser General Public License Version 2.1.
#
#
#     GNU Lesser General Public License Version 2.1
#     =============================================
#     Copyright 2005 by Sun Microsystems, Inc.
#     901 San Antonio Road, Palo Alto, CA 94303, USA
#
#     This library is free software; you can redistribute it and/or
#     modify it under the terms of the GNU Lesser General Public
#     License version 2.1, as published by the Free Software Foundation.
#
#     This library is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     Lesser General Public License for more details.
#
#     You should have received a copy of the GNU Lesser General Public
#     License along with this library; if not, write to the Free Software
#     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
#     MA  02111-1307  USA
#
#*************************************************************************

EXPECT FAILURE "methodoverload.tests 1":
interface Derived {
	void f();
	void f();
};


EXPECT FAILURE "methodoverload.tests 2":
interface Base {
	void f();
};
interface Derived {
	interface Base;
	void f();
};


EXPECT FAILURE "methodoverload.tests 3":
interface Base {
	void f();
};
interface Derived {
	void f();
	interface Base;
};


EXPECT FAILURE "methodoverload.tests 4":
interface Base {
	void f();
};
interface Derived {
	[optional] interface Base;
	void f();
};


EXPECT FAILURE "methodoverload.tests 5":
interface Base {
	void f();
};
interface Derived {
	void f();
	[optional] interface Base;
};


EXPECT FAILURE "methodoverload.tests 6":
interface Base1 {
	void f();
};
interface Base2 {
	void f();
};
interface Derived {
	interface Base1;
	interface Base2;
};


EXPECT FAILURE "methodoverload.tests 7":
interface Base1 {
	void f();
};
interface Base2 {
	void f();
};
interface Derived {
	[optional] interface Base1;
	interface Base2;
};


EXPECT FAILURE "methodoverload.tests 8":
interface Base1 {
	void f();
};
interface Base2 {
	void f();
};
interface Derived {
	interface Base1;
	[optional] interface Base2;
};


EXPECT SUCCESS "methodoverload.tests 9":
interface Base1 {
	void f();
};
interface Base2 {
	void f();
};
interface Derived {
	[optional] interface Base1;
	[optional] interface Base2;
};
