#*************************************************************************
#
#   OpenOffice.org - a multi-platform office productivity suite
#
#   $RCSfile: constructor.tests,v $
#
#   $Revision: 1.3 $
#
#   last change: $Author: rt $ $Date: 2005-09-07 18:17:34 $
#
#   The Contents of this file are made available subject to
#   the terms of GNU Lesser General Public License Version 2.1.
#
#
#     GNU Lesser General Public License Version 2.1
#     =============================================
#     Copyright 2005 by Sun Microsystems, Inc.
#     901 San Antonio Road, Palo Alto, CA 94303, USA
#
#     This library is free software; you can redistribute it and/or
#     modify it under the terms of the GNU Lesser General Public
#     License version 2.1, as published by the Free Software Foundation.
#
#     This library is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     Lesser General Public License for more details.
#
#     You should have received a copy of the GNU Lesser General Public
#     License along with this library; if not, write to the Free Software
#     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
#     MA  02111-1307  USA
#
#*************************************************************************

EXPECT SUCCESS "constructor.tests 1":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X;


EXPECT SUCCESS "constructor.tests 2":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {};


EXPECT SUCCESS "constructor.tests 3":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {
    f();
};


EXPECT FAILURE "constructor.tests 4":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {
    f();
    f();
};


EXPECT FAILURE "constructor.tests 5":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {
    void f([in] any... p);
};


EXPECT FAILURE "constructor.tests 6":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {
    void f([out] any... p);
};


EXPECT SUCCESS "constructor.tests 7":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {
    f([in] any... p);
};


EXPECT SUCCESS "constructor.tests 8":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
typedef any some;
service S: X {
    f([in] some... p);
};


EXPECT FAILURE "constructor.tests 9":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {
    f([in] long p1, [in] any... p2);
};


EXPECT FAILURE "constructor.tests 10":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {
    f([in] any... p2, [in] long p1);
};


EXPECT FAILURE "constructor.tests 11":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {
    f([in] long p1, [in] long... p2);
};


EXPECT FAILURE "constructor.tests 12":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {
    f([out] long p);
};


EXPECT FAILURE "constructor.tests 13":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
service S: X {
    f([out] any... p);
};


EXPECT FAILURE "constructor.tests 14":
module com { module sun { module star { module uno {
    interface XInterface {};
}; }; }; };
interface X {};
singleton S: X {
    f();
};
