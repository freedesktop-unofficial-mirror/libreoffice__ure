/*************************************************************************
 *
 *  $RCSfile: XValueBinding.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2004-04-02 10:43:41 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __drafts_com_sun_star_form_XValueBinding_idl__
#define __drafts_com_sun_star_form_XValueBinding_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_lang_NoSupportException_idl__
#include <com/sun/star/lang/NoSupportException.idl>
#endif
#ifndef __drafts_com_sun_star_form_IncompatibleTypesException_idl__
#include <drafts/com/sun/star/form/IncompatibleTypesException.idl>
#endif

//=============================================================================

module drafts { module com {  module sun {  module star {  module form {

//=============================================================================

/** specifies a binding to a value which can be read and written.

    @deprecated
        This interface is superseeded by <type scope="com::sun::star::form::binding">XValueBinding</type>
*/
interface XValueBinding : com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** determines the types which are supported by this binding for value exchange

        @see supportsType
    */
    sequence< type >
            getSupportedValueTypes( );

    /** determines whether a given type is supported by this binding for value exchange

        <p>Calling this method is equal to calling <member>getSupportedValueTypes</member>,
        and looking up the given type in the resulting type sequence.</p>

        @see getSupportedValueTypes
    */
    boolean supportsType( [in] type aType );

    /** retrieves the current value

        @throws <type>IncompatibleTypesException</type>
            if the requested value type is not supported by the binding
        @see getSupportedValueTypes
        @see supportsType
    */
    any     getValue( [in] type aType )
                raises( IncompatibleTypesException );

    /** sets the current value

        @throws <type>IncompatibleTypesException</type>
            if the given value type is not supported by the binding
        @throws <type scope="com::sun::star::lang">NoSupportException</type>
            if the value currently cannot be changed (e.g. because it's readonly),
            or if the binding in general does not support write access to it's binding
            
        @see getSupportedValueTypes
        @see supportsType
        @see ValueBinding
    */
    void    setValue( [in] any aValue )
                raises( IncompatibleTypesException, com::sun::star::lang::NoSupportException );
};

//=============================================================================

}; }; }; }; };

#endif
