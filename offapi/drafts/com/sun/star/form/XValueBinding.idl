/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * 
 * Copyright 2008 by Sun Microsystems, Inc.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * $RCSfile: XValueBinding.idl,v $
 * $Revision: 1.6 $
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __drafts_com_sun_star_form_XValueBinding_idl__
#define __drafts_com_sun_star_form_XValueBinding_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_lang_NoSupportException_idl__
#include <com/sun/star/lang/NoSupportException.idl>
#endif
#ifndef __drafts_com_sun_star_form_IncompatibleTypesException_idl__
#include <drafts/com/sun/star/form/IncompatibleTypesException.idl>
#endif

//=============================================================================

module drafts { module com {  module sun {  module star {  module form {

//=============================================================================

/** specifies a binding to a value which can be read and written.

    @deprecated
        This interface is superseeded by <type scope="com::sun::star::form::binding">XValueBinding</type>
*/
interface XValueBinding : com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** determines the types which are supported by this binding for value exchange

        @see supportsType
    */
    sequence< type >
            getSupportedValueTypes( );

    /** determines whether a given type is supported by this binding for value exchange

        <p>Calling this method is equal to calling <member>getSupportedValueTypes</member>,
        and looking up the given type in the resulting type sequence.</p>

        @see getSupportedValueTypes
    */
    boolean supportsType( [in] type aType );

    /** retrieves the current value

        @throws <type>IncompatibleTypesException</type>
            if the requested value type is not supported by the binding
        @see getSupportedValueTypes
        @see supportsType
    */
    any     getValue( [in] type aType )
                raises( IncompatibleTypesException );

    /** sets the current value

        @throws <type>IncompatibleTypesException</type>
            if the given value type is not supported by the binding
        @throws <type scope="com::sun::star::lang">NoSupportException</type>
            if the value currently cannot be changed (e.g. because it's readonly),
            or if the binding in general does not support write access to it's binding
            
        @see getSupportedValueTypes
        @see supportsType
        @see ValueBinding
    */
    void    setValue( [in] any aValue )
                raises( IncompatibleTypesException, com::sun::star::lang::NoSupportException );
};

//=============================================================================

}; }; }; }; };

#endif
