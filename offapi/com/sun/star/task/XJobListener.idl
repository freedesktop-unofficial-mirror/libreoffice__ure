/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XJobListener.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 05:59:08 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_task_XJobListener_idl__
#define __com_sun_star_task_XJobListener_idl__

#ifndef __com_sun_star_lang_XEventListener_idl__
#include <com/sun/star/lang/XEventListener.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module task {

 published interface XAsyncJob;

//=============================================================================
/** listener on finish states of asynchronous job execution
 */
published interface XJobListener : com::sun::star::lang::XEventListener
{
    //------------------------------------------------------------------------
    /** indicates that the job is done

        @param Job
            identifies the asynchronous job so the <type>JobExecutor</type>
            can differ between more then ones.

        @param Result
            should be the same like for the synchronous mode on <member>XJob::execute()</member>.
            It provides information about success or failure of job execution. It's possible too,
            to use special protocol (which depends from real implementation) between
            <type>JobExecutor</type> and a real job. So it can be possible to:

            <ul>
                <li>deregister the job</li>
                <li>let him registered although execution was successfully(!)</li>
                <li>make some job specific data persistent inside the job configuration which
                    is provided by the executor.</li>
            </ul>
    */
    void jobFinished(
        [in] XAsyncJob Job,
        [in] any Result);
};

}; }; }; };

#endif
