/*************************************************************************
 *
 *  $RCSfile: XAsyncJob.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: mi $ $Date: 2002-10-03 13:09:55 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc..
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_task_XAsyncJob_idl__
#define __com_sun_star_task_XAsyncJob_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_NamedValue_idl__
#include <com/sun/star/beans/NamedValue.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module task {

interface XJobListener;

//=============================================================================
/** specifies a job which is to be executed asynchronously

    <p>
    Instead of <type>XJob</type> the implementation of this interface
    must make shure that execution will be real asynchronous (e.g. by using
    threads). Because it's not part of the generic <type>JobExecutor</type>,
    the asynchronous mode must be guaranteed by the implementation of THIS
    interface.
    </p>

    @see XJob
*/
interface XAsyncJob : com::sun::star::uno::XInterface
{
    //------------------------------------------------------------------------
    /** executes the job asynchronously

        @param Arguments
            are arguments for executing the job. Their semantics is completely implementation dependent. Usually,
            a concrete implementation of a job specifies in its service descriptions which parameters are allowed
            (or expected). This values are persistent by the configuration of the <type>JobExecutor</type>
            which use this asynchronous job. It's possible to write it back by called listener
            function <member>XJobListener::jobFinished()</member> which must be the executor himself.

        @param Listener
            specifies a listener which should be notified on events. May be <NULL/>.
            If it's not <NULL/> it must be the <type>JobExecutor</type> which force this action.

        @throws com::sun::star::lang::IllegalArgumentException
            if some of given arguments doesn't fill out the service specification or
            was corrupt so the service couldn't work correctly
    */
   void executeAsync(
        [in] sequence< com::sun::star::beans::NamedValue > Arguments,
        [in] XJobListener Listener)
            raises( com::sun::star::lang::IllegalArgumentException );
};

}; }; }; };

#endif

