/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XAsyncJob.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 05:57:42 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_task_XAsyncJob_idl__
#define __com_sun_star_task_XAsyncJob_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_NamedValue_idl__
#include <com/sun/star/beans/NamedValue.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module task {

 published interface XJobListener;

//=============================================================================
/** specifies a job which must be executed asynchronously

    <p>
    Instead of <type>XJob</type> the implementation of this interface
    must be aware, that execution can be made real asynchronous (e.g. by using
    threads). Because the environment whish to have creation and using of threads
    under control, it's not allowed for a real job implementation to use such mechanism
    by itself. The outside code decide, if it's possible and how it can be made
    asynchronous. In some special cases it can be, that asynchronous jobs will be executed
    synchronously.
    </p>

    @see XJob
*/
published interface XAsyncJob : com::sun::star::uno::XInterface
{
    //------------------------------------------------------------------------
    /** executes the job asynchronously

        @param Arguments
            are arguments for executing the job. Their semantics is completely implementation dependent. Usually,
            a concrete implementation of a job specifies in its service descriptions which parameters are allowed
            (or expected). This values are persistent by the configuration of the <type>JobExecutor</type>
            which use this asynchronous job. It's possible to write it back by called listener
            function <member>XJobListener::jobFinished()</member>.

        @param Listener
            specifies a listener which should be notified on events. May be <NULL/>.

        @throws com::sun::star::lang::IllegalArgumentException
            if some of given arguments doesn't fill out the service specification or
            was corrupt so the service couldn't work correctly
    */
   void executeAsync(
        [in] sequence< com::sun::star::beans::NamedValue > Arguments,
        [in] XJobListener Listener)
            raises( com::sun::star::lang::IllegalArgumentException );
};

}; }; }; };

#endif

