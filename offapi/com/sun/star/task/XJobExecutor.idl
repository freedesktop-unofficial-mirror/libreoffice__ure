/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XJobExecutor.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 05:58:55 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_task_XJobExecutor_idl__
#define __com_sun_star_task_XJobExecutor_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module task {

//=============================================================================
/** starts action for any triggered event from outside

    <p>
    If somewhere from outside trigger an event on this interface
    it will be used to find any registered service inside configuration
    of this executor. If somewhere could be found it will be
    started and controlled by this instance. After it finish his work
    it's possible to deactivate further startups or let him run again if
    a new event will be detected later.
    </p>

    @see JobExecutor
 */
published interface XJobExecutor : com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** trigger event to start registered jobs

        <p>
        Jobs are registered in configuration and will be started by executor
        automaticly, if they are registered for triggered event.
        The meaning of given string <var>Event</var> mustn't be known. Because
        for the executor it's enough to use it for searching a registered job
        inside his own configuration. So no special events will be defined here.
        </p>

        @param Event
                describe the event for which jobs can be registered and should be started
    */
    [oneway] void trigger( [in] string Event );
};

}; }; }; };

#endif
