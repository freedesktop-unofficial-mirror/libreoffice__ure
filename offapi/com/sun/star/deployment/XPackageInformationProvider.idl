/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XPackageInformationProvider.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: ihi $ $Date: 2007-11-19 16:47:14 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/


#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/Exception.idl>

module com { module sun { module star { module deployment {

/** Objects implementing this interface provide an URL to the root of 
    an installed package.
    
    @since OOo 2.3
*/
interface XPackageInformationProvider
{
    /** get Package information for a specific extension.

        @param extensionId
               the unique identifier of an extension. The service looks for
               an installed package with the given id and returns the URL to
               the root of the package. If the service can not find a matching
               package, an emty string will be returned.
    */
    string getPackageLocation( [in] string extensionId );

    /** check if there are updates available for an extention.

        @param extensionId
               the unique identifier of an extension. When the extensionId is empty,
               the service looks checks all installed extensions for a newer version,
               otherwise the service looks for updates for an installed package with
               the given id.
       If the service finds an update for an extension, a sequence containing the name
            and the version will be returned for each extension which has an update.
       If the service can not find a matching package, an empty sequence is returned.
    */
    sequence< sequence< string > > isUpdateAvailable( [in] string extensionId );

    /** returns a list of all installed extention with their version.
    */
    sequence< sequence< string > > getExtensionList();
};

}; }; }; };

