/*************************************************************************
 *
 *  $RCSfile: XFilePreview.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: mi $ $Date: 2002-10-03 13:10:43 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_ui_dialogs_XFilePreview_idl__
#define __com_sun_star_ui_dialogs_XFilePreview_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

//=============================================================================

module com { module sun { module star { module ui { module dialogs {

//=============================================================================
/** FilePicker that support the preview of various file formats should implement
    this interface.
*/

interface XFilePreview: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** The method returns all image formats that the preview supports.

        @returns 
        A sequence of all supported preview formats
        
        @see com::sun::star::ui::dialogs::FilePreviewImageFormats
    */		
    sequence< short > getSupportedImageFormats( );

    //-------------------------------------------------------------------------
    /** The method returns the supported color depth of the target device.
        
        @returns
        The color depth in bit, e.g. 8 bit, 16 bit, 32 bit.
    */
    long getTargetColorDepth( );

    //-------------------------------------------------------------------------
    /** The method returns the available width of the preview window
        even if the window is invisible or could not be created.
        If a service implementation doesn't support a file preview
        0 will be returned.

        @returns
        The width of the preview window in pixel.
    */
    long getAvailableWidth( );

    //-------------------------------------------------------------------------
    /** The method returns the available height of the preview window
        even if the window is invisible or could not be created.
        If a service implementation doesn't support a file preview
        0 will be returned.

        @returns
        The heigth of the preview window in pixel.	 
    */
    long getAvailableHeight( );

    //-------------------------------------------------------------------------
    /** Sets a new image. If the preview is currently hidden the 
        image will be ignored. An empty any will clear the preview window.

        @param aImageFormat
        Specifies the format of the data that will be delivered
        
        @param aImage
        The image data, the image format defines how
        the image data have to be delivered

        @throws com::sun::star::lang::IllegalArgumentException
        If the specified image format is invalid or not
        supported by the preview implementation

        @see com::sun::star::ui::dialogs::FilePreviewImageFormats 			
    */
    void setImage( [in] short aImageFormat, [in] any aImage )
        raises( ::com::sun::star::lang::IllegalArgumentException );

    //-------------------------------------------------------------------------
    /** Optionally sets the current show state of the preview. It is possible
        that the preview implementation doesn't support hiding the preview.

        @param bShowState
        A value of <TRUE/> shows the preview window.
        <p>A value of <FALSE/> hides the preview window.</p>

        @returns
        A value of <TRUE/> on success.
        <p>A vaue of <FALSE/> if the operation fails for any reason or the preview
        implementation doesn't support hiding the preview.</p>
    */
    boolean setShowState( [in] boolean bShowState );

    //-------------------------------------------------------------------------
    /** Returns the current show state of the preview.

        @returns
        A value of <TRUE/> if the preview window is visible.
        <p>A value of <FALSE/> if the preview window is invisible.</p>
    */
    boolean getShowState( );
};

//=============================================================================

}; }; }; }; };


#endif
