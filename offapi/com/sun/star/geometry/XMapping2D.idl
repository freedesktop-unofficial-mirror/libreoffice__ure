/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XMapping2D.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 01:37:26 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_geometry_XMapping2D_idl__
#define __com_sun_star_geometry_XMapping2D_idl__

#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
#ifndef __com_sun_star_geometry_RealPoint2D_idl__
#include <com/sun/star/geometry/RealPoint2D.idl>
#endif

module com {  module sun {  module star {  module geometry {

/** Interface defining an arbitrary bijective mapping from R^2 to R^2.<p>

    This interface provides methods to define an arbitrary bijective
    mapping from R^2 to R^2, i.e. from the two-dimensional space of
    real numbers onto itself, as is representable by the
    <type>double</type> floating point type. The mapping must be
    bijective, i.e. map a pair of real numbers to exactly one other
    pair of real numbers an vice versa, to facilitate a working
    inverse. Bijectiveness also implies completeness, i.e. for every
    pair of real numbers there must be another pair that is mapped
    upon them.<p>

    @since OOo 2.0.0
 */
interface XMapping2D : ::com::sun::star::uno::XInterface
{
    /** Forward 2D mapping function
     */
    RealPoint2D 	map( [in] RealPoint2D aPoint );

    //-------------------------------------------------------------------------

    /** Inverse 2D mapping function.<p>

        The following invariant must hold:
        <code>map(mapInverse(p))=p</code>. This effectively rules out
        non-bijective mappings.<p>
     */
    RealPoint2D 	mapInverse( [in] RealPoint2D aPoint );
};

}; }; }; };

#endif
