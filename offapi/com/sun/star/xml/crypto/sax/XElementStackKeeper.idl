/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XElementStackKeeper.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 09:47:14 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
 
//i20156 - new file for xmlsecurity module

/** -- idl definition -- **/

#ifndef __com_sun_star_xml_crypto_sax_xelementstackkeeper_idl_
#define __com_sun_star_xml_crypto_sax_xelementstackkeeper_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/Exception.idl>
#include <com/sun/star/xml/sax/XDocumentHandler.idl>

module com { module sun { module star { module xml { module crypto { module sax {

/**
 * A struct to keep a startElement/endElement SAX event.
 */
struct ElementStackItem
{
    /**
     * whether it is a startElement event
     */
    boolean isStartElementEvent;
    
    /**
     * the name of the element
     */
    string elementName;
    
    /**
     * attribute list for a startElement event
     */
    com::sun::star::xml::sax::XAttributeList xAttributes;
}; 

/**
 * Manipulate the "key SAX events" in a SAX event stream.
 *
 * @see   XSecController
 */
interface XElementStackKeeper : com::sun::star::uno::XInterface
{
    /**
     * Starts to buffer key SAX events.
     */
    void start();
    
    /**
     * Stops buffering key SAX events.
     */
    void stop();
    
    /**
     * Transfers the bufferred key SAX events to a document handler.
     * <p>
     * All transferred events are removed from the buffer.
     *
     * @param handler                the document to receive key SAX events
     * @param includingTheLastEvent  whether to transfer the last key SAX event
     */
    void retrieve( [in] com::sun::star::xml::sax::XDocumentHandler handler, [in] boolean includingTheLastEvent);
};

} ; } ; } ; } ; } ; } ;


#endif

