/*************************************************************************
 *
 *  $RCSfile: XSecurityEnvironment.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-03-29 13:40:41 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
 
//i20156 - new file for xmlsecurity module

/** -- idl definition -- **/

#ifndef __com_sun_star_xml_crypto_xsecurityenvironment_idl_
#define __com_sun_star_xml_crypto_xsecurityenvironment_idl_

#ifndef __com_sun_star_uno_SecurityException_idl__
#include <com/sun/star/uno/SecurityException.idl> 
#endif

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/Exception.idl>
#include <com/sun/star/security/XCertificate.idl>
#include <com/sun/star/security/CertificateCharacters.idl>
#include <com/sun/star/security/CertificateValidity.idl>

module com { module sun { module star { module xml { module crypto {

/**
 * Interface of Security Environment
 */
interface XSecurityEnvironment : com::sun::star::uno::XInterface
{
    /**
     * Get personal certificate from the environment
     */
    sequence< com::sun::star::security::XCertificate > getPersonalCertificates() raises( com::sun::star::uno::SecurityException ) ;

    /**
     * Get certificate from the environment by issuer name and serial number
     */
    com::sun::star::security::XCertificate getCertificate( [in] string issuerName, [in] sequence< byte > serialNumber ) raises( com::sun::star::uno::SecurityException ) ;

    /**
     * build certificate path from a certain certificate
     */
    sequence< com::sun::star::security::XCertificate > buildCertificatePath( [in] com::sun::star::security::XCertificate beginCert ) raises( com::sun::star::uno::SecurityException ) ;

    /**
     * Create certificate interface from raw DER encoded certificate
     */
    com::sun::star::security::XCertificate createCertificateFromRaw( [in] sequence< byte > rawCertificate ) raises( com::sun::star::uno::SecurityException ) ;

    /**
     * Create certificate interface from a BASE64 encoded certificate.
     */
    com::sun::star::security::XCertificate createCertificateFromAscii( [in] string asciiCertificate ) raises( com::sun::star::uno::SecurityException ) ;

    /**
     * Verify a certificate.
     *
     * The method provides a way to verify a certificate.
     * 
     * The validation status will returned as a bit-wise long, please refer to
     * CertificateValidity definition.
     */
    long verifyCertificate( [in] com::sun::star::security::XCertificate xCertificate ) raises( com::sun::star::uno::SecurityException ) ;

    /**
     * Get a certificate characters.
     *
     * The method provides a way to get certificate characters like:
     * 1. Whether or not the certificate have a private key in the user profile.
     * 2. Whether or not the certificate is a trusted certificate.
     * 3. Whether or not the certificate is a self-signed certificate.
     * 
     * The certificate characters is defined as bit-wise long, please refer to
     * CertificateCharacters definition.
     */
    long getCertificateCharacters( [in] com::sun::star::security::XCertificate xCertificate ) raises( com::sun::star::uno::SecurityException ) ;
    
    /**
     * Get the Environment detail infos
     */
    string getSecurityEnvironmentInformation ( );
    
} ;

} ; } ; } ; } ; } ;

#endif

