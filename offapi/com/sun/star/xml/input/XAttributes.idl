/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XAttributes.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 10:07:45 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#if ! defined INCLUDED__com_sun_star_xml_input_XAttributes_idl__
#define INCLUDED__com_sun_star_xml_input_XAttributes_idl__

#include <com/sun/star/uno/XInterface.idl>


module com { module sun { module star { module xml { module input {

/** An element's attributes
    
    @internal
*/
interface XAttributes : com::sun::star::uno::XInterface
{
    /** Gets the number of attributes.

        @return
                number of attributes
    */
    long getLength();
  
    /** Gets attribute index passing a QName.
        
        @param qName
               QName
        @return
                attribute index or -1, if not found
    */
    long getIndexByQName( [in] string qName );

    /** Gets attribute index passing a namespace uid and a localname.
        
        @param uid
               namespace uid
        @param localName
               localname
        @return
                attribute index or -1, if not found
    */
    long getIndexByUidName( [in] long uid, [in] string localName );
  
    /** Gets the QName of an attribute.

        @param nIndex
               index
        @return
                QName of attribute or empty string, if invalid index
    */
    string getQNameByIndex( [in] long nIndex ); 
    
    /** Gets the namespace uid of an attribute.

        @param nIndex
               index
        @return
                namespace uid of attribute or -1, if invalid index
    */
    long getUidByIndex( [in] long nIndex );
  
    /** Gets the localname of an attribute.

        @param nIndex
               index
        @return
                localname of attribute or empty string, if invalid index
    */
    string getLocalNameByIndex( [in] long nIndex ); 
  
    /** Gets the value of an attribute.

        @param nIndex
               index
        @return
                value string or empty string, if invalid index
    */
    string getValueByIndex( [in] long nIndex );
  
    /** For convenience: Gets the value of an attribute passing uid, localname.

        @param uid
               namespace uid
        @param localName
               localname
        @return
                value string or empty string, if invalid uid/localname
    */
    string getValueByUidName( [in] long uid, [in] string localName );
  
    /** Gets the type of an attribute, if possible.

        @param nIndex
               index
        @return
                type of attribute (if possible, else empty string)
    */
    string getTypeByIndex( [in] long nIndex ); 
};

}; }; }; }; };

#endif
