/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XElement.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 10:08:04 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#if ! defined INCLUDED__com_sun_star_xml_input_XElement_idl__
#define INCLUDED__com_sun_star_xml_input_XElement_idl__

#include <com/sun/star/xml/input/XAttributes.idl>
#include <com/sun/star/xml/sax/SAXException.idl>


module com { module sun { module star { module xml { module input {

/** Capsule around an XML element.

    @internal
*/
interface XElement : com::sun::star::uno::XInterface
{
    /** Gets the parent context.
        
        @return
                parent context
    */
    XElement getParent();
    
    /** Gets the localname of this element.
        
        @return
                localname of this element
    */
    string getLocalName();

    /** Gets the namespace uid of this element.

        @return
                namespace uid of this element
    */
    long getUid();

    /** Gets the attributes of this element.
        
        @return
                attributes of this element
    */
    XAttributes getAttributes();
    
    /** Called upon each occuring child element.
        
        @param uid
               namespace uid of element
        @param localName
               localname of element
        @param xAttributes
               attributes of element
        @return
                child import context
    */
    XElement startChildElement(
        [in] long uid, [in] string localName, [in] XAttributes xAttributes )
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Called upon retrieval of characters.
        
        @param chars
               characters
    */
    void characters( [in] string chars )
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Receives notification of white space that can be ignored.

        @param whitespace
               white space characters
    */
    void ignorableWhitespace( [in] string whitespace )
        raises (com::sun::star::xml::sax::SAXException);

    /** Receives notification of a processing instruction.

        @param target
               target
        @param data
               data
    */
    void processingInstruction(
        [in] string target, [in] string data )
        raises (com::sun::star::xml::sax::SAXException);
    
    /** Receives notification of element closing.
     */
    void endElement()
        raises (com::sun::star::xml::sax::SAXException);
};

}; }; }; }; };

#endif
