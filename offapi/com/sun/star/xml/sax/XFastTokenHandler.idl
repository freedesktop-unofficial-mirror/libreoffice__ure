/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XFastTokenHandler.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: obo $ $Date: 2008-01-10 12:46:02 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_xml_sax_XFastTokenHandler_idl__ 
#define __com_sun_star_xml_sax_XFastTokenHandler_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
//============================================================================= 
 
module com {  module sun {  module star {  module xml {  module sax {  
 
//============================================================================ 
 
/** interface to translate xml strings to integer tokens.

    <p>An instance of this interface can be registered at a <type>XFastParser</type>.
    It should be able to translate all xml names (element local names,
    attribute local names and constant attribute values) to integer tokens.

    A token value must be greater or equal to zero and less than 
    <const>FastToken::NAMESPACE</const>. If a string identifier is not known
    to this instance, <const>FastToken::DONTKNOW</const> is returned.
 */
interface XFastTokenHandler: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 

    /**	returns a integer token for the given string identifier.

        @returns
            a unique integer token for the given String or <const>FastToken::DONTKNOW</const
            if the identifier is not known to this instance.
    */
    long getToken( [in] string Identifier );

    //------------------------------------------------------------------------- 

    /** returns a string identifier for the given integer token.
    */
    string getIdentifier( [in] long Token );

    //------------------------------------------------------------------------- 

    /** returns a integer token for the given string

        @param Identifier
            the string given as a byte sequence encoded in UTF8

        @returns
            a unique integer token for the given String or <const>FastToken::DONTKNOW</const>
            if the identifier is not known to this instance.
    */
    long getTokenFromUTF8( [in] sequence< byte > Identifier );
}; 

//============================================================================ 

}; }; }; }; };  
 
#endif 
