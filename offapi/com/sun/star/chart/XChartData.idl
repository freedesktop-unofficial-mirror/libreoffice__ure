/*************************************************************************
 *
 *  $RCSfile: XChartData.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: obo $ $Date: 2002-12-10 15:01:07 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_chart_XChartData_idl__ 
#define __com_sun_star_chart_XChartData_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_chart_XChartDataChangeEventListener_idl__ 
#include <com/sun/star/chart/XChartDataChangeEventListener.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module chart {  
 
//============================================================================= 
 
/** manages the data of the chart.

    @see XChartDocument
 */
interface XChartData: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** allows a component supporting the
        <type>XChartDataChangeEventListener</type> interface to
        register as listener.  The component will be notified with a
        <type>ChartDataChangeEvent</type> every time the chart's data
        changes.</p>

        @param aListener
            the component that is to be added as listener

        @see XChartDataChangeEventListener
        @see ChartDataChangeEvent
     */
    void addChartDataChangeEventListener( [in] com::sun::star::chart::XChartDataChangeEventListener aListener ); 
 
    //------------------------------------------------------------------------- 
     
    /** removes a previously registered listener.

        @param aListener
            the component that is to be removed
     */
    void removeChartDataChangeEventListener( [in] com::sun::star::chart::XChartDataChangeEventListener aListener ); 
 
    //------------------------------------------------------------------------- 
     
    /** @returns
            the value which is to be used as an indicator for a
            missing value in the data.
                 
        <p>In IEEE arithmetic format it is one of the NaN values, so
        there are no conflicts with existing numeric values.</p>
     */
    double getNotANumber(); 
 
    //------------------------------------------------------------------------- 
     
    /** checks whether the value given is equal to the indicator value
        for a missing value.

        <p>In IEEE arithmetic format it is one of the NaN values, so
        there are no conflicts with existing numeric values.</p>

        <p>Always use this method to check, if a value is <em>not a
        number</em>.  If you compare the value returned by
        <member>XChartData::getNotANumber</member> to another double
        value using the = operator, you may not get the desired
        result!</p>

        @returns
            <TRUE/> if the number given is interpreted by the chart as
            a missing value.

        @param nNumber
            the number that you want to check for validity.
     */
    boolean isNotANumber( [in] double nNumber ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
