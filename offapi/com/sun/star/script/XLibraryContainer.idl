/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XLibraryContainer.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2006-05-05 08:51:50 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_script_XLibraryContainer_idl__ 
#define __com_sun_star_script_XLibraryContainer_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_container_XNameContainer_idl__ 
#include <com/sun/star/container/XNameContainer.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
#ifndef __com_sun_star_container_NoSuchElementException_idl__ 
#include <com/sun/star/container/NoSuchElementException.idl> 
#endif 
 
#ifndef __com_sun_star_container_ElementExistException_idl__ 
#include <com/sun/star/container/ElementExistException.idl> 
#endif 
 
#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl> 
#endif 
 
#ifndef __com_sun_star_container_ElementExistException_idl__ 
#include <com/sun/star/container/ElementExistException.idl> 
#endif 
#ifndef __com_sun_star_lang_WrappedTargetException_idl__ 
#include <com/sun/star/lang/WrappedTargetException.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module script {  
 
//============================================================================= 
 
/** 
    Provides access to a library system. 
 */
published interface XLibraryContainer: com::sun::star::container::XNameAccess
{ 
    /** 
        Creates a new library
     */
    com::sun::star::container::XNameContainer createLibrary( [in] string Name ) 
        raises( com::sun::star::lang::IllegalArgumentException, 
                com::sun::star::container::ElementExistException ); 

    /** 
        Creates a link to an "external" library that then can be 
        accessed using this library manager. The format of the
        StorageURL is a matter of the implementation. If the read
        only flag is set, the linked library cannot be modified.
        In this case, the returned interface really is only an
        XNameAccess. If ReadOnly is false (and the referenced
        storage allows write access) the returned interface also
        can be a <type scope="com::sun::star::container">XNameContainer</type>.
     */
    com::sun::star::container::XNameAccess createLibraryLink( [in] string Name, [in] string StorageURL, [in] boolean ReadOnly ) 
        raises( com::sun::star::lang::IllegalArgumentException, 
                com::sun::star::container::ElementExistException ); 

    /** removes the library item with the specified name. If the accessed 
        library item is a link only the link is removed, not the target library.
     */
    void removeLibrary( [in] string Name ) 
            raises( com::sun::star::container::NoSuchElementException, 
                    com::sun::star::lang::WrappedTargetException ); 

    /** 
        returns true if the accessed library is already loaded from
        the storage, otherwise false.
     */
    boolean isLibraryLoaded( [in] string Name )
            raises( com::sun::star::container::NoSuchElementException ); 

    /** 
        Causes the accessed library to be loaded from its storage
        if it hasn't already been loaded.
     */
    void loadLibrary( [in] string Name )
            raises( com::sun::star::container::NoSuchElementException, 
                    com::sun::star::lang::WrappedTargetException ); 

};

//============================================================================= 
 
 
}; }; }; };  
 
#endif 
