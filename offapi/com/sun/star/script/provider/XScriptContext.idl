/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XScriptContext.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: kz $ $Date: 2008-03-06 16:47:22 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_script_provider_XScriptContext_idl__
#define __com_sun_star_script_provider_XScriptContext_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_frame_XDesktop_idl__
#include <com/sun/star/frame/XDesktop.idl>
#endif

#ifndef __com_sun_star_frame_XModel_idl__
#include <com/sun/star/frame/XModel.idl>
#endif

#ifndef __com_sun_star_uno_XComponentContext_idl__ 
#include <com/sun/star/uno/XComponentContext.idl>
#endif


module com { module sun { module star { module document {
    interface XScriptInvocationContext;
}; }; }; };

//===========================================================================

module com { module sun { module star { module script { module provider {

//===========================================================================
/**
    This interface is provided to scripts, and provides a means of access to 
    the various interfaces which they might need to perform some action on 
    a document. It is required to be passed as the first argument for any 
    Java scripts.
*/
interface XScriptContext : ::com::sun::star::uno::XInterface {

    //----------------------------------------------------------------------
    /** 
        Obtain the document reference on which the script can operate

        @returns 
          <type scope="com::sun::star::frame">XModel</type> interface
    */
    ::com::sun::star::frame::XModel getDocument();

    /** provides access to the context where the script was invoked

        <p>In some cases, it is possible that scripts, embedded in a document,
        are executed from within a context which is <em>not</em> the document
        itself. In this case, the <code>getInvocationContext</code> member allows
        to access this context.</p>

        <p>Note that the returned context is allowed to be <NULL/>, in this case,
        the document as returned by <code>getDocument</code> is the invocation context.</p>

        <p>If the returned context is not <NULL/>, its <code>ScriptContainer</code> attribute
        equals the document as returned by <code>XScriptContext::getDocument</code>.</p>

        @since OOo 3.0
    */
    ::com::sun::star::document::XScriptInvocationContext getInvocationContext();

    /** 
        Obtain the desktop reference on which the script can operate

        @returns 
          <type scope="com::sun::star::frame">XDesktop</type> interface
    */
    ::com::sun::star::frame::XDesktop getDesktop();

    /** 
        Obtain the component context which the script can use to create 
        other uno components

        @returns 
          <type scope="com::sun::star::uno">XComponentContext</type> interface
    */
    ::com::sun::star::uno::XComponentContext getComponentContext();


};

//===========================================================================
}; }; }; }; }; // ::com::sun::star::script::provider

#endif
