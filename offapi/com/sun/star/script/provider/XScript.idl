/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XScript.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:10:10 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_script_provider_XScript_idl__
#define __com_sun_star_script_provider_XScript_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_script_CannotConvertException_idl__
#include <com/sun/star/script/CannotConvertException.idl>
#endif

#ifndef __com_sun_star_reflection_InvocationTargetException_idl__
#include <com/sun/star/reflection/InvocationTargetException.idl>
#endif

#ifndef  __com_sun_star_script_provider_ScriptFrameworkErrorException_idl__
#include <com/sun/star/script/provider/ScriptFrameworkErrorException.idl>
#endif

//===========================================================================

module com { module sun { module star { module script { module provider {

//===========================================================================
/**
    This interface represents an invokable script or UNO function.
*/
interface XScript : ::com::sun::star::uno::XInterface {

    //----------------------------------------------------------------------
    /** 
        invoke the script or function represented by the implementing 
            object

        @param aParams 
            all parameters; pure, out params are undefined in sequence,
            i.e., the value has to be ignored by the callee
        @param aOutParamIndex 
            out indices, indicating the position of the out or inout 
            parameters in the list of arguments to the script
        @param aOutParam 
            out parameters<p>
            For example, if the script had the signature<br>
            <code>long foo( [inout] string a, [in] string b, [out] string c )</code>
            <br> the call would look like<br>
            <code>bar.invoke( {"foo", "foo2", "this-is-ignored" }, aOutParamIndex, aOutParam);</code>
            <br> and after the call the out sequences would contain<br>
            <listing>
            aOutParamIndex={0,2};
            aOutParam={"string from a", "string from c"};   
            </listing>

        @returns 
            the value returned from the function being invoked

        @throws ::com::sun::star::reflection::InvocationTargetException
            if and error occurs while attempting to invoke a script the information is captured. If the error or exception is generated by the script itself it is wrapped as either ScriptErrorRaisedException or ScriptExceptionRaisedException or ScriptingFrameworkErrorException are wrapped as ScriptFrameworkErrorExceptions.
    */
    any invoke( 
        [in] sequence<any> aParams, 
        [out] sequence<short> aOutParamIndex, 
        [out] sequence<any> aOutParam ) raises( 
        ::com::sun::star::script::provider::ScriptFrameworkErrorException ,
        ::com::sun::star::reflection::InvocationTargetException);
    
};

//===========================================================================
}; }; }; }; }; // ::com::sun::star::script::provider

#endif
