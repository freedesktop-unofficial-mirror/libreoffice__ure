/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XSimpleText.idl,v $
 *
 *  $Revision: 1.12 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 06:46:00 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_text_XSimpleText_idl__ 
#define __com_sun_star_text_XSimplText_idl__ 
 
#ifndef __com_sun_star_text_XTextRange_idl__ 
#include <com/sun/star/text/XTextRange.idl> 
#endif 
 
#ifndef __com_sun_star_text_XTextCursor_idl__ 
#include <com/sun/star/text/XTextCursor.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
#ifndef __com_sun_star_text_XTextContent_idl__ 
#include <com/sun/star/text/XTextContent.idl> 
#endif 
 
#ifndef __com_sun_star_container_NoSuchElementException_idl__ 
#include <com/sun/star/container/NoSuchElementException.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module text {  
 
//============================================================================= 
 
/** is the main interface for a distinct text unit, i.e. the main text of
    a document, the text for headers and footers or for single cells of a 
    table.@see XText
 */
published interface XSimpleText: com::sun::star::text::XTextRange
{ 
    //------------------------------------------------------------------------- 
     
    /** @returns 
                a new instance of a <type>TextCursor</type> service which can 
                be used to travel in the given text context. 
                 
                @see com::sun::star::text::TextCursor
     */
    com::sun::star::text::XTextCursor createTextCursor(); 
 
    //------------------------------------------------------------------------- 
     
    /** @returns 
                a new instance of a <type>TextCursor</type> which is located  
                at the specified <type>TextRange</type> to travel in the 
                given text context. 
                 
                <p>The initial position is set to <var>aTextPosition</var>. 
                 
                @param aTextPosition 
                specifies the start position for the new 
                <type>TextCursor</type>. 
                 
                @see com::sun::star::text::TextCursor
     */
    com::sun::star::text::XTextCursor createTextCursorByRange( [in] com::sun::star::text::XTextRange aTextPosition ); 
 
    //------------------------------------------------------------------------- 
     
    /** inserts a string of characters into the text.
        
        <p>The string may contain the following white spaces:
        </p>
        <ul>
            <li>blank</li>
            <li>tab</li>
            <li>cr (which will insert a paragraph break)</li>
            <li>lf (which will insert a line break)</li>
        </ul>

        @param xRange
            specifies the position of insertion. For example,
            <method>XSimpleText::createTextCursor</member> can be used to
            get an <type>XTextRange</type> for this argument.

            <p>If the parameter <member>bAbsorb</member> was <TRUE/>
            the text range will contain the new inserted string, otherwise
            the range (and it's text) will remain unchanged.

        @param aString
            specifies the string to insert.

        @param bAbsorb
            specifies whether the text spanned by <var>xRange</var> will be
            replaced. If <TRUE/> then the content of <var>xRange</var> will
            be replaced by <var>aString</var>, otherwise <var>aString</var>
            will be inserted at the beginning of <var>xRange</var>.
        
        @example 
            <listing>
            xText.insertString( xTextCursor, "Hello " + aName$ + ",", false )
        
            xText.insertControlCharacter( xTextCursor,
            ControlCharacter_PARAGRAPH_BREAK, false );
        
            xText.insertString( xTextCursor, "more text ...", false )
            </listing>
     */
    [oneway] void insertString( [in] com::sun::star::text::XTextRange xRange, 
             [in] string aString, 
             [in] boolean bAbsorb ); 
 
    //------------------------------------------------------------------------- 
     
    /** inserts a control character (like a paragraph break or a hard
        space) into the text.@see com::sun::star::text::ControlCharacter
     */
    void insertControlCharacter( [in] com::sun::star::text::XTextRange xRange, 
             [in] short nControlCharacter, 
             [in] boolean bAbsorb ) 
            raises( com::sun::star::lang::IllegalArgumentException ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
