/*************************************************************************
 *
 *  $RCSfile: TextFrame.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: obo $ $Date: 2004-06-04 00:19:11 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_text_TextFrame_idl__
#define __com_sun_star_text_TextFrame_idl__

#ifndef __com_sun_star_text_XTextFrame_idl__
#include <com/sun/star/text/XTextFrame.idl>
#endif

#ifndef __com_sun_star_text_BaseFrame_idl__
#include <com/sun/star/text/BaseFrame.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module text {

//=============================================================================

/** specifies a rectangular shape which contains a <type scope="com::sun::star::drawing">Text</type> object
    and is attached to a piece of surrounding <type scope="com::sun::star::drawing">Text</type>.

    @see Text

    @example StarBasic

    <p>This example shows how to create a <type>TextFrame</type> and insert
    it at the very beginning of <type>Text</type> component. The macro
    is ready to run, if it is a script within a text document. </p>

    <listing>
    Sub Main
    oFrame = ThisComponent.createInstance( "com.sun.star.text.TextFrame" )
    oFrame.Width = 6000
    ThisComponent.Text.insertTextContent( ThisComponent.Text.Start, oFrame, false )
    oFrame.Text.String = "Hello, this text is within the frame."
    End Sub
    </listing>
 */
published service TextFrame
{
    /** contains the definition of interfaces and properties that are supported by text frames,
     graphic objects and embeddedobjects.
     */
    service BaseFrame;

    /** This interface makes it possible to access the text within this
                text frame.
     */
    interface com::sun::star::text::XTextFrame;
    //-------------------------------------------------------------------------
    /** contains the metric height value of the frame.
     */
    [property] long FrameHeightAbsolute;

    //-------------------------------------------------------------------------
    /** contains the metric width value of the frame.
     */
    [property] long FrameWidthAbsolute;

    //-------------------------------------------------------------------------

    /** specifies a width relative to the width of the
        surrounding text.
        <p>If the value for "WidthPercent" is 0, the absolute value from
        is used.</p>
     */
    [property] byte FrameWidthPercent;

    //-------------------------------------------------------------------------
    /** specifies a width relative to the width of the
        surrounding text.

        <p>If the value for "HeightPercent" is 0, the absolute value from
        is used.</p>
     */
    [property] byte FrameHeightPercent;
    //-------------------------------------------------------------------------
    /** If "AutomaticHeight" is set, then the object grows if it is required
        by the frame content.
     */
    [property] boolean FrameIsAutomaticHeight;
    //-------------------------------------------------------------------------
    /** determines the interpretation of the height and relative
        height properties.@see SizeType
     */
    [property] short SizeType;
    //-----------------------------------------------------------------------------
    /** contains the writing direction, as represented by the
        <type scope="com::sun::star::text">WritingMode2</type> constants
     */
    [optional, property] short WritingMode;

    /** controls, if the frame follows the text flow or can leave its layout environment

        <p>If set, the frame follows the text flow and doesn't leaves the layout
        environment, which is given by its anchor, above and below.
        E.g.: Anchor resides in the document body then the frame doesn't leave
        the document body above and below and follows the text flow through
        the document bodies of the different pages.

        If not set, the frame doesn't follow the text flow and stays on the page,
        on which its anchor is found, but it may leave the layout environment,
        which is given by its anchor.
        E.g.: Anchor resides in the document body then the frame stays on page,
        where this document body is, but it could leave the document body above
        and below, e.g. overlapping with the page header.

        Note: The areas for the vertical orientation relation at page areas are
        interpreted in dependence to this property (@see BaseFrameProperties.VertOrientRelation).
        If property is set, the page area is interpreted as the layout environment,
        given by its anchor. E.g.: Anchor resides in the page header then the
        page header determines the page area. If property isn't set, the page area is
        determined by the document page, the anchor is on. E.g.: Anchor resides
        in the page header then the document page, the page header is on, determines
        the page area.
        An exception of this interpretation rule is applied, if the anchor resides
        in a table cell. In this situation the page area is always detemined by
        the table cell.</p>
     */
    [optional, property] boolean IsFollowingTextFlow;

};

//=============================================================================

}; }; }; };

#endif
