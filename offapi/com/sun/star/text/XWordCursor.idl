/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XWordCursor.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 06:52:07 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_text_XWordCursor_idl__ 
#define __com_sun_star_text_XWordCursor_idl__ 
 
#ifndef __com_sun_star_text_XTextCursor_idl__ 
#include <com/sun/star/text/XTextCursor.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module text {  
 
//============================================================================= 
 
/** makes it possible to move a cursor word by word.
 */
published interface XWordCursor: com::sun::star::text::XTextCursor
{ 
    //------------------------------------------------------------------------- 
     
    /** determines if the cursor is positioned at the start of a word.
     */
    boolean isStartOfWord(); 
 
    //------------------------------------------------------------------------- 
     
    /** determines if the cursor is positioned at the end of a word.
     */
    boolean isEndOfWord(); 
 
    //------------------------------------------------------------------------- 
     
    /** moves the cursor to the next word.

        <p>Note: the function returning <true/> does not necessarily mean 
        that the cursor is located at the next word, or any word at all! 
        This may happen for example if it travels over empty paragraphs.</p>

        @returns
            <true/> if the cursor was moved. It returns <false/> it the
            cursor can not advance further.
     */
    boolean gotoNextWord( [in] boolean bExpand ); 
 
    //------------------------------------------------------------------------- 
     
    /** moves the cursor to the previous word.

        <p>Note: the function returning <true/> does not necessarily mean 
        that the cursor is located at the previous word, or any word at all! 
        This may happen for example if it travels over empty paragraphs.</p>

        @returns
            <true/> if the cursor was moved. It returns <false/> it the
            cursor can not advance further.
     */
    boolean gotoPreviousWord( [in] boolean bExpand ); 
 
    //------------------------------------------------------------------------- 
     
    /** moves the cursor to the end of the current word.

        @returns
            <true/> if the cursor is now at the end of a word, 
            <false/> otherwise. If <false/> was returned the cursor
            will remain at its original position.
     */
    boolean gotoEndOfWord( [in] boolean bExpand ); 
 
    //------------------------------------------------------------------------- 
     
    /** moves the cursor to the start of the current word.

        @returns
            <true/> if the cursor is now at the start of a word, 
            <false/> otherwise. If <false/> was returned the cursor
            will remain at its original position.
     */
    boolean gotoStartOfWord( [in] boolean bExpand ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
