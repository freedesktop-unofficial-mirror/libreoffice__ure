/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XParagraphCursor.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 06:44:26 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_text_XParagraphCursor_idl__ 
#define __com_sun_star_text_XParagraphCursor_idl__ 
 
#ifndef __com_sun_star_text_XTextCursor_idl__ 
#include <com/sun/star/text/XTextCursor.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module text {  
 
//============================================================================= 
 
/** makes it possible to move paragraph by paragraph.
 */
published interface XParagraphCursor: com::sun::star::text::XTextCursor
{ 
    //------------------------------------------------------------------------- 
     
    /** determines if the cursor is positioned at the start of a paragraph.
     */
    boolean isStartOfParagraph(); 
 
    //------------------------------------------------------------------------- 
     
    /** determines if the cursor is positioned at the end of a paragraph.
     */
    boolean isEndOfParagraph(); 
 
    //------------------------------------------------------------------------- 
     
    /** moves the cursor to the start of the current paragraph.

        @returns
            <true/> if the cursor is now at the start of a paragraph, 
            <false/> otherwise. If <false/> was returned the cursor
            will remain at its original position.
     */
    boolean gotoStartOfParagraph( [in] boolean bExpand ); 
 
    //------------------------------------------------------------------------- 
     
    /** moves the cursor to the end of the current paragraph.

        @returns
            <true/> if the cursor is now at the end of a paragraph, 
            <false/> otherwise. If <false/> was returned the cursor
            will remain at its original position.
     */
    boolean gotoEndOfParagraph( [in] boolean bExpand ); 
 
    //------------------------------------------------------------------------- 
     
    /** moves the cursor to the next paragraph.

        @returns
            <true/> if the cursor was moved. It returns <false/> it the
            cursor can not advance further.
     */
    boolean gotoNextParagraph( [in] boolean bExpand ); 
 
    //------------------------------------------------------------------------- 
     
    /** moves the cursor to the previous paragraph.

        @returns
            <true/> if the cursor was moved. It returns <false/> it the
            cursor can not advance further.
     */
    boolean gotoPreviousParagraph( [in] boolean bExpand ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
