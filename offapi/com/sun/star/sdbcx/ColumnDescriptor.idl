/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: ColumnDescriptor.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:57:14 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbcx_ColumnDescriptor_idl__ 
#define __com_sun_star_sdbcx_ColumnDescriptor_idl__ 
 
#ifndef __com_sun_star_sdbcx_Descriptor_idl__ 
#include <com/sun/star/sdbcx/Descriptor.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbcx { 
 
 
// DocMerge from xml: service com::sun::star::sdbcx::ColumnDescriptor
/** describes the common properties of a database column. Could be used for the creation
    of a database columns within a table.
    @see com::sun::star::sdbcx::Column 
    @see com::sun::star::sdbcx::Table
 */
published service ColumnDescriptor
{ 
    // DocMerge: empty anyway
    service com::sun::star::sdbcx::Descriptor;	 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::Type
    /** is the 
        <type scope="com::sun::star::sdbc">DataType</type>
        of the column.
     */
    [property] long Type; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::TypeName
    /** is the type name used by the database. If the column type is
        a user-defined type, then a fully-qualified type name is returned.
        May be empty.
     */
    [property] string TypeName; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::Precision
    /** gets a column's number of decimal digits.
     */
    [property] long Precision; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::Scale
    /** gets a column's number of digits to right of the decimal point.
     */
    [property] long Scale; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::IsNullable
    /** indicates the nullability of values in the designated column.
        @see com::sun::star::sdbc::ColumnValue
     */
    [property] long IsNullable; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::IsAutoIncrement
    /** indicates whether the column is automatically numbered, thus read-only.
        @see com::sun::star::sdbc::ColumnValue
     */
    [property] boolean IsAutoIncrement; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::IsRowVersion
    /** indicates that the column contains some kind of time or date stamp
        used to track updates.
     */
    [optional, property] boolean IsRowVersion; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::Description
    /** keeps a description of the object.
     */
    [optional, property] string Description; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::ColumnDescriptor::DefaultValue
    /** keeps a default value for a column, is provided as string.
     */
    [optional, property] string DefaultValue; 

    /** specifies how to create an autoincrement column.
     */
    [optional, property] string AutoIncrementCreation;  
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
#endif 
