/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: Container.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:57:43 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbcx_Container_idl__ 
#define __com_sun_star_sdbcx_Container_idl__ 
 
 module com {  module sun {  module star {  module container { 
 published interface XNameAccess; 
 published interface XIndexAccess; 
 published interface XEnumerationAccess; 
};};};}; 
 
 module com {  module sun {  module star {  module util { 
 published interface XRefreshable; 
};};};}; 
 
 module com {  module sun {  module star {  module sdbcx { 
 
 published interface XDataDescriptorFactory; 
 published interface XAppend; 
 published interface XDrop; 
 
 
// DocMerge from xml: service com::sun::star::container::com::sun::star::util::com::sun::star::sdbcx::Container
/** describes every container which is used for data definition. Each
    container must support access to its elements by the element's name or
    by the element's position.	
    
    <p>
    Simple enumeration must be supported as well.
    </p>
    <p>
    To reflect the changes with the underlying database, a refresh mechanism
    needs to be supported.
    </p>
    <p>
    A container may support the possibility to add new elements or to drop
    existing elements. Additions are always done by descriptors which define the
    properties of the new element.
    </p>
 */
published service Container
{ 
    // gives access to the elements by name.
    interface com::sun::star::container::XNameAccess; 
    
    // gives access to the elements by index.
    interface com::sun::star::container::XIndexAccess; 
    
    // used to create an enumeration of the elements.
    interface com::sun::star::container::XEnumerationAccess; 
 
     
    // DocMerge from xml: service com::sun::star::container::com::sun::star::util::com::sun::star::sdbcx::Container: interface com::sun::star::util::XRefreshable
    /** is optional for implementation. Used to reflect changes. 
     */
    [optional] interface com::sun::star::util::XRefreshable; 
     
    // DocMerge from xml: service com::sun::star::container::com::sun::star::util::com::sun::star::sdbcx::Container: interface com::sun::star::container::com::sun::star::util::com::sun::star::sdbcx::XDataDescriptorFactory
    /** optional for implementation. Allows to create descriptor elements which then could be used to append new elements.
     */
    [optional] interface XDataDescriptorFactory; 
     
    // DocMerge from xml: service com::sun::star::container::com::sun::star::util::com::sun::star::sdbcx::Container: interface com::sun::star::container::com::sun::star::util::com::sun::star::sdbcx::XAppend
    /** optional for implementation, provides the possibility of adding 
                a new element to the container.
     */
    [optional] interface XAppend; 
     
    // DocMerge from xml: service com::sun::star::container::com::sun::star::util::com::sun::star::sdbcx::Container: interface com::sun::star::container::com::sun::star::util::com::sun::star::sdbcx::XDrop
    /** optional for implementation, provides the possibility of dropping 
                an element from the container.
     */
    [optional] interface XDrop; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
