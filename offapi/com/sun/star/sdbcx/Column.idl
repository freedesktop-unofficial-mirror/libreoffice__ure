/*************************************************************************
 *
 *  $RCSfile: Column.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-26 13:55:46 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbcx_Column_idl__ 
#define __com_sun_star_sdbcx_Column_idl__ 
 
#ifndef __com_sun_star_beans_XPropertySet_idl__ 
#include <com/sun/star/beans/XPropertySet.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbcx { 
 
interface XDataDescriptorFactory; 
 
 
// DocMerge from xml: service com::sun::star::sdbcx::Column
/** describes the common properties of a database column.
 */
service Column
{ 
     
    // DocMerge from xml: service com::sun::star::sdbcx::Column: interface com::sun::star::sdbcx::XDataDescriptorFactory
    /** optional, could be used to copy a database column.
     */
    [optional] interface XDataDescriptorFactory; 
 
    // gives access to the properties.
    interface com::sun::star::beans::XPropertySet; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::Name
    /** is the name of the column.
     */
    [readonly, property] string Name; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::Type
    /** is the 
        <type scope="com::sun::star::sdbc">DataType</type>
        of the column.
     */
    [readonly, property] long Type; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::TypeName
    /** is the type name used by the database. If the column type is
        a user-defined type, then a fully-qualified type name is returned.
        <b>
        Note:
        </b>
        May be empty.
     */
    [readonly, property] string TypeName; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::Precision
    /** gets a column's number of decimal digits.
     */
    [readonly, property] long Precision; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::Scale
    /** gets a column's number of digits to right of the decimal point.
     */
    [readonly, property] long Scale; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::IsNullable
    /** indicates the nullability of values in the designated column.
        @see com::sun::star::sdbc::ColumnValue
     */
    [readonly, property] long IsNullable; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::IsAutoIncrement
    /** indicates whether the column is automatically numbered, thus read-only.
        @see com::sun::star::sdbc::ColumnValue
     */
    [readonly, property] boolean IsAutoIncrement; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::IsCurrency
    /** indicates whether the column is a cash value.
     */
    [readonly, property] boolean IsCurrency; 
 
     
 
    // DocMerge from xml: property com::sun::star::sdbcx::Column::IsRowVersion
    /** indicates that the column contains some kind of time or date stamp
        used to track updates. 
        
        @optional
     */
    [optional, readonly, property] boolean IsRowVersion; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::Description
    /** keeps a description of the object.
        
        @optional 
     */
    [optional, readonly, property] string Description; 
 
     
    // DocMerge from xml: property com::sun::star::sdbcx::Column::DefaultValue
    /** keeps a default value for a column, is provided as string.
    
        @optional 
     */
    [optional, readonly, property] string DefaultValue; 
 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
