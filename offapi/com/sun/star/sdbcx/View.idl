/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: View.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: ihi $ $Date: 2007-11-21 15:16:43 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbcx_View_idl__
#define __com_sun_star_sdbcx_View_idl__

#ifndef __com_sun_star_beans_XPropertySet_idl__
#include <com/sun/star/beans/XPropertySet.idl>
#endif

 module com {  module sun {  module star {  module sdbcx {

published interface XRename;
published interface XAlterView;


/** is used to specify views on data. A view object is only used for creation and
    deletion. Inspecting the command of a view is normally not supported.

    <p>
    If a view is going to be added to a database, the view must have a unique
    name within the view and the table container, as it can be used like a table.
    <b>
    Note:
    </b>
    After addition, both the containers for views and the container for tables must
    contain an element for the view.
    </p>
 */
published service View
{

    /** is optional for implementation.
     */
    [optional] interface XRename;

    // gives access to the properties.
    interface com::sun::star::beans::XPropertySet;

    /** allows changing the view's <member>Command</member>.
    */
    [optional] interface XAlterView;


    /** is the name of the view.
     */
    [readonly, property] string Name;


    /** is the name of the views catalog, may be empty.
     */
    [readonly, property] string CatalogName;


    /** is the name of the view's schema, may be empty.
     */
    [readonly, property] string SchemaName;


    /** is the command for creating the view.

        <p>This is typically a SQL Select-Statement.</p>

        <p>This property might be empty when a backend does not support retrieving the current
        SQL command of a view. However, if the <code>View</code> supports altering its command
        via the <member>XAlterView</member> interface, then it's required to also provide the
        current SQL command in the <code>Command</code> property.</p>
     */
    [readonly, property] string Command;


    /** indicates if a check option should be used for the view.

        @see com::sun::star::sdbcx::CheckOption
     */
    [readonly, property] long CheckOption;
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif
