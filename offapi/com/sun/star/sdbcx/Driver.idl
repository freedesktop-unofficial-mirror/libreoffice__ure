/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: Driver.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: vg $ $Date: 2007-01-15 14:14:53 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbcx_Driver_idl__ 
#define __com_sun_star_sdbcx_Driver_idl__ 
 
#ifndef __com_sun_star_sdbc_Driver_idl__ 
#include <com/sun/star/sdbc/Driver.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbcx { 
 
 published interface XDataDefinitionSupplier; 
 published interface XCreateCatalog; 
 published interface XDropCatalog; 
 
 
/** extends the service 
    <type scope="com::sun::star::sdbc">Driver</type>
    by beans for data definition.
<p>
    This service is optional for each driver. Its purpose is to define
    a common way for database definition, as the DDL differs between most DBMS.
</p>
<p>
    Definition and deletion of database catalogs can't be defined in a common
    manner for DBMS, but it should be possible to hide much of the complexity
    of creation and deletion of catalogs. Each driver could provide methods to
    cover these tasks.
</p>
 */
published service Driver
{ 
    service com::sun::star::sdbc::Driver; 
    
    /** used to get access to the catalog.
        @see Catalog
    */
    interface XDataDefinitionSupplier; 
 
     
    /** is optional for implementation.
     */
    [optional] interface XCreateCatalog; 
     
    /** is optional for implementation.
     */
    [optional] interface XDropCatalog; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
#endif 
