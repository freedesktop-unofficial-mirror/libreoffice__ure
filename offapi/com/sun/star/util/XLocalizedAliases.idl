/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XLocalizedAliases.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 09:05:17 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_util_XLocalizedAliases_idl__ 
#define __com_sun_star_util_XLocalizedAliases_idl__ 
 
#ifndef __com_sun_star_lang_Locale_idl__ 
#include <com/sun/star/lang/Locale.idl> 
#endif 
 
#ifndef __com_sun_star_container_NoSuchElementException_idl__ 
#include <com/sun/star/container/NoSuchElementException.idl> 
#endif 
 
#ifndef __com_sun_star_container_ElementExistException_idl__ 
#include <com/sun/star/container/ElementExistException.idl> 
#endif 
 
#ifndef __com_sun_star_util_AliasProgrammaticPair_idl__ 
#include <com/sun/star/util/AliasProgrammaticPair.idl> 
#endif 
 
//============================================================================= 
module com {  module sun {  module star {  module util { 
 
//============================================================================= 
 
/** is the interface for binding programmatic names to aliases. Aliases
    can be provided in several locales for the same programmatic name.
 */
published interface XLocalizedAliases: com::sun::star::uno::XInterface
{ 
     
    /** registers an alias for a programmatic name.
     */
    void bindAlias([in]string programmaticName, 
                   [in]com::sun::star::lang::Locale locale, 
                    [in]string alias) 
        raises (com::sun::star::container::ElementExistException); 
    //------------------------------------------------------------------------- 
    /** revokes an alias for a programmatic name.
     */
    void unbindAlias([in]com::sun::star::lang::Locale locale, 
                     [in]string alias) 
        raises (com::sun::star::container::NoSuchElementException); 
    //------------------------------------------------------------------------- 
    /** retrieves a registered porgrammatic name identified by an alias.
     */
    string lookupAlias([in]com::sun::star::lang::Locale locale, 
                         [in]string Alias) 
        raises (com::sun::star::container::NoSuchElementException); 
    //------------------------------------------------------------------------- 
    /** retrieves a given alias for a programmatic name.
     */
    string lookupProgrammatic([in]com::sun::star::lang::Locale locale, 
                                [in]string programmatic) 
        raises (com::sun::star::container::NoSuchElementException); 
    //------------------------------------------------------------------------- 
    /** removes all aliases for a programmatic name.
     */
    void unbindAliases([in]string programmaticName) 
        raises (com::sun::star::container::NoSuchElementException); 
    //------------------------------------------------------------------------- 
    /** rebinds all aliases registered to a given URL to a new one.
     */
    void rebindAliases([in]string currentProgrammatic, 
                        [in]string newProgrammatic) 
        raises (com::sun::star::container::NoSuchElementException, 
                com::sun::star::container::ElementExistException); 
    //------------------------------------------------------------------------- 
    /** renames an alias for a programmatic name.
     */
    void renameAlias([in]com::sun::star::lang::Locale locale, 
                     [in]string oldName, 
                     [in]string aNewName) 
        raises (com::sun::star::container::NoSuchElementException, 
                com::sun::star::container::ElementExistException); 
    //------------------------------------------------------------------------- 
    /** retrieves a list of all registered aliases for a certain language. 

         @param locale 
            specifies the locale scope. 

         @returns 
            a sequence of registered pair of alias and programmatic name.
     */
    sequence<AliasProgrammaticPair> listAliases([in]com::sun::star::lang::Locale locale); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
#endif 
