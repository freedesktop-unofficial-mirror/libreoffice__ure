/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XChainable.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 08:59:15 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_util_XChainable_idl__ 
#define __com_sun_star_util_XChainable_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__ 
#include <com/sun/star/lang/IllegalArgumentException.idl> 
#endif 
 
 
//============================================================================= 
 
module com {  module sun {  module star {  module util {  
 
//============================================================================= 
 
/** enables the object to be a member of a chain.
 */
published interface XChainable: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
    /** @returns 
                the previous object in this chain or NULL, if this is the first  
                object of this chain.
     */
    com::sun::star::util::XChainable getPredecessor(); 
 
    //------------------------------------------------------------------------- 
    /** @returns 
                the next object in this chain or NULL, if this is the last  
                object in this chain.
     */
    com::sun::star::util::XChainable getSuccessor(); 
 
    //------------------------------------------------------------------------- 
    /** connects the specified object to this object as the successor in a chain. 
        
        <p>This implies that this object will become the predecessor of 
        <var>xChainable</var>.  </p>
     */
    void setSuccessor( [in] com::sun::star::util::XChainable xChainable ) 
            raises( com::sun::star::lang::IllegalArgumentException ); 
 
    //------------------------------------------------------------------------- 
    /** checks if the specified object can be linked to this.
     */
    boolean isChainable( [in] com::sun::star::util::XChainable xChainable ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
