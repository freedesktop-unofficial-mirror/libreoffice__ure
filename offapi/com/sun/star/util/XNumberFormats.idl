/*************************************************************************
 *
 *  $RCSfile: XNumberFormats.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-26 13:58:13 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_util_XNumberFormats_idl__ 
#define __com_sun_star_util_XNumberFormats_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_beans_XPropertySet_idl__ 
#include <com/sun/star/beans/XPropertySet.idl> 
#endif 
 
#ifndef __com_sun_star_lang_Locale_idl__ 
#include <com/sun/star/lang/Locale.idl> 
#endif 
 
#ifndef __com_sun_star_util_MalformedNumberFormatException_idl__ 
#include <com/sun/star/util/MalformedNumberFormatException.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module util {  
 
//============================================================================= 
 
/** provides access to multiple <type>NumberFormat</type>s.
 */
interface XNumberFormats: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** @returns  
                    a readonly <type>NumberFormatProperties</type>.
     */
    com::sun::star::beans::XPropertySet getByKey( [in] long nKey ); 
 
    //------------------------------------------------------------------------- 
     
    /** @returns  
                    a sequence of the keys of all number formats with the specified type and language. 
         
                @param	nType 
                        the type of number formats to return. Must be one of the 
                        <type>NumberFormat</type> constants. 
         
                @param	nLanguage 
                        the language of number formats to return. 
         
                @param	bCreate 
                        <TRUE/>: create new entries if no formats for the selected language exist<BR> 
                        <FALSE/>: return an empty list if no formats for the selected language exist
     */
    sequence<long> queryKeys( [in] short nType, 
             [in] com::sun::star::lang::Locale nLocale, 
             [in] boolean bCreate ); 
 
    //------------------------------------------------------------------------- 
     
    /** finds a number format by its format string and returns its key.
     */
    long queryKey( [in] string aFormat, 
             [in] com::sun::star::lang::Locale nLocale, 
             [in] boolean bScan ); 
 
    //------------------------------------------------------------------------- 
     
    /** adds a new number format to the list, using a format string.
     */
    long addNew( [in] string aFormat, 
             [in] com::sun::star::lang::Locale nLocale ) 
            raises( com::sun::star::util::MalformedNumberFormatException ); 
 
    //------------------------------------------------------------------------- 
     
    /** adds a new number format to the list, using a format 
        string in a different locale than the desired locale of the 
        resulting number format.
     */
    long addNewConverted( [in] string aFormat, 
             [in] com::sun::star::lang::Locale nLocale, 
             [in] com::sun::star::lang::Locale nNewLocale ) 
            raises( com::sun::star::util::MalformedNumberFormatException ); 
 
    //------------------------------------------------------------------------- 
     
    /** removes a number format from the list.
     */
    void removeByKey( [in] long nKey ); 
 
    //------------------------------------------------------------------------- 
     
    /** generates a format string from several parameters without
        creating an actual number format.
     */
    string generateFormat( [in] long nBaseKey, 
             [in] com::sun::star::lang::Locale nLocale, 
             [in] boolean bThousands, 
             [in] boolean bRed, 
             [in] short nDecimals, 
             [in] short nLeading ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif

