/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: FileSystemStorage.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:04:09 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_embed_FileSystemStorage_idl__
#define __com_sun_star_embed_FileSystemStorage_idl__

#ifndef __com_sun_star_embed_BaseStorage_idl__ 
#include <com/sun/star/embed/BaseStorage.idl>
#endif

//============================================================================

 module com {  module sun {  module star {  module embed {

//============================================================================
/** This is a service that allows to get access to a file system folder using
    storage hierarchy.
 */
service FileSystemStorage
{
    // -----------------------------------------------------------------------
    /** This service describes the base functionality of storages.

        <p>
        Please see below the description of additional requirements for the
        file system storage implementation.
        </p>

        <dl>
            <dt>interface <type scope="com::sun::star::lang">XComponent</type>
            </dt>
            <dd>
                <p>
                A file system storage is created either by
                <type>StorageFactory</type> or by <type>XStorage</type>
                interface and is controlled by refcounting. In case
                refcounting is decreased to zero the storage will be
                disposed automatically.
                </p>

                <p>
                In case a storage object is disposed the elements
                ( substorages and substreams ) are not affected.
                </p>
            </dd>
            <dt>interface <type>XStorage</type></dt>
            <dd>
                <dl>
                    <dt><method>XStorage::openStorageElement</method></dt>
                    <dd>
                        This method returns <type>FileSystemStorage</type>
                        service implementation.
                    </dd>

                    <dt><method>XStorage::copyLastCommitTo</method></dt>
                    <dd>
                        Since this service implementation supports no transaction
                        this method just creates a copy of the storage in it's
                        current state.
                    </dd>

                    <dt><method>XStorage::copyStorageElementLastCommitTo</method></dt>
                    <dd>
                        Since this service implementation supports no transaction
                        this method just creates a copy of the storage in it's
                        current state.
                    </dd>

                    <dt><method>XStorage::removeStorageElement</method></dt>
                    <dd>
                        If the element is opened and it is a stream element
                        the removing will fail. If the element is opened and
                        it is a storage element, all the contents that can be
                        removed will be removed.
                    </dd>
                </dl>
            </dd>
            <dt>property URL</dt>
            <dd>
                This property is not optional for this service.
            </dd>
        </dl>
                
     */
    service BaseStorage;
};

//============================================================================

}; }; }; };

#endif

