/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: InstanceLocker.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: rt $ $Date: 2006-02-09 13:44:36 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_embed_InstanceLocker_idl__
#define __com_sun_star_embed_InstanceLocker_idl__

#ifndef __com_sun_star_lang_XComponent_idl__
#include <com/sun/star/lang/XComponent.idl>
#endif
#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_embed_XActionsApproval_idl__
#include <com/sun/star/embed/XActionsApproval.idl>
#endif
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif
#ifndef __com_sun_star_frame_DoubleInitializationException_idl__
#include <com/sun/star/frame/DoubleInitializationException.idl>
#endif

//=============================================================================
module com {  module sun {  module star {  module embed {

//-----------------------------------------------------------------------------
/** The main task of this service is to prevent closing, terminating and/or
    etc. of controlled object.
    
    <p>
    After creation the service adds a listener of requested type
    ( close, terminate and/or etc. ) to the controlled object and let
    the listener throw related veto exception until the service is disposed.
    </p>
*/
service InstanceLocker : com::sun::star::lang::XComponent
{
    /** is used to initialize the object on it's creation.

        @param xInstance
                the controlled object. Must implement the related to the
                requested actions broadcaster interface.

        @param nActions
                specifies the actions that should be done ( prevent closing,
                prevent termination and/or etc. ). It must not be empty and can
                currently contain following values or their combination:
                <type>Actions</type>::PREVENT_CLOSE and 
                <type>Actions</type>::PREVENT_TERMINATION.
     */
    InstanceLockerCtor1( [in] com::sun::star::uno::XInterface xInstance,
                         [in] long nActions )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::frame::DoubleInitializationException,
                ::com::sun::star::uno::Exception );

    /** is used to initialize the object on it's creation.

        @param xInstance
                the controlled object. Must implement the related to the
                requested actions broadcaster interface.

        @param nActions
                specifies the actions that should be done ( prevent closing,
                prevent termination and/or etc. ). It must not be empty and can
                currently contain following values or their combination:
                <type>Actions</type>::PREVENT_CLOSE and 
                <type>Actions</type>::PREVENT_TERMINATION.

        @param xApprove
                The object implementing <type>XActionsApproval</type> interface.
                If this parameter is an empty reference the object will proceed
                with the specified in the first parameter action until it is
                disposed ( just like in the case of the first constructor ).
                If the instance is provided, it will be asked for approval each
                time before proceeding with the action ( the action is
                specified using <type>string</type> and can take following
                values in this case: "PreventClose", "PreventTermination" ).
     */
    InstanceLockerCtor2( [in] com::sun::star::uno::XInterface xInstance,
                         [in] long aActions,
                         [in] XActionsApproval xApprove )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::frame::DoubleInitializationException,
                ::com::sun::star::uno::Exception );
};

//=============================================================================

}; }; }; };

#endif

