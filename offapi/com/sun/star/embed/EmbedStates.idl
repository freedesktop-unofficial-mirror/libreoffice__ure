/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: EmbedStates.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:02:53 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_embed_EmbedStates_idl__
#define __com_sun_star_embed_EmbedStates_idl__


//============================================================================

module com { module sun { module star { module embed {

//============================================================================
/** This constant set contains possible states for
<type>EmbeddedObject</type>.
*/
constants EmbedStates
{
    //------------------------------------------------------------------------
    /** "Loaded" - the persistent representation of the object is loaded in
        memory.

        <p> 
        The object is created and assigned with a persistent entry, 
        and a view representation ( metafile and etc. ) can be retrieved
        ( if there is any ).
        </p>
     */
    const long LOADED = 0;

    //------------------------------------------------------------------------
    /** "Running" - the object is connected and loaded.
    
        <p>
        The object has a connection to the container client and a component
        loaded from persistent entry. In case of internal document it also
        means existing of document model that implements
        <type scope="com::sun::star::frame">XModel</type> interface.
        </p>
     */
    const long RUNNING = 1;

    //------------------------------------------------------------------------
    /** "Active" - the object is activated in separate window
        ( outplace activation ).
     */
    const long ACTIVE = 2;

    //------------------------------------------------------------------------
    /** "Inplace active" - the object has own window in the container's
        window.

        <p>
        The object is activated and has it's own window in the container's
        window that allows object to process mouse events and control own
        rendering.
        </p>
     */
    const long INPLACE_ACTIVE = 3;

    //------------------------------------------------------------------------
    /** "UI active" - the inplace active object that has user interface.

        <p>
        The object is inplace active, allowed to have menues, toolbars,
        keyboard accelerators, and has the focus.
        </p>
     */
    const long UI_ACTIVE = 4;
};

//============================================================================

}; }; }; };

#endif

