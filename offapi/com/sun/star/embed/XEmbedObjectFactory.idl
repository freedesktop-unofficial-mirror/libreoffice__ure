/*************************************************************************
 *
 *  $RCSfile: XEmbedObjectFactory.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: kz $ $Date: 2003-09-11 10:24:51 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_embed_XEmbedObjectFactory_idl__
#define __com_sun_star_embed_XEmbedObjectFactory_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_embed_XStorage_idl__
#include <com/sun/star/embed/XStorage.idl>
#endif

#ifndef __com_sun_star_io_IOException_idl__
#include <com/sun/star/io/IOException.idl>
#endif

#ifndef __com_sun_star_embed_WrongStateException_idl__
#include <com/sun/star/embed/WrongStateException.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module embed {

//=============================================================================
/** Allows to create and initialize a new embedded object.
 */
interface XEmbedObjectFactory: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Creates a new object without initialization.

        <p> The method creates an object without any initialization
        The caller must set persistent entry for the object immediatelly
        after it is created with this method.
        </p>
        
        @param aClassID
            the class id of the new object

        @param aClassName
            the class name of the new object

        @thrown ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @throws com::sun::star::uno::Exception
            in case of other problems
     */
    ::com::sun::star::uno::XInterface createInstanceWithoutInit( [in] sequence< byte > aClassID, [in] string aClassName )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::uno::Exception );

    //-------------------------------------------------------------------------
    /** Creates a new object that should be based on specified storage entry.

        <p> The specified entry must exists and the object should be loaded from the entry.
        </p>
        
        @param xStorage
            a parent storage the entry should be created/opened in

        @param sEntName
            a name for the entry

        @param bIsReadonly
            whether object is readonly or not

        @thrown ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @thrown ::com::sun::star::container::NoSuchElementException
            the specified entry does not exist

        @throws com::sun::star::io::IOException
            in case of io problems during opening\creation

        @throws com::sun::star::uno::Exception
            in case of other problems
     */
    ::com::sun::star::uno::XInterface createInstanceInitFromEntry( [in] ::com::sun::star::embed::XStorage xStorage,
                                         [in] string sEntName,
                                         [in] boolean bIsReadonly )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::container::NoSuchElementException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    //-------------------------------------------------------------------------
    /** Creates a new object and initializes it based on <type>MediaDescriptor</type>.

        <p> In case specified entry exists it will be overwritten on storing.
        </p>
        
        @param xStorage
            a parent storage the entry should be created/opened in

        @param sEntName
            a name for the entry

        @param aMediaDescriptor
            an object of type <type>MediaDescriptor</type> that specifies source

        @thrown ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @throws com::sun::star::io::IOException
            in case of io problems during opening\creation

        @throws com::sun::star::uno::Exception
            in case of other problems
     */
    ::com::sun::star::uno::XInterface createInstanceInitFromMediaDescriptor( [in] ::com::sun::star::embed::XStorage xStorage,
                                             [in] string sEntName,
                                             [in] sequence< ::com::sun::star::beans::PropertyValue > aMediaDescr )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    //-------------------------------------------------------------------------
    /** Creates a new object and initializes it as a new one.

        <p> In case specified entry exists it will be overwritten on storing.
        </p>
        
        @param xStorage
            a parent storage the entry should be created/opened in

        @param sEntName
            a name for the entry

        @thrown ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @throws com::sun::star::io::IOException
            in case of io problems during opening\creation

        @throws com::sun::star::uno::Exception
            in case of other problems
     */
    ::com::sun::star::uno::XInterface createInstanceInitNew( [in] sequence< byte > aClassID,
                                [in] string aClassName,
                                [in] ::com::sun::star::embed::XStorage xStorage,
                                 [in] string sEntName )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );
};

//=============================================================================

}; }; }; };

#endif

