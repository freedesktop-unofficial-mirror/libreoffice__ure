/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XLinkageSupport.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:13:44 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_embed_XLinkageSupport_idl__
#define __com_sun_star_embed_XLinkageSupport_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_embed_XStorage_idl__
#include <com/sun/star/embed/XStorage.idl>
#endif

#ifndef __com_sun_star_embed_XCommonEmbedPersist_idl__
#include <com/sun/star/embed/XCommonEmbedPersist.idl>
#endif

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

#ifndef __com_sun_star_embed_WrongStateException_idl__
#include <com/sun/star/embed/WrongStateException.idl>
#endif

//============================================================================

 module com {  module sun {  module star {  module embed {

//============================================================================
/** specifies an additional implementation for linked embedded object support.
 */
interface XLinkageSupport: XCommonEmbedPersist
{
    //------------------------------------------------------------------------
    /** breaks the link and provides the object with a parent storage and a
        name for object's entry
    
        <p>
        This method can be used only for links implementations that implement
        the whole set of embedded object interfaces. Usually the sets of
        interfaces are the same for links and objects. An example of exception
        from this are OOo links that do not implement
        <type>XEmbedPersist</type> interface. For such cases the method will
        throw an exception.
        </p>

        <p>
        The link will be broken and the linked object will become a normal
        embedded object.
        </p>

        <p>
        An entry with the specified name should be created\opened inside
        provided storage. This entry will be used for the object persistence.
        If the entry exists already all it's contents will be ignored.
        </p>

        @param xStorage
            a parent storage the entry should be created\opened in

        @param sEntryName
            a name for the entry

        @throws ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @throws com::sun::star::embed::WrongStateException
            the object is in wrong state or not a linked object

        @throws com::sun::star::io::IOException
            in case object has not persistence or other io problems

        @throws com::sun::star::uno::Exception
            in case of other problems

        @see also XEmbedPersist::setPersistentEntry
     */
    void breakLink( [in] ::com::sun::star::embed::XStorage xStorage,
                    [in] string sEntryName )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::embed::WrongStateException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );


    //------------------------------------------------------------------------
    /** allows to detect whether the object is a linked one.
        <p>
            Most of embedded objects will not support this interface, but some
        of them can do it, to allow conversion from link to object. After
        the conversion the object does not change, so interface set staies the
        same, but the object is not a link any more.
        </p>

        @return
            <TRUE/> - the object is a linked one.
            <FALSE/> - otherwise

        @throws com::sun::star::embed::WrongStateException
            the object is in wrong state
     */
    boolean isLink()
        raises( ::com::sun::star::embed::WrongStateException );

    //------------------------------------------------------------------------
    /** returns the URL of the link object.

        @throws com::sun::star::embed::WrongStateException
            the object is in wrong state or is not a link
     */
    string getLinkURL()
        raises( ::com::sun::star::embed::WrongStateException,
                ::com::sun::star::uno::Exception );
};

//============================================================================

}; }; }; };

#endif

