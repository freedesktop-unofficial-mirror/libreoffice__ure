/*************************************************************************
 *
 *  $RCSfile: XVisualObject.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: kz $ $Date: 2004-10-04 17:39:53 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_embed_XVisualObject_idl__
#define __com_sun_star_embed_XVisualObject_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_awt_Size_idl__
#include <com/sun/star/awt/Size.idl>
#endif

#ifndef __com_sun_star_embed_VisualRepresentation_idl__
#include <com/sun/star/embed/VisualRepresentation.idl>
#endif

#ifndef __com_sun_star_embed_WrongStateException_idl__
#include <com/sun/star/embed/WrongStateException.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif


//=============================================================================

 module com {  module sun {  module star {  module embed {

//=============================================================================
/** represents common visualisation functionality for embedded objects.
 */
interface XVisualObject: ::com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** sets the size of object's visual area.

        <p>
        The size must be provided in logical units according to map mode the
        object communicates in.
        </p>

        <p>
        If an object is inplace- or ui-active the method must not initiate
        repainting itself.
        </p>

        @param nAspect
            the aspect specifying the form of object representation
            can take values from <type>Aspects</type> constant set

        @param aSize
            the new size of the visual area

        @thrown ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @throws ::com::sun::star::embed::WrongStateException
            the object is in wrong state

        @throws ::com::sun::star::uno::Exception
            the object failed to resize
     */
    void setVisualAreaSize( [in] hyper nAspect,
                         [in] ::com::sun::star::awt::Size aSize )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::embed::WrongStateException,
                ::com::sun::star::uno::Exception );

    //-------------------------------------------------------------------------
    /** gets the size of object's visual area.

        <p>
        The size must be provided in logical units according to map mode the
        object communicates in.
        </p>

        @param nAspect
            the aspect specifying the form of object representation
            can take values from <type>Aspects</type> constant set

        @return
            the size of visual area

        @thrown ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @throws ::com::sun::star::embed::WrongStateException
            the object is in wrong state
     */
    ::com::sun::star::awt::Size getVisualAreaSize( [in] hyper nAspect )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::embed::WrongStateException,
                ::com::sun::star::uno::Exception );

    //------------------------------------------------------------------------
    /** retrieves visual representation of the object in preferable format.

        <p>
        If the object persistance entry contains cached visual representation
        then it can be retrieved by using this method even in loaded state.
        </p>

        @param nAspect
            the aspect the representation is requested for

        @return
            the visual representation of the object in the default format and
            the format

        @throws ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @throws ::com::sun::star::embed::WrongStateException
            the object is in wrong state

        @throws ::com::sun::star::uno::Exception
            in case of problems

     */
    VisualRepresentation getPreferredVisualRepresentation( [in] hyper nAspect )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::embed::WrongStateException,
                ::com::sun::star::uno::Exception );


    //-------------------------------------------------------------------------
    /** retrieves map mode the object communicates in.

        @param nAspect
            the aspect the map mode is requested for

        @return
            the map mode the object communicates in, it can take values from
            <type>EmbedMapUnits</type> constant

        @throws ::com::sun::star::embed::WrongStateException
            the object is in wrong state

        @throws ::com::sun::star::uno::Exception
            in case of problems
     */
    long getMapUnit( [in] hyper nAspect )
        raises( ::com::sun::star::uno::Exception );
};

//=============================================================================

}; }; }; };

#endif

