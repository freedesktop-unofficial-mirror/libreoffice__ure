/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XActionLockable.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 23:08:48 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_document_XActionLockable_idl__  
#define __com_sun_star_document_XActionLockable_idl__  
  
#ifndef __com_sun_star_uno_XInterface_idl__  
#include <com/sun/star/uno/XInterface.idl>  
#endif  
  
  
//=============================================================================  
  
module com {   module sun {   module star {   module document {   
  
//=============================================================================  
  
/** makes it possible to prevent object internal updates for a certain period
    to be able to quickly change multiple parts of the objects, where the
    updates would invalidate each other, anyway.
 */
published interface XActionLockable: com::sun::star::uno::XInterface
{  
    //-------------------------------------------------------------------------  
    /** @returns
            <TRUE/> if at least one lock exists.
     */
    boolean isActionLocked();  
  
    //-------------------------------------------------------------------------  
    /** increments the lock count of the object by one.
     */
    void addActionLock();  
  
    //-------------------------------------------------------------------------  
    /** decrements the lock count of the object by one.
     */
    void removeActionLock();  
  
    //-------------------------------------------------------------------------  
    /** sets the locking level.
        
        <p>This method is used for debugging purposes. The programming
        environment can restore the locking after a break of a debug
        session.</p>
     */
    void setActionLocks( [in] short nLock );  
  
    //-------------------------------------------------------------------------  
    /** resets the locking level.
        
        <p>This method is used for debugging purposes. The debugging
        environment of a programming language can reset the locks
        to allow refreshing of the view if a breakpoint is reached or
        step execution is used. </p>
     */
    short resetActionLocks();  
  
};  
  
//=============================================================================  
  
}; }; }; };   
  
#endif  
