/*************************************************************************
 *
 *  $RCSfile: XBinaryStreamResolver.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: obo $ $Date: 2004-06-03 18:47:09 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_document_XBinaryStreamResolver_idl__
#define __com_sun_star_document_XBinaryStreamResolver_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_io_XInputStream_idl__
#include <com/sun/star/io/XInputStream.idl>
#endif
#ifndef __com_sun_star_io_XOututStream_idl__
#include <com/sun/star/io/XOutputStream.idl>
#endif

//============================================================================= 
 
module com {  module sun {  module star {  module document {  
 
//============================================================================= 
 
/** 
    <p>This interface encapsulates functionality to get/resolve binary data streams.
    It is used to transform binary data to an url or to transform an url to binary
    data. The binary data is represented through input and output streams.</p> 
    
    <p>In the case of transforming an url to binary data, the <code>getInputStream</code> 
    method is used. This returns a <type scope="com::sun::star::io">XInputStream</type> 
    from which the binary data, transformed from the given url, can be read.</p>
     
    <p>In the case of transforming binary data to an url, a 
    <type scope="com::sun::star::io">XOutputStream</type> is created first to write 
    the binary data to. After this, the <code>resolveOutputStream</code> method can 
    be used to transform the binary data, represented through the 
    <type scope="com::sun::star::io">XOutputStream</type> interface, to an url.</p>
 */
published interface XBinaryStreamResolver: com::sun::star::uno::XInterface
{ 
    /** converts the given URL from the source URL namespace to an input stream,
        from which binary data can be read
    */
    com::sun::star::io::XInputStream getInputStream( [in] string aURL );

    /** creates an output stream, to which binary data can be written.
        After writing, an URL can be retrieved by a call to 
        <method>XBinaryStreamResolver::resolveOutputStream</method>.
    */
    com::sun::star::io::XOutputStream createOutputStream();

    /** converts the output stream, data has been written to, to an URL in 
        source URL namespace.
    */
    string resolveOutputStream( [in] com::sun::star::io::XOutputStream aBinaryStream );
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
