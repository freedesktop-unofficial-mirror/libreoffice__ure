/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XStorageBasedDocument.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 23:16:22 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_embed_XStorageBasedDocument_idl__
#define __com_sun_star_embed_XStorageBasedDocument_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_embed_XStorage_idl__
#include <com/sun/star/embed/XStorage.idl>
#endif

#ifndef __com_sun_star_io_IOException_idl__
#include <com/sun/star/io/IOException.idl>
#endif

#ifndef __com_sun_star_frame_DoubleInitializationException_idl__
#include <com/sun/star/frame/DoubleInitializationException.idl>
#endif

#ifndef __com_sun_star_document_XStorageChangeListener_idl__
#include <com/sun/star/document/XStorageChangeListener.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

//============================================================================

 module com {  module sun {  module star {  module document {

//============================================================================
/** allows to initialize document with a storage, to store document to
    a storage, and to set document to be based on provided storage.
 */
interface XStorageBasedDocument: com::sun::star::uno::XInterface
{
    //------------------------------------------------------------------------
    /** lets the document load itself using provided storage.
     */
    void loadFromStorage(
            [in] ::com::sun::star::embed::XStorage xStorage,
            [in] sequence< ::com::sun::star::beans::PropertyValue > aMediaDescriptor )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::frame::DoubleInitializationException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    //------------------------------------------------------------------------
    /** lets the document store itself to the provided storage.
     */
    void storeToStorage(
            [in] ::com::sun::star::embed::XStorage xStorage,
            [in] sequence< ::com::sun::star::beans::PropertyValue > aMediaDescriptor )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    //------------------------------------------------------------------------
    /** allows to switch the document to the provided storage.
     */
    void switchToStorage( [in] ::com::sun::star::embed::XStorage xStorage )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );


    //------------------------------------------------------------------------
    /** allows to get the storage the document is based on.
     */
    ::com::sun::star::embed::XStorage getDocumentStorage()
        raises( ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    //------------------------------------------------------------------------
    /** allows to register a listener that will be notified when another
        storage is set to the document.
     */
    void addStorageChangeListener( [in] XStorageChangeListener xListener );

    //------------------------------------------------------------------------
    /** allows to deregister the listener.
     */
    void removeStorageChangeListener( [in] XStorageChangeListener xListener );

};

//============================================================================

}; }; }; };

#endif

