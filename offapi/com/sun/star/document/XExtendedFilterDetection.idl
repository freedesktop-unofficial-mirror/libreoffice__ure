/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XExtendedFilterDetection.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 23:12:57 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_document_XExtendedFilterDetection_idl__
#define __com_sun_star_document_XExtendedFilterDetection_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

//============================================================================

module com { module sun { module star { module document {

//============================================================================
/** provides a "deep" filter detection

    <p>
    A "deep" filter detection means looking into the document stream to detect
    the format of it. Services of type <type>ExtendedTypeDetection</type> must support this
    interface to be called from generic load mechanism of the office for that.
    </p>

    @see DetectService
    @see TypeDetection
    @see FilterFactory
 */
published interface XExtendedFilterDetection: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** controls agreement of a "flat" <type>TypeDetection</type>
        with given URL or arguments

        <p>
        Registerd services in configuration, which support this interface for different mime types,
        will be called automaticly to look into the document stream and cdecide wich format it represent.
        Add the collected information about detected documents in given <type>MediaDescriptor</type>
        <var>Descriptor</var>. The decision must be returned as any valid type name (which specifies
        the detected format) or an empty value for unknown formats.
        </p>

        @param Descriptor
            represent a <type>MediaDescriptor</type> which can be used to get/set informations
            about the detected document

        @returns
            an internal type name if format was detected successfully
            <br>
            or an empty value for an unknown document format.
     */
    string detect( [inout] sequence< com::sun::star::beans::PropertyValue > Descriptor );

}; }; }; }; };

#endif
