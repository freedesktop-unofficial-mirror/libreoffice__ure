/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: DataPilotField.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 04:28:53 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_DataPilotField_idl__
#define __com_sun_star_sheet_DataPilotField_idl__

#ifndef __com_sun_star_container_XNamed_idl__
#include <com/sun/star/container/XNamed.idl>
#endif

#ifndef __com_sun_star_beans_XPropertySet_idl__
#include <com/sun/star/beans/XPropertySet.idl>
#endif

#ifndef __com_sun_star_sheet_XDataPilotField_idl__
#include <com/sun/star/sheet/XDataPilotField.idl>
#endif

#ifndef __com_sun_star_sheet_XDataPilotFieldGrouping_idl__
#include <com/sun/star/sheet/XDataPilotFieldGrouping.idl>
#endif

#ifndef __com_sun_star_sheet_DataPilotFieldOrientation_idl__
#include <com/sun/star/sheet/DataPilotFieldOrientation.idl>
#endif

#ifndef __com_sun_star_sheet_GeneralFunction_idl__
#include <com/sun/star/sheet/GeneralFunction.idl>
#endif

#ifndef __com_sun_star_sheet_DataPilotFieldReference_idl__
#include <com/sun/star/sheet/DataPilotFieldReference.idl>
#endif

#ifndef __com_sun_star_sheet_DataPilotFieldLayoutInfo_idl__
#include <com/sun/star/sheet/DataPilotFieldLayoutInfo.idl>
#endif

#ifndef __com_sun_star_sheet_DataPilotFieldAutoShowInfo_idl__
#include <com/sun/star/sheet/DataPilotFieldAutoShowInfo.idl>
#endif

#ifndef __com_sun_star_sheet_DataPilotFieldSortInfo_idl__
#include <com/sun/star/sheet/DataPilotFieldSortInfo.idl>
#endif

#ifndef __com_sun_star_sheet_DataPilotFieldGroupInfo_idl__
#include <com/sun/star/sheet/DataPilotFieldGroupInfo.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** represents a single field in a data pilot table.

    <p>If the data pilot table is based on a spreadsheet cell range, a
    field is representred by a column of the range and is named using
    the topmost cell of the column.</p>
 */
published service DataPilotField
{
    //-------------------------------------------------------------------------

    /** provides access to the name of the data pilot field.
     */
    interface com::sun::star::container::XNamed;

    //-------------------------------------------------------------------------

//!published service PropertySet
    /** provides access to the properties.
     */
    interface com::sun::star::beans::XPropertySet;

    //-------------------------------------------------------------------------

    [optional] interface com::sun::star::sheet::XDataPilotField;

    //-------------------------------------------------------------------------

    [optional] interface com::sun::star::sheet::XDataPilotFieldGrouping;

    //=========================================================================

    /** specifies the orientation of the field.
     */
    [property] com::sun::star::sheet::DataPilotFieldOrientation Orientation;

    //-------------------------------------------------------------------------

    /** specifies the function used to calculate results for this field.

        <p>For column and row fields, this is the function for subtotals
        (<const>GeneralFunction::NONE</const> means no subtotals).
        For data fields, this is the function shown in the data pilot
        table.</p>
     */
    [property] com::sun::star::sheet::GeneralFunction Function;


    //-------------------------------------------------------------------------

    /** specifies the selected page which is used to filter the data pilot.
     */
    [property,optional] string SelectedPage;

    //-------------------------------------------------------------------------

    /** specifies whether to use the selected page to filter the data pilot or
        show all.
     */
    [property,optional] boolean UseSelectedPage;

    //-------------------------------------------------------------------------

    /** specifies which hierarchy of the dimension is used.

    @see com::sun::star::sheet::DataPilotSourceHierarchies
     */
    [property,optional] string UsedHierarchy;

    //-------------------------------------------------------------------------

    /** specifies whether this field has sorting information.
     */
    [property,optional] boolean HasSortInfo;

    //-------------------------------------------------------------------------

    /** controls how the field's items are sorted.
     */
    [property,optional] com::sun::star::sheet::DataPilotFieldSortInfo SortInfo;

    //-------------------------------------------------------------------------

    /** specifies whether this field has layout information.
     */
    [property,optional] boolean HasLayoutInfo;

    //-------------------------------------------------------------------------

    /** controls how the field's items are laid out in the result table.
     */
    [property,optional] com::sun::star::sheet::DataPilotFieldLayoutInfo LayoutInfo;

    //-------------------------------------------------------------------------

    /** specifies whether this field has auto show information.
     */
    [property,optional] boolean HasAutoShowInfo;

    //-------------------------------------------------------------------------

    /** enables the automatic inclusion of only a number of items with
        the highest or lowest result values.
     */
    [property,optional] com::sun::star::sheet::DataPilotFieldAutoShowInfo AutoShowInfo;

    //-------------------------------------------------------------------------

    /** specifies whether this field has a reference.
     */
    [property,optional] boolean HasReference;

    //-------------------------------------------------------------------------

    /** controls how the results are shown in relation to a selected
        reference result.
     */
    [property,optional] com::sun::star::sheet::DataPilotFieldReference Reference;

    //-------------------------------------------------------------------------

    /** specifies whether this field is a group field.
     */
    [property,optional] boolean IsGroupField;

    //-------------------------------------------------------------------------

    /** contains the grouping information of the Field
     */
    [property,optional] com::sun::star::sheet::DataPilotFieldGroupInfo GroupInfo;

    /** specifies whether to show this field also if it is empty or not.
     */
    [property,optional] boolean ShowEmpty;
};

//=============================================================================

}; }; }; };

#endif

