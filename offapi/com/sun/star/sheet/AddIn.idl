/*************************************************************************
 *
 *  $RCSfile: AddIn.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: mi $ $Date: 2000-12-19 13:59:41 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRUNTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRUNTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc..
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_sheet_AddIn_idl__ 
#define __com_sun_star_sheet_AddIn_idl__ 
 
#ifndef __com_sun_star_lang_XServiceName_idl__ 
#include <com/sun/star/lang/XServiceName.idl> 
#endif 
 
#ifndef __com_sun_star_sheet_XAddIn_idl__ 
#include <com/sun/star/sheet/XAddIn.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module sheet {  
 
//============================================================================= 
 
// DocMerge from xml: service com::sun::star::sheet::AddIn
/** is the base for AddIn services that supply functions which can be called
    by other components.
    
    
    
    <p>Any AddIn implementation must implement a service describing its
    specific set of functions.
    That service must contain the <type>AddIn</type> service, and the
    functions that are implemented, in one or more interfaces.
    The <type scope="com::sun::star::lang">XServiceName</type> interface
    must describe that service, and the <type>XAddIn</type> interface
    must describe the individual functions.</p>
    
    <p>Each AddIn function can take parameters of the following types:</p>
    <dl>
    <dt>
    <atom>long</atom>
    </dt>
    <dd>for integer values.
    </dd>
    <dt>
    <atom>double</atom>
    </dt>
    <dd>for floating point values.
    </dd>
    <dt>
    <atom>string</atom>
    </dt>
    <dd>for text strings.
    </dd>
    <dt>
    <atom>long[][]</atom>
    </dt>
    <dd>for (two-dimensional) arrays of integer values.
    </dd>
    <dt>
    <atom>double[][]</atom>
    </dt>
    <dd>for (two-dimensional) arrays of floating point values.
    </dd>
    <dt>
    <atom>string[][]</atom>
    </dt>
    <dd>for (two-dimensional) arrays of text strings.
    </dd>
    <dt>
    <atom>any[][]</atom>
    </dt>
    <dd>for (two-dimensional) arrays of mixed contents.
    Each <atom>any</atom> will contain a <atom>double</atom>
    or a <atom>string</atom>, depending on the data.
    </dd>
    <dt>
    <atom>any</atom>
    </dt>
    <dd>Depending on the data, a <atom>double</atom>,
    a <atom>string</atom>, or an
    <atom>any[][]</atom>
    will be passed. If no argument is specified in the
    function call, <void/> will be passed. This allows
    for optional parameters.
    </dd>
    <dt>
    <type scope="com::sun::star::table">XCellRange</type>
    </dt>
    <dd>for a <type scope="com::sun::star::table">XCellRange</type>
    interface to the source data.
    </dd>
    <dt>
    <type scope="com::sun::star::beans">XPropertySet</type>
    </dt>
    <dd>for a <type scope="com::sun::star::beans">XPropertySet</type>
    interface to the <type>SpreadsheetDocument</type>
    making the function call. Only one parameter of this type
    is allowed in each function. It can be used to query
    document settings like
    <member>SpreadsheetDocumentSettings::NullDate</member>.
    </dd>
    <dt>
    <atom>any[]</atom>
    </dt>
    <dd>for varying parameters. Only the last parameter of a
    function may have this type. It will be filled with the
    remaining arguments of the function call that were not
    used for the previous parameters. Each element of the
    sequence will be filled as in the case of
    <atom>any</atom> above.
    </dd>
    </dl>
    
    <p>Each AddIn function must have one of the following return types:</p>
    <ul>
    <li>
    <atom>long</atom>
    </li>
    <li>
    <atom>double</atom>
    </li>
    <li>
    <atom>string</atom>
    </li>
    <li>
    <atom>long[][]</atom>
    </li>
    <li>
    <atom>double[][]</atom>
    </li>
    <li>
    <atom>string[][]</atom>
    </li>
    <li>
    <atom>any[][]</atom>
    </li>
    <li>
    <type>XVolatileResult</type>
    </li>
    <li>
    <atom>any</atom>
    </li>
    </ul>
    <p>The sequences must contain arrays as described above for the
    parameter types.
    An <type>XVolatileResult</type> return value must contain an object
    implementing the <type>VolatileResult</type> service, that contains
    a volatile result. Subsequent calls with the same parameters must
    return the same object.
    An <atom>any</atom> return value can contain any of the other types.</p>
 */
service AddIn
{ 
    // DocMerge: empty anyway
    interface com::sun::star::lang::XServiceName; 
    
    // DocMerge: empty anyway
    interface com::sun::star::sheet::XAddIn; 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
    $Log: not supported by cvs2svn $
    Revision 1.4  2000/12/19 13:13:17  mi
    no dim='[][]' anymore for new document generator
    
    Revision 1.3  2000/11/08 12:43:45  mi
    moved from api
    
    Revision 1.2  2000/10/05 12:51:28  mi
    sequences presentation in documentation as attribute dim=[]
    
    Revision 1.1.1.1  2000/09/18 23:35:46  hjs
    initial import
    
    Revision 1.4  2000/09/11 11:52:47  mi
    documentation merged from XML
     
    Revision 1.2  2000/02/07 11:24:53  mi 
    zu #70728# missing documentation marked 
     
    Revision 1.1.1.1  1999/11/11 09:48:45  jsc 
    new 
     
 
=============================================================================*/ 
#endif 
