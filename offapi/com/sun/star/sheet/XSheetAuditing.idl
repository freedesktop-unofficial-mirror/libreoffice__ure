/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XSheetAuditing.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 05:17:27 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_XSheetAuditing_idl__
#define __com_sun_star_sheet_XSheetAuditing_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_table_CellAddress_idl__
#include <com/sun/star/table/CellAddress.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides methods to access auditing (detective) features in a
    spreadsheet.
 */
published interface XSheetAuditing: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** removes arrows for one level of dependents of a formula cell.

        <p>If the method is executed again for the same cell, the previous
        level of dependent cells is removed.</p>

        @param aPosition
            the address of the formula cell.
     */
    boolean hideDependents( [in] com::sun::star::table::CellAddress aPosition );

    //-------------------------------------------------------------------------

    /** removes arrows for one level of precedents of a formula cell.

        <p>If the method is executed again for the same cell, the previous
        level of dependent cells is removed.</p>

        @param aPosition
            the address of the formula cell.
     */
    boolean hidePrecedents( [in] com::sun::star::table::CellAddress aPosition );

    //-------------------------------------------------------------------------

    /** draws arrows between a formula cell and its dependents.

        <p>If the method is executed again for the same cell, the next
        level of dependent cells is marked.</p>

        @param aPosition
            the address of the formula cell.
     */
    boolean showDependents( [in] com::sun::star::table::CellAddress aPosition );

    //-------------------------------------------------------------------------

    /** draws arrows between a formula cell and its precedents.

        <p>If the method is executed again for the same cell, the next
        level of dependent cells is marked.</p>

        @param aPosition
            the address of the formula cell.
     */
    boolean showPrecedents( [in] com::sun::star::table::CellAddress aPosition );

    //-------------------------------------------------------------------------

    /** draws arrows between a formula cell containing an error
        and the cells causing the error.
     */
    boolean showErrors( [in] com::sun::star::table::CellAddress aPosition );

    //-------------------------------------------------------------------------

    /** marks all cells containing invalid values.
     */
    boolean showInvalid();

    //-------------------------------------------------------------------------

    /** removes all auditing arrows from the spreadsheet.
     */
    void clearArrows();

};

//=============================================================================

}; }; }; };

#endif

