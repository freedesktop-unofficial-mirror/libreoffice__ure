/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XConsolidationDescriptor.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 05:05:39 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_XConsolidationDescriptor_idl__
#define __com_sun_star_sheet_XConsolidationDescriptor_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_sheet_GeneralFunction_idl__
#include <com/sun/star/sheet/GeneralFunction.idl>
#endif

#ifndef __com_sun_star_table_CellRangeAddress_idl__
#include <com/sun/star/table/CellRangeAddress.idl>
#endif

#ifndef __com_sun_star_table_CellAddress_idl__
#include <com/sun/star/table/CellAddress.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides access to the settings of a consolidation descriptor.

    @deprecated

    @see com::sun::star::sheet::ConsolidationDescriptor
 */
published interface XConsolidationDescriptor: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** returns the function by which the ranges are consolidated.
     */
    com::sun::star::sheet::GeneralFunction getFunction();

    //-------------------------------------------------------------------------

    /** sets the function by which the ranges are consolidated.
     */
    void setFunction( [in] com::sun::star::sheet::GeneralFunction nFunction );

    //-------------------------------------------------------------------------

    /** returns the cell ranges which are consolidated.
     */
    sequence< com::sun::star::table::CellRangeAddress > getSources();

    //-------------------------------------------------------------------------

    /** sets the cell ranges which are consolidated.
     */
    void setSources(
            [in] sequence< com::sun::star::table::CellRangeAddress > aSources );

    //-------------------------------------------------------------------------

    /** returns the position of the top left cell of the cell range where
        the consolidated data are copied.
     */
    com::sun::star::table::CellAddress getStartOutputPosition();

    //-------------------------------------------------------------------------

    /** sets the position of the top left cell of the cell range
        where the consolidated data are copied.
     */
    void setStartOutputPosition(
            [in] com::sun::star::table::CellAddress aStartOutputPosition );

    //-------------------------------------------------------------------------

    /** returns, whether column headers from the cell ranges are used to
        find matching data or not.
     */
    boolean getUseColumnHeaders();

    //-------------------------------------------------------------------------

    /** specifies if column headers from the cell ranges are used to find
        matching data.
     */
    void setUseColumnHeaders( [in] boolean bUseColumnHeaders );

    //-------------------------------------------------------------------------

    /** returns, whether row headers from the cell ranges are used to
        find matching data or not.
     */
    boolean getUseRowHeaders();

    //-------------------------------------------------------------------------

    /** specifies if row headers from the cell ranges are used to find
        matching data.
     */
    void setUseRowHeaders( [in] boolean bUseRowHeaders );

    //-------------------------------------------------------------------------

    /** returns, whether links to the original data are inserted in the
        output area or not.
     */
    boolean getInsertLinks();

    //-------------------------------------------------------------------------

    /** specifies if links to the original data are inserted in the
        output area.
     */
    void setInsertLinks( [in] boolean bInsertLinks );

};

//=============================================================================

}; }; }; };

#endif

