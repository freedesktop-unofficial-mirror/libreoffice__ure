/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: SolverConstraint.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: ihi $ $Date: 2008-02-05 15:50:44 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_SolverConstraint_idl__
#define __com_sun_star_sheet_SolverConstraint_idl__

#ifndef __com_sun_star_table_CellAddress_idl__
#include <com/sun/star/table/CellAddress.idl>
#endif

#ifndef __com_sun_star_sheet_SolverConstraintOperator_idl__
#include <com/sun/star/sheet/SolverConstraintOperator.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** is used to specify a constraint for a solver model.
 */
struct SolverConstraint
{
    /// The address of the cell that is constrained.
    com::sun::star::table::CellAddress Left;

    /// The type of the constraint.
    SolverConstraintOperator Operator;

    /** The comparison value, of type <atom>double</atom> or
        <type scope="com::sun::star::table">CellAddress</type>.
     */
    any Right;
};

//=============================================================================

}; }; }; };

#endif

