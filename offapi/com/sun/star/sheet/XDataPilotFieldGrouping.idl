/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XDataPilotFieldGrouping.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 05:06:37 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_XDataPilotFieldGrouping_idl__
#define __com_sun_star_sheet_XDataPilotFieldGrouping_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_sheet_DataPilotFieldGroupInfo_idl__
#include <com/sun/star/sheet/DataPilotFieldGroupInfo.idl>
#endif
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif
 
//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides methods to control a data pilot field which has already
    been created.

    @see com::sun::star::sheet::DataPilotField
 */
published interface XDataPilotFieldGrouping: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** Creates a new Field which contains a group containing the given Items.

        @returns
            the new created field if there is one created.

            @see com::sun::star::sheet::DataPilotField

        @param aItems
            A sequence containing the Item names which have to be in the new group. This
            have to be Items of the current field.
     */
    com::sun::star::sheet::XDataPilotField createNameGroup([in] sequence< string > aItems)
        raises( com::sun::star::lang::IllegalArgumentException ); 

    //-------------------------------------------------------------------------

    /** Creates a new Field if the current field is grouped by dates. Doesn't create a new field
        if the field contains no dates or it isn't grouped yet.

        @returns
            the new created field if there is one created.
            
            @see com::sun::star::sheet::DataPilotField

        @param aInfo
            contains the information how to group the field.
     */
    com::sun::star::sheet::XDataPilotField createDateGroup([in] com::sun::star::sheet::DataPilotFieldGroupInfo aInfo)
        raises( com::sun::star::lang::IllegalArgumentException );
    
};

//=============================================================================

}; }; }; };

#endif

