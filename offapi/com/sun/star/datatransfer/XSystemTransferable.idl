/*************************************************************************
 *
 *  $RCSfile: XSystemTransferable.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: mi $ $Date: 2001-11-15 15:37:03 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_XSystemTransferable_idl__
#define __com_sun_star_datatransfer_XSystemTransferable_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer {

//=============================================================================
/** Interface to be implemented by  objects used to provide system dependent data
    for a transfer operation. Those objects usually also implement 
    com::sun::star:datatransfer::XTransferable;

    @see com::sun::star::datatransfer::XTransferable
    
*/

interface XSystemTransferable: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Called by a data consumer to obtain a system specific data object from the
        source.
        The data object is returned in an any. The contained type may differ on
        different platforms.
        The argument aProcessId contains a process identifier of the caller's process.
        The process ID can be obtained by the C function rtl_getGlobalProcessId
        (rtl/process.h).
        The interface implementation must ensure that the system data object can be
        used in that process. If the data object is not valid in the caller process
        then the returned any must be empty.

        Windows: The returned any contains an unsigned long which represents a pointer to
        an IDataObject interface. The caller of getData has to release the data
        object (IDataObject::Release) if it is no longer needed.
        The caller must make sure that the current thread has been initialized for
        OLE ( OleInitialize).
        
        @returns
        the system dependent data object.
    */
    any getData( [in] sequence < byte > aProcessId);
};
 
}; }; }; }; 

#endif
