/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XClipboardManager.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 22:50:45 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_clipboard_XClipboardManager_idl__
#define __com_sun_star_datatransfer_clipboard_XClipboardManager_idl__

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_container_ElementExistException_idl__
#include <com/sun/star/container/ElementExistException.idl>
#endif

#ifndef __com_sun_star_container_NoSuchElementException_idl__
#include <com/sun/star/container/NoSuchElementException.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer { module clipboard {

 published interface XClipboard;
                
//=============================================================================
/** This interface is used to retrieve, add, or remove clipboard instances.
 
    @see com::sun::star::datatransfer::clipboard::XClipboard
*/

published interface XClipboardManager: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Get a clipboard instance by name.
        
        @returns 
        The clipboard object with the specified name.

        @param aName 
        The name of clipboard to return. To retrieve the default (system) 
        clipboard, pass an empty string.

        @throws com::sun::star::container::NoSuchElementException
        if no clipboard with the specified name exists.
    */
    XClipboard getClipboard( [in] string aName )
        raises ( com::sun::star::container::NoSuchElementException );

    //-------------------------------------------------------------------------
    /** Add a clipboard instance to the manager's list.

        @param xClipboard
        The clipboard to add. 

        @throws com::sun::star::IllegalArgumentException
        if xClipboard is not a valid clipboard.

        @throws com::sun::star::container::ElementExistsException
        if a clipboard with the name of xClipboard already exists.
    */
    void addClipboard( [in] XClipboard xClipboard )
        raises ( com::sun::star::lang::IllegalArgumentException,
                 com::sun::star::container::ElementExistException );

    //-------------------------------------------------------------------------
    /** Removes the clipboard with the specified name from the list.

        @param aName 
        The name of the clipboard to remove.
    */
    void removeClipboard( [in] string aName );

    //-------------------------------------------------------------------------
    /** Get a list of a managed clipboards.

        @returns 
        A sequence of the names of all available clipboards.
     */
    sequence < string > listClipboardNames();
};

//=============================================================================

}; }; }; }; };

#endif
