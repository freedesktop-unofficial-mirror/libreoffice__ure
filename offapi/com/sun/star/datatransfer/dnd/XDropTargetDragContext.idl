/*************************************************************************
 *
 *  $RCSfile: XDropTargetDragContext.idl,v $
 *
 *  $Revision: 1.1 $
 *
 *  last change: $Author: obr $ $Date: 2001-01-26 11:27:47 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_dnd_XDropTargetContext_idl__
#define __com_sun_star_datatransfer_dnd_XDropTargetContext_idl__

#ifndef __com_sun_star_datatransfer_dnd_InvalidDNDOperationException_idl__
#include <com/sun/star/datatransfer/dnd/InvalidDNDOperationException.idl>
#endif

#ifndef __com_sun_star_datatransfer_DataFlavor_idl__
#include <com/sun/star/datatransfer/DataFlavor.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer { module dnd {

//=============================================================================
/** This interface is implemented by any DropTargetContext object.

    <p>A DropTargetContext is created whenever the logical cursor associated 
    with a Drag and Drop operation coincides with the visible geometry of a 
    Component associated with a DropTarget. </p>
    
    <p>The DropTargetContext provides the mechanism for a potential receiver 
    of a drop operation to both provide the end user with the appropriate drag 
    under feedback, but also to effect the subsequent data transfer if 
    appropriate. </p>

*/

[ uik(E6EFFA66-B551-11d4-82C90050-04D765F1), ident("XDropTargetDragContext",  0.1) ]
interface XDropTargetDragContext: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** accept the Drag. 

        <p>This method should be called from the <type>XDropTargetListener</type>s 
        <member>XDropTarget::dragEnter</member>, <member>XDropTarget::dragOver</member> 
        and <member>XDropTarget::dragActionChanged</member> methods if the 
        implementation wishes to accept an operation from the srcActions 
        <em>other</em> than the	one selected by the user as represented by the
        <member>DropTargetDragEvent::dropAction</member>.</p>

        @param dragOperation
        the operation accepted by the target.

        @throws InvalidDNDOperationException
        if the drop target is not in drag state.

        @see DNDConstants
        @see DropTargetDragEvent
    */
           
    void acceptDrag( [in] byte dragOperation )
        raises (InvalidDNDOperationException);

    //-------------------------------------------------------------------------
    /** reject the Drag.

        <p>Reject the drag as a result of examinig either or the available 
        <type scope="com::sun::star::datatransfer">DataFlavor</type> types.

        @throws InvalidDNDOperationException
        if the drop target is not in drag state.
    */

    void rejectDrag()
        raises (InvalidDNDOperationException);

    //-------------------------------------------------------------------------
    /** @returns the available DataFlavors of the Transferable operand of this
        operation. 

        @throws InvalidDNDOperationException
        if the drop target is not in drag state.
    */

    sequence< com::sun::star::datatransfer::DataFlavor > getCurrentDataFlavors()
        raises (InvalidDNDOperationException);

    //-------------------------------------------------------------------------
    /** @returns a boolean indicating if the given 
        <type scope="com::sun::star::datatransfer">DataFlavor</type>is supported 
        by this <type>DropTargetContext</type>. 

        @param df
        the DataFlavor

        @throws InvalidDNDOperationException
        if the drop target is not in drag state.
    */

    boolean isDataFlavorSupported( [in] com::sun::star::datatransfer::DataFlavor df )
        raises (InvalidDNDOperationException);

};

//=============================================================================

}; }; }; }; };

#endif
