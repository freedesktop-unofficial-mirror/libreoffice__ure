/*************************************************************************
 *
 *  $RCSfile: XDropTarget.idl,v $
 *
 *  $Revision: 1.1 $
 *
 *  last change: $Author: obr $ $Date: 2001-01-26 11:27:47 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_dnd_XDropTarget_idl__
#define __com_sun_star_datatransfer_dnd_XDropTarget_idl__

#ifndef __com_sun_star_datatransfer_XTransferable_idl__
#include <com/sun/star/datatransfer/XTransferable.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer { module dnd {

interface XDropTargetListener;

//=============================================================================
/** This interface is implemented by a view or window that supports drop 
    operations.

    <p>Different to Java, the association between view and interface is fixed
    and can not be changed. Otherwise the awt messaging would have to be 
    implemented for any window supporting Drag and Drop operations, what would
    be a real performance issue.</p>
*/

[ uik(E6EFFA68-B551-11d4-82C90050-04D765F1), ident("XDropTarget",  0.1) ]
interface XDropTarget: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** add a DropTargetListener.

        <p>The listener will be querried for <type>XAutoscroll</type> interface
        to see if it supports autoscrolling.</p>

        @param dtl
        the listener to add to notification list.
    */

    [oneway] void addDropTargetListener( [in] XDropTargetListener dtl );

    //-------------------------------------------------------------------------
    /** remove a DropTargetListener.

        @param dtl
        the listener to remove from notification list.
    */

    [oneway] void removeDropTargetListener( [in] XDropTargetListener dtl );
    
    //-------------------------------------------------------------------------
    /** @returns a boolean indicating whether or not this DropTarget is 
        currently active (ready to accept drops).
    */
    
    boolean isActive();

    //-------------------------------------------------------------------------
    /** sets the DropTarget active if <TRUE/>, inactive if <FALSE/>.

        @param active
        see describtion above. 
    */
    
    void setActive( [in] boolean active );

    //-------------------------------------------------------------------------
    /** @returns the current action(s) supported by this DropTarget.

        <p>By default this will include all drag and drop actions.</p>
        
        @see DNDConstants
    */
    
    byte getDefaultActions();
    
    //-------------------------------------------------------------------------
    /**	sets the default acceptable actions for this DropTarget.

        <p>This method is a way to reduce the number of drag and drop events
        by blocking events for actions not supported by this target.</p>

        <p>By default the will listener recevieve notifications for all actions.</p>
        
        @param actions
        the actions

        @see DNDConstants
    */
    void setDefaultActions( [in] byte actions );
};

//=============================================================================

}; }; }; }; };

#endif
