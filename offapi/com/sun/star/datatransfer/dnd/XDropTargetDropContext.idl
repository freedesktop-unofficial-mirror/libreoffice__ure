/*************************************************************************
 *
 *  $RCSfile: XDropTargetDropContext.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: arellano $ $Date: 2001-07-27 18:11:14 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_dnd_XDropTargetDropContext_idl__
#define __com_sun_star_datatransfer_dnd_XDropTargetDropContext_idl__

#ifndef __com_sun_star_datatransfer_dnd_InvalidDNDOperationException_idl__
#include <com/sun/star/datatransfer/dnd/InvalidDNDOperationException.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer { module dnd {

//=============================================================================
/** This interface is implemented by any DropTargetContext object.

    <p>A DropTargetContext is created whenever the logical cursor associated 
    with a Drag and Drop operation moves with the visible geometry of a 
    window associated with a DropTarget. </p>

    <!-- Editor: Should the word be "within" instead of "with"? -->
    
    <p>The DropTargetContext provides the mechanism for a potential receiver 
    of a drop operation to provide the end user with the appropriate drag 
    under feedback and to effect the subsequent data transfer, if appropriate. </p>

*/

interface XDropTargetDropContext : com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** accept the Drop. 

        <p>This method should be called from the <type>XDropTargetListener</type>s 
        <member>XDropTargetListener::drop</member> method if the implementation 
        wishes to accept the drop operation with the specified action.</p>

        @param dragOperation
        the operation accepted by the target.

        @see DNDConstants
        @see DropTargetDragEvent
    */
           
    [oneway] void acceptDrop( [in] byte dragOperation );

    //-------------------------------------------------------------------------
    /** reject the Drag.

        <p>Reject the drop as a result of examining either or the available 
        <type scope="com::sun::star::datatransfer">DataFlavor</type> types
        received in the <member>XDropTargetListener::dragEnter</member>.

    <!-- Editor: "either" and "or" should have some text between them -->
    */

    [oneway] void rejectDrop();

    //-------------------------------------------------------------------------
    /** signals that the drop is completed and if it was successful or not. 

        @param success
        <TRUE/> if drop completed successful, <FALSE/> otherwise.

    <!-- Editor: Should this be @return ? -->
    */

    [oneway] void dropComplete( [in] boolean success );
};

//=============================================================================

}; }; }; }; };

#endif
