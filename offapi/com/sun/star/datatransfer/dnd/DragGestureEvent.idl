/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: DragGestureEvent.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 22:52:06 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_dnd_DragGestureEvent_idl__
#define __com_sun_star_datatransfer_dnd_DragGestureEvent_idl__

#ifndef __com_sun_star_lang_EventObject_idl__
#include <com/sun/star/lang/EventObject.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer { module dnd {

 published interface XDragSource;

//=============================================================================
/** A DragGestureEvent is passed to the method <member>XDragGestureListener::dragGestureRecognized()</member>
     when a particular <type>XDragGestureRecognizer</type> detects that a platform 
     dependent drag initiating gesture has occurred on the component that it is
     tracking. 	
*/

published struct DragGestureEvent: com::sun::star::lang::EventObject
{
    //-------------------------------------------------------------------------
    /** The action selected by the user. 
        <p>Different constants may be combined using a logical OR.</p>
        It's further possible to combine the ACTION_DEFAULT with one of the other 
        actions defined in <type scope="com::sun::star::datatransfer::dnd">DNDConstants</type>.
        This means the user did not press any key during the Drag and Drop operation
        and the action that was combined with ACTION_DEFAULT is the system default action.</p>

        @see com::sun::star::datatransfer::dnd::DNDConstants
     */

    byte DragAction;

    //-------------------------------------------------------------------------
    /** The x coordinate where the drag originated in component coordinates.
     */

    long DragOriginX;

    //-------------------------------------------------------------------------
    /** The y coordinate where the drag originated in component coordinates.
     */

    long DragOriginY;

    //-------------------------------------------------------------------------
    /** The DragSource associated with this drag action.
     */

    XDragSource DragSource;

    //-------------------------------------------------------------------------
    /** The last event comprising the gesture.

    <p>The initial trigger event will presumably be a <type scope="com::sun::star::awt">MouseEvent</type> event.
    If it is not, the implementation should either react accordingly or
    presume that the left mouse button was clicked.	</p>
    */

    any Event;
};

//=============================================================================

}; }; }; }; };

#endif
