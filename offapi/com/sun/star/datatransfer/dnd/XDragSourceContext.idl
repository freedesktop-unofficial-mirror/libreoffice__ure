/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XDragSourceContext.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 22:56:17 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_dnd_XDragSourceContext_idl__
#define __com_sun_star_datatransfer_dnd_XDragSourceContext_idl__

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer { module dnd {

 published interface XDragSourceListener;

//=============================================================================
/** The drag source context class is responsible for managing the initiator side 
    of the Drag and Drop protocol. 

    <p>In particular, it is responsible for managing event notifications to the 
    DragSourceListener and providing the Transferable state to enable the data 
    transfer. </p>

    <p>An instance of this class is created as a result of the method <member>XDragSource::startDrag()</member>
    being successfully invoked. This instance is responsible 
    for tracking the state of the operation on behalf of the drag source and 
    dispatching state changes to the drag source listener. </p>

    @see com::sun::star::datatransfer::dnd::XDragSourceContext
    @see com::sun::star::datatransfer::dnd::XDragSourceListener
*/

published interface XDragSourceContext: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Get the identifier of the currently used cursor.

        @returns 
        The currently selected drag cursor.
    */
    
    long getCurrentCursor();

    //-------------------------------------------------------------------------
    /** This method sets the current drag cursor.

        <p>This method should only be called to set another cursor than the
        default one for drag action currently selected by the user.</p>
        <p>Invalid cursor identifiers will be ignored.</p>

        @param cursorId
        The identifier the drag source returned when registering the cursor. 
    */
    
    [oneway] void setCursor( [in] long cursorId );

    //-------------------------------------------------------------------------
    /** This method sets the current drag image. 

        @param dragImage
        The identifier the drag source returned when registering the image (0 = none).
        Invalid identifier will be ignored.
    */
    
    [oneway] void setImage( [in] long imageId );

    //-------------------------------------------------------------------------
    /** This method notifies the context that the 
        <type scope="com::sun::star::datatransfer">DataFlavor</type> types 
        of the transferable object have changed.
        
        @see com::sun::star::datatransfer::XTransferable	
    */
    
    [oneway] void transferablesFlavorsChanged();
};

//=============================================================================

}; }; }; }; };

#endif
