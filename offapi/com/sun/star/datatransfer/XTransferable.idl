/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XTransferable.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 22:47:41 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_XTransferable_idl__
#define __com_sun_star_datatransfer_XTransferable_idl__

#ifndef __com_sun_star_datatransfer_UnsupportedFlavorException_idl__
#include <com/sun/star/datatransfer/UnsupportedFlavorException.idl>
#endif

#ifndef __com_sun_star_datatransfer_DataFlavor_idl__
#include <com/sun/star/datatransfer/DataFlavor.idl>
#endif

#ifndef __com_sun_star_io_IOException_idl__
#include <com/sun/star/io/IOException.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

//=============================================================================

module com { module sun { module star { module datatransfer {

//=============================================================================
/** Interface to be implemented by objects used to provide data for a data 
    transfer operation.

    @see com::sun::star::datatransfer::DataFlavor
*/

published interface XTransferable: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Called by a data consumer to obtain data from the source in a specified 
        format.
        
        @param aFlavor
        Describes the requested data format 

        @returns
        The data in the specified <type>DataFlavor</type>.

        @throws com::sun::star::io::IOException 
        if the data is no longer available in the requested flavor.
            
        @throws com::sun::star::datatransfer::UnsupportedFlavorException
        if the requested <type>DataFlavor</type> is not supported.		
    */
    any getTransferData( [in] DataFlavor aFlavor )
        raises ( UnsupportedFlavorException, com::sun::star::io::IOException );

    //-------------------------------------------------------------------------
    /** Returns a sequence of supported <type>DataFlavor</type>.

        @returns
        The sequence of supported <type>DataFlavor</type>.

        @see com::sun::star::datatransfer::DataFlavor
    */
    sequence < DataFlavor > getTransferDataFlavors();

    //-------------------------------------------------------------------------
    /** Checks if the data object supports the specified data flavor.

        @param aFlavor 
        Describes the format that should be checked

        @returns
        A value of <TRUE/> if the <type>DataFlavor</type> is supported by the transfer source.
        <p>A value of <FALSE/> if the <type>DataFlavor</type> is unsupported by the transfer source.</p>
        
        <br/><br/><p><strong>Note: </strong>This method is only for analogy with the JAVA Clipboard interface. To
        avoid many calls, the caller should instead use 
        <member scope="com::sun::star::datatransfer">XTransferable::getTransferDataFlavors()</member>.		
    */
    boolean isDataFlavorSupported( [in] DataFlavor aFlavor );
};

//=============================================================================

}; }; }; }; 

#endif
