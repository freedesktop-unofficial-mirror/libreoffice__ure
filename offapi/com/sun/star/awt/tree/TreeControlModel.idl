/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: TreeControlModel.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: hr $ $Date: 2007-06-27 12:27:06 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_tree_TreeControlModel_idl__ 
#define __com_sun_star_awt_tree_TreeControlModel_idl__ 
 
#ifndef __com_sun_star_awt_tree_XTreeDataModel_idl__ 
#include <com/sun/star/awt/tree/XTreeDataModel.idl>
#endif

#ifndef __com_sun_star_awt_UnoControlModel_idl__ 
#include <com/sun/star/awt/UnoControlModel.idl>
#endif

#ifndef __com_sun_star_view_SelectionType_idl__ 
#include <com/sun/star/view/SelectionType.idl>
#endif

//============================================================================= 
 
module com {  module sun {  module star {  module awt { module tree {

//============================================================================= 
 
/** specifies the standard model of a <type>TreeControl</type>.
 */
service TreeControlModel
{
    /** specifies the standard model of an <type scope="com::sun::star::awt">UnoControl</type>. */
    service ::com::sun::star::awt::UnoControlModel;

    /** Specifies the selection mode that is enabled for this tree.
        <p>The default value is <member scope="com::sun::star::view">SelectionType::NONE</type></p>
    */
    [property] ::com::sun::star::view::SelectionType SelectionType;

    /**	Specifies the <type>XTreeDataModel</type> that is providing the hierarchical data.

        <p>You can implement your own instance of <type>XTreeDataModel</type> or use
        the <type>MutableTreeDataModel</type>.
    */
    [property] XTreeDataModel DataModel;

    /** Specifies if the root node of the tree is displayed.
        <p>If <var>RootDisplayed</var> is set to <FALSE/>, the root node of a model is no longer
        a valid node for the <type>XTreeControl</type> and can't be used with any method of
        <type>XTreeControl</type>.
        <p>The default value is <TRUE/></p>
    */
    [property] boolean RootDisplayed;

    /** Specifies whether the node handles should be displayed.
        <p>The handles are doted lines that visualize the tree like hirarchie<p>
        <p>The default value is <TRUE/></p>
    */
    [property] boolean ShowsHandles;

    /** Specifies whether the node handles should also be displayed at root level.
        <p>The default value is <TRUE/></p>
    */
    [property] boolean ShowsRootHandles;

    /** Specifies the height of each row, in pixels.
        <p>If the specified value is less than or equal to zero, the row height is the maximum height
        of all rows.</p>
        <p>The default value is 0</p>
    */
    [property] long RowHeight;

    /** Specifies whether the nodes of the tree are editable.
        <p>The default value is <FALSE/></p>

        @see XTreeControl::startEditingAtNode()
        @see XTreeEditListener
    */
    [property] boolean Editable;

    /**	Specifies what happens when editing is interrupted by selecting another node in the tree,
        a change in the tree's data, or by some other means.
        <p>Setting this property to <TRUE/> causes the changes to be automatically saved when editing
        is interrupted. <FALSE/> means that editing is canceled and changes are lost
        <p>The default value is <FALSE/></p>
    */
    [property] boolean InvokesStopNodeEditing;
}; 
 
//============================================================================= 
 
}; }; }; }; };
 
#endif 
