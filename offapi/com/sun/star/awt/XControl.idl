/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XControl.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 21:36:56 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_XControl_idl__ 
#define __com_sun_star_awt_XControl_idl__ 
 
#ifndef __com_sun_star_lang_XComponent_idl__ 
#include <com/sun/star/lang/XComponent.idl> 
#endif 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_awt_XToolkit_idl__ 
#include <com/sun/star/awt/XToolkit.idl> 
#endif 
 
#ifndef __com_sun_star_awt_XWindowPeer_idl__ 
#include <com/sun/star/awt/XWindowPeer.idl> 
#endif 
 
#ifndef __com_sun_star_awt_XControlModel_idl__ 
#include <com/sun/star/awt/XControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_awt_XView_idl__ 
#include <com/sun/star/awt/XView.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** identifies a control.

    <p>Implementations of this interface are abstract windows.
    The main reason to instantiate this implementation is to show the window
    on the screen. Before the window appears on the screen, the
    <member>XControl::createPeer</member> method must be called.</p>
    
    <p>If the implementation of the control does not distinguish
    between model, view and controller, it must allow to set
    a new XGraphics in the view, so that the control can be printed.</p>
 */
published interface XControl: com::sun::star::lang::XComponent
{ 
    //------------------------------------------------------------------------- 
     
    /** sets the context of the control.
     */
    [oneway] void setContext( [in] com::sun::star::uno::XInterface Context ); 
 
    //------------------------------------------------------------------------- 
     
    /** gets the context of the control.
     */
    com::sun::star::uno::XInterface getContext(); 
 
    //------------------------------------------------------------------------- 
     
    /** creates a "child" window on the screen.

        <p>If the parent is NULL, then the desktop window of the toolkit
        is the parent.</p>
     */
    [oneway] void createPeer( [in] com::sun::star::awt::XToolkit Toolkit, 
             [in] com::sun::star::awt::XWindowPeer Parent ); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the peer which was previously created or set.
     */
    com::sun::star::awt::XWindowPeer getPeer(); 
 
    //------------------------------------------------------------------------- 
     
    /** sets a model for the control.
     */
    boolean setModel( [in] com::sun::star::awt::XControlModel Model ); 

    //------------------------------------------------------------------------- 
     
    /** returns the model for this control.
     */
    com::sun::star::awt::XControlModel getModel(); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the view of this control.
     */
    com::sun::star::awt::XView getView(); 
 
    //------------------------------------------------------------------------- 
     
    /** sets the design mode for use in a design editor.
        
        <p>Normally the control will be painted directly without a peer.</p>
     */
    [oneway] void setDesignMode( [in] boolean bOn ); 
 
    //------------------------------------------------------------------------- 
     
    /** returns <true/> if the control is in design mode, <false/> otherwise.
     */
    boolean isDesignMode(); 
 
    //------------------------------------------------------------------------- 
     
    /** returns <true/> if the control is transparent, <false/> otherwise.
     */
    boolean isTransparent(); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
