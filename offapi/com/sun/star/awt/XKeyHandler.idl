/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XKeyHandler.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2008-01-30 08:09:59 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_awt_XKeyHandler_idl__ 
#define __com_sun_star_awt_XKeyHandler_idl__ 
 
#ifndef __com_sun_star_lang_XEventListener_idl__ 
#include <com/sun/star/lang/XEventListener.idl> 
#endif 
 
#ifndef __com_sun_star_awt_KeyEvent_idl__ 
#include <com/sun/star/awt/KeyEvent.idl> 
#endif 
 
 
module com {  module sun {  module star {  module awt {  

/** This key handler is similar to <type
    scope="::com::sun::star::awt">XKeyListener</type> but allows the
    consumption of key events.  If a key event is consumed by one
    handler both the following handlers, with respect to the list of key
    handlers of the broadcaster, and a following handling by the
    broadcaster will not take place.

    @since OOo 1.1.2
*/
published interface XKeyHandler : ::com::sun::star::lang::XEventListener
{
    /** This function is called by the broadcaster, an <type
        scope="::com::sun::star::awt">XExtendedToolkit</type> for
        instance, after a key has been pressed but before it is released.
        The return value decides about whether other handlers will be
        called and a handling by the broadcaster will take place.

        <p>Consume the event if the action performed by the implementation
        is mutually exclusive with the default action of the broadcaster or,
        when known, with that of other handlers.</p>

        <p>Consuming this event does not prevent the pending key-release
        event from beeing broadcasted.</p>

        @param aEvent
            The key event informs about the pressed key.
        @return
            When <FALSE/> is returned the other handlers are called and a
            following handling of the event by the broadcaster takes place.
            Otherwise, when <TRUE/> is returned, no other handler will be
            called and the broadcaster will take no further actions
            regarding the event.
    */
    boolean keyPressed ([in] com::sun::star::awt::KeyEvent aEvent);
 
    /** This function is called by the broadcaster, an <type
        scope="::com::sun::star::awt">XExtendedToolkit</type> for
        instance, after a key has been pressed and released.  The return
        value decides about whether other handlers will be called and a
        handling by the broadcaster will take place.

        <p>Consume the event if the action performed by the implementation
        is mutualy exclusive with the default action of the broadcaster or,
        when known, with that of other handlers.</p>

        @param aEvent
            The key event informs about the pressed key.
        @return
            When <FALSE/> is returned the other handlers are called and a
            following handling of the event by the broadcaster takes place.
            Otherwise, when <TRUE/> is returned, no other handler will be
            called and the broadcaster will take no further actions
            regarding the event.
    */
    boolean keyReleased ([in] com::sun::star::awt::KeyEvent aEvent); 
}; 
 
}; }; }; };
 
#endif 
