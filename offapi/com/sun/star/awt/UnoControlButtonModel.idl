/*************************************************************************
 *
 *  $RCSfile: UnoControlButtonModel.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: obo $ $Date: 2004-07-05 15:59:46 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_UnoControlButtonModel_idl__ 
#define __com_sun_star_awt_UnoControlButtonModel_idl__ 
 
#ifndef __com_sun_star_awt_UnoControlModel_idl__ 
#include <com/sun/star/awt/UnoControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_util_Color_idl__
#include <com/sun/star/util/Color.idl>
#endif

#ifndef __com_sun_star_awt_FontDescriptor_idl__ 
#include <com/sun/star/awt/FontDescriptor.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 

/** specifies the standard model of an <type>UnoControlButton</type>.
 */
published service UnoControlButtonModel
{ 
    service com::sun::star::awt::UnoControlModel;
    
    //------------------------------------------------------------------------- 
     
    /** specifies the alignment of the text in the control. 
                
        <pre>
        0: left
        1: center
        2: right
        </pre>
     */
    [optional, property] short Align; 
 
    //------------------------------------------------------------------------- 
     
    /** specifies the background color (RGB) of the control.
     */
    [property] com::sun::star::util::Color BackgroundColor; 
 
    //------------------------------------------------------------------------- 
     
    /** specifies that the button is the default button on the document.
     */
    [property] boolean DefaultButton; 

    //-------------------------------------------------------------------------
    
    /** determines whether the control is enabled or disabled.
     */
    [property] boolean Enabled;
    
    //------------------------------------------------------------------------- 

    /** specifies the font attributes of the text in the control.
     */
    [property] com::sun::star::awt::FontDescriptor FontDescriptor;
    
    //-------------------------------------------------------------------------
    
    /** specifies the <type scope="com::sun::star::text">FontEmphasis</type>
        value of the text in the control.
     */
    [property] short FontEmphasisMark;
 
    //-------------------------------------------------------------------------
    
    /** specifies the <type scope="com::sun::star::text">FontRelief</type>
        value of the text in the control.
     */
    [property] short FontRelief;
 
    //-------------------------------------------------------------------------
    
    /** specifies the help text of the control.
     */
    [property] string HelpText;
 
    //------------------------------------------------------------------------- 
     
    /** specifies the help URL of the control.
     */
    [property] string HelpURL;
 
    //------------------------------------------------------------------------- 

    /** specifies the alignment of the image inside the button as
        <type>ImageAlign</type> value.
     */
    [property] short ImageAlign;

    //-------------------------------------------------------------------------
     
    /** specifies the position of the image, if any, relative to the text, if any

        <p>Valid values of this property are specified with <type>ImagePosition</type>.</p>

        <p>If this property is present, it supersedes the <member>ImageAlign</member> property - setting
        one of both properties sets the other one to the best possible match.</p>
    */
    [optional, property] short ImagePosition;
    
    //-------------------------------------------------------------------------
     
    /** specifies an URL to an image to use for the button.
     */
    [property] string ImageURL;
 
    //-------------------------------------------------------------------------
    
    /** specifies the label of the control.
     */
    [property] string Label;
    
    //-------------------------------------------------------------------------
    
    /** specifies that the control will be printed with the document.
     */
    [property] boolean Printable;
    
    //------------------------------------------------------------------------- 
     
    /** specifies the default action of the button as <type>PushButtonType</type> value.
     */
    [property] short PushButtonType;
    
    //------------------------------------------------------------------------- 

    /** specifies the state of the control.
     */
    [property] short State;
    
    //-------------------------------------------------------------------------
    
    /** specifies that the control can be reached with the TAB key.
     */
    [property] boolean Tabstop; 

    //-------------------------------------------------------------------------
    
    /** specifies the text color (RGB) of the control.
     */
    [property] com::sun::star::util::Color TextColor;
    
    //-------------------------------------------------------------------------
    
    /** specifies the text line color (RGB) of the control.
     */
    [property] com::sun::star::util::Color TextLineColor;

    /** specifies whether the control should show repeating behaviour

        <p>Normally, when you click a button with the mouse, you need to
        release the mouse button, and press it again. With this property
        set to <TRUE/>, the button is repeatedly pressed while you hold
        down the mouse button.</p>
    */
    [optional, property] boolean Repeat;
    
    /** specifies whether the button should toggle on a single operation.

        <p>If this property is set to <TRUE/>, a single operation of the button control (pressing space
        while it is focused, or clicking onto it) toggles it between a <em>pressed</em> and a <em>not
        pressed</em> state.</p>

        <p>The default for this property is <FALSE/>, which means the button behaves like a usual
        push button.</p>

        @since #i24683#
    */
    [optional, property] boolean Toggle;

    /** specifies whether the button control should grab the focus when clicked.

        <p>If set to <TRUE/> (which is the default), the button control automatically grabs the
        focus when the user clicks onto it with the mouse.<br/>
        If set to <FALSE/>, the focus is preserved when the user operates the button control with
        the mouse.</p>

        @since #i24685#
    */
    [optional, property] boolean FocusOnClick;
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
