/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XView.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 21:59:49 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_XView_idl__ 
#define __com_sun_star_awt_XView_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_awt_XGraphics_idl__ 
#include <com/sun/star/awt/XGraphics.idl> 
#endif 
 
#ifndef __com_sun_star_awt_Size_idl__ 
#include <com/sun/star/awt/Size.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
//============================================================================= 
 
/** makes it possible to attach an oputput device to the object.
            
    <p>This kind of object is called view-object.</p>
 */
published interface XView: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** sets the output device.
     */
    boolean setGraphics( [in] com::sun::star::awt::XGraphics aDevice ); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the output device which was set using the method 
        <member>XView::setGraphics</member>.
     */
    com::sun::star::awt::XGraphics getGraphics(); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the size of the object in device units.

        <p>A device must be set before.</p>				 
     */
    com::sun::star::awt::Size getSize(); 
 
    //------------------------------------------------------------------------- 
     
    /** draws the object at the specified position.
                        
        <p>If the output should be clipped, the caller has to set the
        clipping region.</p>
     */
    [oneway] void draw( [in] long nX, 
             [in] long nY ); 
 
    //------------------------------------------------------------------------- 
     
    /** sets the zoom factor.
                        
        <p>The zoom factor only affects the content of the view, not the size.</p>
     */
    [oneway] void setZoom( [in] float fZoomX, 
             [in] float fZoomY ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
