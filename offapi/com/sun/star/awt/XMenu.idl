/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XMenu.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 21:45:53 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_XMenu_idl__ 
#define __com_sun_star_awt_XMenu_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 


//============================================================================= 
 
 module com {  module sun {  module star {  module awt {  
 
 published interface XPopupMenu; 
 published interface XMenuListener; 
 
//============================================================================= 
 
/** specifies a simple menu.
 */
published interface XMenu: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** adds the specified menu listener to receive events from this menu.
     */
    [oneway] void addMenuListener( [in] XMenuListener xListener ); 
 
    //------------------------------------------------------------------------- 
     
    /** removes the specified menu listener so that it no longer
        receives events from this menu.
     */
    [oneway] void removeMenuListener( [in] XMenuListener xListener ); 
 
    //------------------------------------------------------------------------- 
     
    /** inserts an item into the menu.
        
        <p>The item is appended if the position is greater than or equal to
        <code>getItemCount()</code> or if it is negative.</p>
     */
    [oneway] void insertItem( [in] short nItemId, 
             [in] string aText, 
             [in] short nItemStyle, 
             [in] short nPos ); 
 
    //------------------------------------------------------------------------- 
     
    /** removes one or more items from the menu.
     */
    [oneway] void removeItem( [in] short nPos, 
             [in] short nCount ); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the number of items in the menu.
     */
    short getItemCount(); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the id of the item at the specified position.
     */
    short getItemId( [in] short nPos ); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the position of the item with the specified id.
     */
    short getItemPos( [in] short nId ); 
 
    //------------------------------------------------------------------------- 
     
    /** enables or disables the menu item.
     */
    [oneway] void enableItem( [in] short nItemId, 
             [in] boolean bEnable ); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the state of the menu item.
     */
    boolean isItemEnabled( [in] short nItemId ); 
 
    //------------------------------------------------------------------------- 
     
    /** sets the text for the menu item.
     */
    [oneway] void setItemText( [in] short nItemId, 
             [in] string aText ); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the string for the given item id.
     */
    string getItemText( [in] short nItemId ); 
 
    //------------------------------------------------------------------------- 
     
    /** sets the popup menu for a specified menu item.
     */
    [oneway] void setPopupMenu( [in] short nItemId, 
             [in] XPopupMenu aPopupMenu ); 
 
    //------------------------------------------------------------------------- 
     
    /** returns the popup menu from the menu item.
     */
    XPopupMenu getPopupMenu( [in] short nItemId ); 
 
}; 
 
 
}; }; }; };  
 
#endif 
