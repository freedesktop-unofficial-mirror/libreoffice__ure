/*************************************************************************
 *
 *  $RCSfile: XColumnUpdate.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-26 13:55:06 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_XColumnUpdate_idl__ 
#define __com_sun_star_sdb_XColumnUpdate_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#include <com/sun/star/sdbc/SQLException.idl> 
#endif 
 
#ifndef __com_sun_star_util_Date_idl__ 
#include <com/sun/star/util/Date.idl> 
#endif 
 
#ifndef __com_sun_star_util_DateTime_idl__ 
#include <com/sun/star/util/DateTime.idl> 
#endif 
 
#ifndef __com_sun_star_util_Time_idl__ 
#include <com/sun/star/util/Time.idl> 
#endif 
 
 module com {  module sun {  module star {  module io { 
interface XInputStream; 
};};};}; 
 
 module com {  module sun {  module star {  module sdb { 
 
 
// DocMerge from xml: interface com::sun::star::io::com::sun::star::sdb::XColumnUpdate
/** is used to update data which is collected in a row.
 */
interface XColumnUpdate: com::sun::star::uno::XInterface
{ 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateNull
    /** gives a nullable column a null value.
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateNull() raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateBoolean
    /** updates a column with a boolean value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateBoolean([in]boolean x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateByte
    /** updates a column with a byte value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateByte([in]byte x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateShort
    /** updates a column with a short value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateShort([in]short x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateInt
    /** updates a column with a long value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateInt([in]long x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateLong
    /** updates a column with a hyper value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateLong([in]hyper x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateFloat
    /** updates a column with a float value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateFloat([in]float x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateDouble
    /** updates a column with a double value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateDouble([in]double x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateString
    /** updates a column with a string value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateString([in]string x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateBytes
    /** updates a column with a byte array value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateBytes([in]sequence<byte> x) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateDate
    /** updates a column with a Date value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateDate([in]com::sun::star::util::Date x) 
        raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateTime
    /** updates a column with a Time value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateTime([in]com::sun::star::util::Time x) 
        raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateTimestamp
    /** updates a column with a Timestamp value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateTimestamp([in]com::sun::star::util::DateTime x) 
      raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateBinaryStream
    /** updates a column with a stream value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateBinaryStream([in]com::sun::star::io::XInputStream x, 
                             [in]long length) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateCharacterStream
    /** updates a column with a stream value.
        @param x
            the new column value
        @param length
            the length of the stream	
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateCharacterStream([in]com::sun::star::io::XInputStream x, 
                                 [in]long length) raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateObject
    /** updates a column with an Object value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateObject([in]any x) 
      raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdb::XColumnUpdate::updateNumericObject
    /** updates a column with an Object value.
        @param x
            the new column value
        @param scale
            the scale
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    void updateNumericObject([in]any x, [in]long scale) 
      raises (com::sun::star::sdbc::SQLException); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
