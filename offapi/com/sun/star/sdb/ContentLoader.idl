/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: ContentLoader.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:13:49 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/


#ifndef __com_sun_star_sdb_ContentLoader_idl__ 
#define __com_sun_star_sdb_ContentLoader_idl__ 

#ifndef __com_sun_star_frame_Frame_idl__ 
#include <com/sun/star/frame/FrameLoader.idl>
#endif

module com {  module sun {  module star {  module sdb { 

//============================================================================= 
/** implements a loader for various datasource-related user interface components.

    <p>
    Usually, you don't deal with this loader directly. Instead it is registered for
    a particular URL scheme, and you use the dispatch mechanism provided by the application
    framework, dispatching URLs the loader is registered for.
    </p>

    @see com::sun::star::frame::XDispatch
    @see com::sun::star::frame::XDispatchProvider
*/
published service ContentLoader
{
    /** ensures the basic functionality.

        <p>
        Supporting this service ensures that you can plug any of the components
        the loader can create into an arbitrary frame.
        </p>

        The loader should be registered for the URL scheme 
        <b>
        .component:DB/ *
        </b>
        , the concrete URLs supported are:
        <ul>
            <li><b>.component:DB/DataSourceBrowser</b><br/>
                Using this URL creates an instance of the 
                <service scope="com::sun::star::sdb">
                    DataSourceBrowser
                </service>
                service and plugs it into the frame passed to the loader.
            </li>
            <li><b>.component:DB/FormGridView</b><br/>
                Using this URL creates an instance of the 
                <service scope="com::sun::star::sdb">ExternalSourceBrowser</service>
                service and plugs it into the frame passed to the loader.
            </li>
            <li><b>.component:DB/QueryDesign</b><br/>
                Using this URL creates an instance of the 
                <service scope="com::sun::star::sdb">QueryDesign</service>
                service and plugs it into the frame passed to the loader.
            </li>
            <li><b>.component:DB/TableDesign</b><br/>
                Using this URL creates an instance of the 
                <service scope="com::sun::star::sdb">TableDesign</service>
                service and plugs it into the frame passed to the loader.
            </li>
            <li><b>.component:DB/RelationDesign</b><br/>
                Using this URL creates an instance of the 
                <service scope="com::sun::star::sdb">RelationDesign</service>
                service and plugs it into the frame passed to the loader.
            </li>
        </ul>

        The parameters passed to the 
        <member scope="com::sun::star::frame">XFrameLoader::load()</member>
        are forwarded to the object beeing created, 
        in particular to it's 
        <type scope="com::sun::star::lang">XInitialization</type>
        interface.
    **/
    service com::sun::star::frame::FrameLoader;
};
 
//============================================================================= 
}; }; }; }; 
 
#endif 
