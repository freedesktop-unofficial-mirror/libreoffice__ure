/*************************************************************************
 *
 *  $RCSfile: XDatabaseAccessListener.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-26 13:55:07 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_XDatabaseAccessListener_idl__ 
#define __com_sun_star_sdb_XDatabaseAccessListener_idl__ 
 
#ifndef __com_sun_star_lang_XEventListener_idl__ 
#include <com/sun/star/lang/XEventListener.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdb { 
 
 
// DocMerge from xml: interface com::sun::star::sdb::XDatabaseAccessListener
/** is used for receiving "connectionChanged", "approveConnectionClose", and
    "connectionClosing" events posted by a database access bean.
    
    
    <p>
    A database access bean setting may be changed to connect to a different database.
    In that case, the connection of the bean must be closed and a new connection must
    be established. The could affect the current data processing on the bean, as it
    could be shared by a number of components. To prevent the bean from closing it's
    connection, a DatabaseAccessListener could abort the closing.
    </p>
 */
interface XDatabaseAccessListener: com::sun::star::lang::XEventListener
{ 
     
    // DocMerge from xml: method com::sun::star::sdb::XDatabaseAccessListener::connectionChanged
    /** indicates that a new connection for the bean has been established.
        @param evenet
            the event happend
     */
    [oneway] void connectionChanged([in]com::sun::star::lang::EventObject event); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdb::XDatabaseAccessListener::approveConnectionClosing
    /** indicates that the connection of the bean will be closed. If there are pending
        actions on the connection of the bean, "approveConnectionClosing" should return 
        <FALSE/>.

        @param evenet
            the event happend
        @returns
            <TRUE/> when approved, otherwise <FALSE/>
     */
    boolean approveConnectionClosing([in]com::sun::star::lang::EventObject event); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdb::XDatabaseAccessListener::connectionClosing
    /** indicates that the connection will definitely be closed.
        @param evenet
            the event happend
     */
    [oneway] void connectionClosing([in]com::sun::star::lang::EventObject event); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
