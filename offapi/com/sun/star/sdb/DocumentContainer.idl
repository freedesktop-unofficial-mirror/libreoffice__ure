/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: DocumentContainer.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:17:53 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_DocumentContainer_idl__
#define __com_sun_star_sdb_DocumentContainer_idl__

#ifndef __com_sun_star_sdb_DefinitionContainer_idl__
#include <com/sun/star/sdb/DefinitionContainer.idl>
#endif

 
 module com {  module sun {  module star {  module lang {
 published interface XMultiServiceFactory;
};};};};

 module com {  module sun {  module star {  module frame {
 published interface XComponentLoader;
};};};};

  module com {  module sun {  module star {  module container {
 published interface XHierarchicalNameContainer;
};};};};
 

 module com {  module sun {  module star {  module sdb {


/** describes a container which provides access to documents embedded into a database document,
    usually forms and reports.

    <p>The <member scope="com::sun::star::lang">XMultiServiceFactory::createInstanceWithArguments()</member>
    should be used to create sub document container or form, or report objects.</p>

    <p>The embedded documents do not support any particular database related service, instead, they're
    usual <type scope="com::sun::star::document">OfficeDocument</type>s.<br/>
    The only thing worth mentioning here is that they support the
    <type scope="com::sun::star::container">XChild</type> interface, whose
    <member scope="com::sun::star::container">XChild::getParent</member> method can be used to
    obtain the database document which the embedded document belongs to.
    </p>

    @see DocumentDefinition
    @see OfficeDatabaseDocument
 */
service DocumentContainer
{
    service DefinitionContainer;

    /** can be used to load the document inside.
        <p>
        URL: describes the name of the document definition to load,
        TargetFrameName: isn't used.
        SearchFlags: isn't used.
        Arguments: 
        <ol>
            <li>PropertyValue</li>
                Name = ActiveConnection
                Value = The connection which should be used when opening the text document.
            <li>PropertyValue</li>
                Name = OpenMode
                Value = string, "open" if the document should be opened in live mode (editing is not possible), 
                                "openDesign" if the document should be open in design mode (editing is possible)
        </ol>
        @see com::sun::star::sdbc::XConnection 
        </p>
    */
    interface com::sun::star::frame::XComponentLoader;

    /** can be used to create container elements.
        <p>
        If this interface is supported, the object created using it (e.g., the object returned by
        <method scope="com.sun.star.lang">XMultiServiceFactory::createInstanceWithArguments()</method>
        ) can be used as container elements.
        </p>
     */
    interface com::sun::star::lang::XMultiServiceFactory;

    /** can be used to create folder hierarchies and to organize forms or reports in different sub folders.
    */
    interface com::sun::star::container::XHierarchicalNameContainer;
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif
