/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: SQLFilterOperator.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:24:10 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_SQLFilterOperator_idl__ 
#define __com_sun_star_sdb_SQLFilterOperator_idl__ 

module com {  module sun {  module star {  module sdb { 


/** These constants are used to specify the filter operator 
    which should be applied when creating a filter 
    with the method <method>XSingleSelectQueryComposer::setStructuredFilter</method>.

    @see com::sun::star::sdb::SingleSelectQueryComposer
    @see com::sun::star::sdb::XSingleSelectQueryComposer
*/
constants SQLFilterOperator
{
    /// equal to
    const long EQUAL			= 1;

    /// not equal to
    const long NOT_EQUAL		= 2;

    /// less than
    const long LESS				= 3;

    /// greater than
    const long GREATER			= 4;

    /// less or eqal than
    const long LESS_EQUAL		= 5;

    /// greater or eqal than
    const long GREATER_EQUAL	= 6;

    /// like 
    const long LIKE				= 7;

    /// not like
    const long NOT_LIKE 		= 8;

    /// is null
    const long SQLNULL			= 9;

    /// is not null
    const long NOT_SQLNULL 		= 10;
};
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
