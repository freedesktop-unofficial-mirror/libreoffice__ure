/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XDatabaseAccess.idl,v $
 *
 *  $Revision: 1.12 $
 *
 *  last change: $Author: vg $ $Date: 2007-01-15 13:56:00 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_XDatabaseAccess_idl__ 
#define __com_sun_star_sdb_XDatabaseAccess_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_sdbc_XDataSource_idl__ 
#include <com/sun/star/sdbc/XDataSource.idl> 
#endif 
 
#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#include <com/sun/star/sdbc/SQLException.idl> 
#endif 
 
 module com {  module sun {  module star {  module task { 
 published interface XInteractionHandler; 
};};};}; 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module sdb { 
 
 published interface XDatabaseAccessListener; 
 
//============================================================================= 
 
/** is used to connect to a data access bean. A data access bean represents a
    database connection and provides additional information related to the connection
    such as forms, reports, or queries.
 */
published interface XDatabaseAccess: com::sun::star::sdbc::XDataSource
{ 
     
    /** indicates that connections already exist.
        @returns
            <TRUE/> if so
     */
    boolean hasConnections(); 
    //------------------------------------------------------------------------- 
      
    /** attempts to establish a database connection, that can not be shared with
        other components. This should be used for transaction processing.
        @param user
            the user name
        @param password
            the password
        @returns
            an isolated connection object
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
        @see com::sun::star::sdbc::XConnection
     */
    com::sun::star::sdbc::XConnection getIsolatedConnection([in]string user, [in]string password) 
      raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    /** closes the all connections to database. This request could be aborted by
        listeners of the component.
        @throws com::sun::star::sdbc::SQLException 
            if a database access error occurs.
     */
    boolean suspendConnections() raises (com::sun::star::sdbc::SQLException); 
    //------------------------------------------------------------------------- 
     
    /** adds the specified listener to receive the events "connectionChanged",
        "approveConnectionClose", and "connectionClosing".
        @param	listener
            the listener to append
        @see com::sun::star::sdb::XDatabaseAccessListener
     */
    [oneway] void addDatabaseAccessListener([in]XDatabaseAccessListener listener); 
    //------------------------------------------------------------------------- 
     
    /** removes the specified listener.
        @param	listener
            the listener to append
        @see com::sun::star::sdb::XDatabaseAccessListener
     */
    [oneway] void removeDatabaseAccessListener( 
            [in]XDatabaseAccessListener listener); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
