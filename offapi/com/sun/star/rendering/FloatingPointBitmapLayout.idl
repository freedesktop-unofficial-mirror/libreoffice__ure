/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: FloatingPointBitmapLayout.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 02:48:17 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_rendering_FloatingPointBitmapLayout_idl__
#define __com_sun_star_rendering_FloatingPointBitmapLayout_idl__

#ifndef __com_sun_star_rendering_Endianness_idl__
#include <com/sun/star/rendering/Endianness.idl>
#endif
#ifndef __com_sun_star_rendering_FloatingPointBitmapFormat_idl__
#include <com/sun/star/rendering/FloatingPointBitmapFormat.idl>
#endif

module com { module sun { module star { module rendering {

/** This structure describes the memory layout of a bitmap having
    floating point color channels.<p>

    This structure collects all necessary information to describe the
    memory layout of a bitmap having floating point color channels<p>

    @since OOo 2.0.0
 */
struct FloatingPointBitmapLayout
{
    /// Number of scanlines for this bitmap.
    long				ScanLines;

    /// Number of data bytes per scanline.
    long 				ScanLineBytes;

    /// Byte offset between the start of two consecutive scanlines.
    long				ScanLineStride;

    /// Byte offset between the start of two consecutive planes.
    long				PlaneStride;

    /// Number of color components per pixel.
    long			    NumComponents;

    /** Endianness of the pixel values.

        This value must be one of the <type>Endianness</type> constants
     */
    byte			    Endianness;

    /** Format type of this bitmap.<p>

        This value must be one of the
        <type>FloatingPointBitmapFormat</type> constants.<p>
    */
    byte				Format;
};

}; }; }; };

#endif
