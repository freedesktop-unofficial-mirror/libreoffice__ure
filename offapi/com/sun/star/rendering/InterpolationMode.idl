/*************************************************************************
 *
 *  $RCSfile: InterpolationMode.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: obo $ $Date: 2005-04-18 09:37:47 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_rendering_InterpolationMode_idl__
#define __com_sun_star_rendering_InterpolationMode_idl__

module com { module sun { module star { module rendering {

/** These constants specify the interpolation type for animation
    frames.<p>

    With this constants, one specifies the way of interpolation that
    takes place between two consecutive frames of a discrete animation
    sequence.

    @since OOo 2.0.0
 */
constants InterpolationMode
{
    /** Perform a nearest neighbor interpolation.<p>

        That is, when interpolating between two values v0 and v1,
        positioned at t0 and t1, take the one which has the closest t
        coordinate.<p>
     */
    const byte NEAREST_NEIGHBOR=1;

    //-------------------------------------------------------------------------

    /** Perform a linear interpolation.<p>

        That is, when interpolating at position t between two values
        v0 and v1, positioned at t0 and t1, take the sum of v0
        weighted with (t-t0) and v1 weighted with (t1-t).<p>
     */
    const byte LINEAR=2;

    //-------------------------------------------------------------------------

    /** Perform a cubic interpolation.<p>

        That is, when interpolating at position t, take the four
        closest data points v0, v1, v2, and v3, fit a cubic curve
        through them, and take the interpolated value from this cubic
        curve.<p>
     */
    const byte CUBIC=3;

    //-------------------------------------------------------------------------

    /** Perform a cubic bezier spline interpolation.<p>

        That is, when interpolating at position t, take the three
        closest data points v0, v1, and v2, fit a cubic bezier spline
        through them, and take the interpolated value from this cubic
        curve.<p>
     */
    const byte BEZIERSPLINE3=4;

    //-------------------------------------------------------------------------

    /** Perform a quadric bezier spline interpolation.<p>

        That is, when interpolating at position t, take the four
        closest data points v0, v1, v2, and v3, fit a quadric bezier
        spline through them, and take the interpolated value from this
        quadric curve.<p>
     */
    const byte BEZIERSPLINE4=5;
}; 

}; }; }; };

#endif
