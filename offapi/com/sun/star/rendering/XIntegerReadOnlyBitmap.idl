/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XIntegerReadOnlyBitmap.idl,v $
 *
 *  $Revision: 1.1 $
 *
 *  last change: $Author: thb $ $Date: 2007-06-26 11:36:55 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_rendering_XIntegerReadOnlyBitmap_idl__
#define __com_sun_star_rendering_XIntegerReadOnlyBitmap_idl__

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif 
#ifndef __com_sun_star_lang_IndexOutOfBoundsException_idl__
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>
#endif 
#ifndef __com_sun_star_geometry_IntegerPoint2D_idl__
#include <com/sun/star/geometry/IntegerPoint2D.idl>
#endif
#ifndef __com_sun_star_geometry_IntegerRectangle2D_idl__
#include <com/sun/star/geometry/IntegerRectangle2D.idl>
#endif
#ifndef __com_sun_star_rendering_IntegerBitmapLayout_idl__
#include <com/sun/star/rendering/IntegerBitmapLayout.idl>
#endif
#ifndef __com_sun_star_rendering_XBitmap_idl__
#include <com/sun/star/rendering/XBitmap.idl>
#endif
#ifndef __com_sun_star_rendering_VolatileContentDestroyedException_idl__
#include <com/sun/star/rendering/VolatileContentDestroyedException.idl>
#endif


module com { module sun { module star { module rendering {

interface XBitmapPalette;

/** This is a specialized interface for bitmaps having integer color
    channels. In contrast to <type>XIntegerBitmap</type>, this
    interface only permits read-only access.<p>

    Use this interface for e.g. bitmaps that are calculated
    on-the-fly, or that are pure functional.
 */
interface XIntegerReadOnlyBitmap : XBitmap
{		  
    /** Query the raw data of this bitmap.<p>

        Query the raw data of this bitmap, in the format as defined by
        getMemoryLayout(). With the given rectangle, a subset of the
        whole bitmap can be queried. If the internal data format's
        pixel are not integer multiples of bytes (i.e. if one pixel
        occupies less than a byte), the leftover content of the bytes
        at the right of each scanline is filled with zeros. When
        querying subsets of the bitmap, the same scanline padding
        takes place as when the whole bitmap is requested.<p>

        Note that the bitmap memory layout might change for volatile
        bitmaps.<p>

        @param bitmapLayout
        The memory layout the returned data is in.

        @param rect
        A rectangle, within the bounds of the bitmap, to retrieve the
        contens from.

        @throws VolatileContentDestroyedException
        if the bitmap is volatile, and the content has been destroyed by the system.

        @throws com::sun::star::lang::IndexOutOfBoundsException
        if parts of the given rectangle are outside the permissible
        bitmap area.
     */
    sequence<byte> 		getData( [out] IntegerBitmapLayout bitmapLayout, [in] ::com::sun::star::geometry::IntegerRectangle2D rect )
        raises (com::sun::star::lang::IndexOutOfBoundsException,
                VolatileContentDestroyedException); 

    //-------------------------------------------------------------------------

    /** Get a single pixel of the bitmap, returning its color
        value. 

        If the internal data format's pixel are not integer multiples
        of bytes (i.e. if one pixel occupies less than a byte), the
        color value is returned in the least significant bits of the
        single byte returned as the color.

        Note that the bitmap memory layout might change for volatile
        bitmaps.<p>

        @param bitmapLayout
        The memory layout the returned data is in.

        @param pos
        A position, within the bounds of the bitmap, to retrieve the
        color from.

        @throws VolatileContentDestroyedException
        if the bitmap is volatile, and the content has been destroyed by the system.

        @throws com::sun::star::lang::IndexOutOfBoundsException
        if the given position is outside the permissible bitmap area.
     */
    sequence<byte>		getPixel( [out] IntegerBitmapLayout bitmapLayout, [in] ::com::sun::star::geometry::IntegerPoint2D pos )
        raises (com::sun::star::lang::IndexOutOfBoundsException,
                VolatileContentDestroyedException); 

    //-------------------------------------------------------------------------

    /** Query the associated palette for this bitmap. 

        Returns empty interface or interface with empty palette for
        non-paletted bitmaps.
     */
    XBitmapPalette		getPalette();

    //-------------------------------------------------------------------------

    /** Query the memory layout for this bitmap.<p>

        Please note that for volatile bitmaps, the memory layout might
        change between subsequent calls.
     */
    IntegerBitmapLayout	getMemoryLayout();
};

}; }; }; };

#endif
