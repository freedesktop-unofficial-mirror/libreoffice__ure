/*************************************************************************
 *
 *  $RCSfile: IntegerBitmapLayout.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: obo $ $Date: 2005-04-18 09:37:34 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_rendering_IntegerBitmapLayout_idl__
#define __com_sun_star_rendering_IntegerBitmapLayout_idl__

#ifndef __com_sun_star_rendering_Endianness_idl__
#include <com/sun/star/rendering/Endianness.idl>
#endif
#ifndef __com_sun_star_rendering_IntegerBitmapFormat_idl__
#include <com/sun/star/rendering/IntegerBitmapFormat.idl>
#endif

module com { module sun { module star { module rendering {

/** This structure describes the memory layout of a bitmap having
    integer color channels.<p>

    This structure collects all necessary information to describe the
    memory layout of a bitmap having integer color channels<p>

    @since OOo 2.0.0
 */
struct IntegerBitmapLayout
{
    /// Number of scanlines for this bitmap.
    long				ScanLines;

    /// Number of data bytes per scanline.
    long 				ScanLineBytes;

    /// Byte offset between the start of two consecutive scanlines.
    long				ScanLineStride;

    /// Byte offset between the start of two consecutive planes.
    long				PlaneStride;

    /// Number of color components per pixel.
    long			    NumComponents;

    /** Mask values for packed bitmaps

        This member contains NumComponents 64 bit masks, which can be
        used to mask out the corresponding color component from the
        bitmap data. For the typical 32 bit RGBA color data, the four
        mask values would look like 0xFF000000, 0x00FF0000,
        0x0000FF00, and 0x000000FF.
     */
    sequence<hyper>	    ComponentMasks;

    /** Endianness of the pixel values.

        This value must be one of the <type>Endianness</type> constants
     */
    byte			    Endianness;

    /** Format type of this bitmap.<p>

        This value must be one of the <type>IntegerBitmapFormat</type>
        constants. The precise layout of the color channels within a
        bitmap pixel is further specified via the ComponentMasks member.<p>
    */
    byte				Format;

    /** This member determines whether the bitmap data are actually
        indices into a color map.<p>

        The member must not be true for bitmap formats of more than
        eight bits per pixel.<p>
     */
    boolean				IsPseudoColor;
};

}; }; }; };

#endif
