/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: ViewState.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: kz $ $Date: 2005-11-02 13:22:38 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_rendering_ViewState_idl__
#define __com_sun_star_rendering_ViewState_idl__

#ifndef __com_sun_star_geometry_AffineMatrix2D_idl__
#include <com/sun/star/geometry/AffineMatrix2D.idl>
#endif

module com { module sun { module star { module rendering {

interface XPolyPolygon2D;

/** This structure contains information considered the view state.<p>

    This structure contains information considered the view state,
    i.e. the invariant setup used when painting a whole view of
    something.<p>

    @since OOo 2.0.0
 */
struct ViewState
{
    /** The affine transform associated with the view.<p>

        This member is used to transform coordinates of draw
        operations from user space to screen space.<p>
     */	
    ::com::sun::star::geometry::AffineMatrix2D	AffineTransform;

    //-------------------------------------------------------------------------

    /** The clipping area associated with the view.<p>

        This clipping is interpreted in the view coordinate systems,
        i.e. subject to the view transform before mapping to the
        device coordinate space.<p>

        Specifying an empty interface denotes no clipping,
        i.e. everything rendered to the canvas will be visible
        (subject to device-dependent constraints, of
        course). Specifying an empty XPolyPolygon2D, i.e. a
        poly-polygon containing zero polygons, or an XPolyPolygon2D
        with any number of empty sub-polygons, denotes the NULL
        clip. That means, nothing rendered to the canvas will be
        visible.<p>
     */
    XPolyPolygon2D										Clip;
};

}; }; }; };

#endif
