/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XBezierPolyPolygon2D.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 02:56:37 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_rendering_XBezierPolyPolygon2D_idl__
#define __com_sun_star_rendering_XBezierPolyPolygon2D_idl__

#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
#ifndef __com_sun_star_lang_IndexOutOfBoundsException_idl__
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>
#endif 
#ifndef __com_sun_star_rendering_XPolyPolygon2D_idl__
#include <com/sun/star/rendering/XPolyPolygon2D.idl>
#endif
#ifndef __com_sun_star_geometry_RealBezierSegment2D_idl__
#include <com/sun/star/geometry/RealBezierSegment2D.idl>
#endif

module com { module sun { module star { module rendering {

/** This is a specialized interface for a 2D poly-polygon containing
     straight line and bezier segments.<p>

    This poly-polygon can contain polygons consisting of a mixture of
    cubic bezier curves and straight lines. As the straight line is a
    special case of a cubic bezier curve (control points collinear
    with the line through start and end point), this can be expressed
    uniformly with a sequence of <type>RealBezierSegment2D</type>s.<p>

    By convention, a <type>RealBezierSegment2D</type> is a straight
    line segment, if all three contained points are strictly equal.<p>

    @since OOo 2.0.0
 */
interface XBezierPolyPolygon2D : XPolyPolygon2D
{
    /** Query subset of this poly-polygon.<p>

        Query subset of this poly-polygon, starting at the given
        polygon and the given point within that polygon, and
        containing the specified number of polygons and points in the
        last polygon.<p>

        @param nPolygonIndex
        The index of the polygon to start point retrieval with. This
        index must be in the range [0,numPolygons-1].

        @param nNumberOfPolygons
        The number of polygons to extract. This value must not exceed
        numPolygons-nPolygonIndex.

        @param nPointIndex
        The index of the first point in the first polygon to
        extract. This value must not exceed the number of points in
        this polygon minus one.

        @param nNumberOfPoints
        The number of points to extract from the last polygon. This
        value must not exceed the number of points in this last
        polygon minus one.

        @returns the sequence of extracted points.

        @throws com::sun::star::lang::IndexOutOfBoundsException
        if one of the given values exceed the permissible range.
     */
    sequence< sequence < ::com::sun::star::geometry::RealBezierSegment2D > > getBezierSegments( [in] long nPolygonIndex, [in] long nNumberOfPolygons, [in] long nPointIndex, [in] long nNumberOfPoints )
        raises (com::sun::star::lang::IndexOutOfBoundsException); 

    //-------------------------------------------------------------------------

    /** Set the specified sequence of bezier segments to the poly-polygon.

        This method can either set the whole poly-polygon to the new
        data, or insert the segments at the given index

        @param nPolygonIndex
        The index of the polygon to start segment insertion with. This
        index must be in the range [0,numPolygons], and the insertion
        will take place <em>before</em> this position (i.e. when
        specifying 0 here, the given bezier sequence will precede all
        existing polygons already within the poly-polygon). To append
        to a poly-polygon, call setPoints() with
        <member>XBezierPolyPolygon2D::getNumberOfPolygons()</member>
        as the polygon index. If nPolygonIndex is -1, the given
        bezier sequence <em>replaces</em> the poly-polygon content,
        such that after this method completes, it contains exactly the
        specified bezier segment data.

        @throws com::sun::star::lang::IndexOutOfBoundsException
        if one of the given values exceed the permissible range.        
     */
    void setBezierSegments( [in] sequence< sequence< ::com::sun::star::geometry::RealBezierSegment2D > > points, [in] long nPolygonIndex )
        raises (com::sun::star::lang::IndexOutOfBoundsException); 

    //-------------------------------------------------------------------------

    /** Get a single point from the poly-polygon.

        @param nPolygonIndex
        The index of the polygon where the point to be extract is
        contained within. This index must be in the range
        [0,numPolygons-1].

        @param nPointIndex
        The index of the point in the polygon specified by
        nPolygonIndex, which is to be retrieved.  This value must not
        exceed the number of points in this polygon minus one.

        @returns the requested point.
        
        @throws com::sun::star::lang::IndexOutOfBoundsException
        if one of the given values exceed the permissible range.
        
     */
    ::com::sun::star::geometry::RealBezierSegment2D	getBezierSegment( [in] long nPolygonIndex, [in] long nPointIndex )
        raises (com::sun::star::lang::IndexOutOfBoundsException); 

    //-------------------------------------------------------------------------

    /** Set a single point on the poly-polygon.<p>

        The remaining points of the poly-polygon will not be changed by
        this method. Use
        <member>XBezierPolyPolygon2D::getNumberOfPolygons()</member>
        or
        <member>XBezierPolyPolygon2D::getNumberOfPolygonPoints()</member>
        to append points or polygons, respectively.<p>

        @param point
        The point to be set at the poly-polygon.

        @param nPolygonIndex
        The index of the polygon to insert the point in. This index
        must be in the range [0,numPolygons].

        @param nPointIndex
        The index of the point in the polygon specified by
        nPolygonIndex, which is to be set.  This value must not
        exceed the number of points in this polygon.
        
        @throws com::sun::star::lang::IndexOutOfBoundsException
        if one of the given values exceed the permissible range.
     */
    void setBezierSegment( [in] ::com::sun::star::geometry::RealBezierSegment2D point, [in] long nPolygonIndex, [in] long nPointIndex )
        raises (com::sun::star::lang::IndexOutOfBoundsException); 
};

}; }; }; };

#endif
