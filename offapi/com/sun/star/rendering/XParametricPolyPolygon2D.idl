/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XParametricPolyPolygon2D.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:00:36 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_rendering_XParametricPolyPolygon2D_idl__
#define __com_sun_star_rendering_XParametricPolyPolygon2D_idl__

#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif 
#ifndef __com_sun_star_geometry_RealPoint2D_idl__
#include <com/sun/star/geometry/RealPoint2D.idl>
#endif
#ifndef __com_sun_star_rendering_XPolyPolygon2D_idl__
#include <com/sun/star/rendering/XPolyPolygon2D.idl>
#endif
#ifndef __com_sun_star_rendering_XColorSpace_idl__
#include <com/sun/star/rendering/XColorSpace.idl>
#endif

module com { module sun { module star { module rendering {

/** Interface to a dynamic poly-polygon generator, that generates
    poly-polygons depending on a given parameter value.<p>

    The returned poly-polygon should normally be contained in the
    [0,1]x[0,1] rectangle. At least that is the dimension expected at
    other places. e.g. <type>Texture</type>.
 */
interface XParametricPolyPolygon2D : ::com::sun::star::uno::XInterface
{
    /** Query the polygonal outline at the specified value. 

        The returned outline should be clipped to the [0,1]x[0,1]
        rectangle.
    
        @param t
        Parameter value in the range [0,1]. During painting, this
        range is sweeped through starting from 0. When using such a
        parametric polypolygon for gradients, the area covered by the
        returned XPolyPolygon2D should be monotonically decreasing
        with t (unless singularities in e.g. the resulting gradient
        are desired).
     */
    XPolyPolygon2D 				getOutline( [in] double t )
        raises (com::sun::star::lang::IllegalArgumentException); 

    //-------------------------------------------------------------------------

    /** Query the color value for the polygonal area at the specified
        parameter value.

        @param t
        Parameter value in the range [0,1]. During painting, this
        range is swept through starting from 0.
     */
    sequence<ColorComponent> 	getColor( [in] double t )
        raises (com::sun::star::lang::IllegalArgumentException); 

    //-------------------------------------------------------------------------

    /** Query the color for a dedicated point in the plane. 
    
        @param point
        The permissible parameter range for point is [0,1]x[0,1]
     */
    sequence<ColorComponent>	getPointColor( [in] ::com::sun::star::geometry::RealPoint2D point )
        raises (com::sun::star::lang::IllegalArgumentException); 

};

}; }; }; };

#endif
