/*************************************************************************
 *
 *  $RCSfile: XAccessibleKeyBinding.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: vg $ $Date: 2003-06-10 10:58:12 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_accessibility_XAccessibleKeyBinding_idl__
#define __com_sun_star_accessibility_XAccessibleKeyBinding_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_awt_KeyStroke_idl__
#include <com/sun/star/awt/KeyStroke.idl>
#endif
#ifndef __com_sun_star_lang_IndexOutOfBoundsException_idl__
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>
#endif

module com { module sun { module star { module accessibility {

/** This interface can be used to represent any number of key bindings which
    then can be associated to a certain action.

    <p>There can be zero, one, or more key bindings.  Each key binding consists
    of a sequence of <type scope="::com::sun::star::awt">KeyStroke</type>
    objects.  The association of an action with a key binding is established
    by the <type>XAccessibleAction</type> interface returning an
    <type>XAccessibleKeyBinding</type> object.</p>

    <p>A key binding describes alternative ways how to invoke an action with
    pressing one or more keys after each other.  Each individual sequence of
    key strokes </p>

    @since #107627#
*/
interface XAccessibleKeyBinding : ::com::sun::star::uno::XInterface
{
    /** Return the number of available key bindings.
        @return
            The returned value may be 0 to indicate that there are no key
            bindings or the positive number of the available key bindings.
    */
    long getAccessibleKeyBindingCount ();

    /** The returned sequence of key strokes describes one method to invoke
        the associated action (the one from which you obtained the object at
        which you called this method) by pressing keys.  The keys specified
        by each of the returned key strokes have to be pressed at the same
        time (the Control-key and the A-key for example).  The keys of
        one key stroke have to be released before pressing those of the
        next.  The order of the key strokes in the sequence define the order
        in which to press them.
        @param nIndex
            The index selects one of alternative key bindings.  It has to
            non-negative and smaller then the number of key bindings as
            returned by the <member>geetAccessibleKeyBindingCount()</member>
            method.
        @return
           The returned sequence of key strokes specifies one way to invoke
           the associated action.  The sequence may be empty (but should
           not be; better not to return such a key binding at all).
        @throws ::com::sun::star::lang::IndexOutOfBoundsException
            if the index is not valid.
    */
    sequence<::com::sun::star::awt::KeyStroke> getAccessibleKeyBinding ([in] long nIndex)
        raises (::com::sun::star::lang::IndexOutOfBoundsException);
};
          
}; }; }; };

#endif
