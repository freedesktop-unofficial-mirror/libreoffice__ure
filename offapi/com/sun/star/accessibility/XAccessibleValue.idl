/*************************************************************************
 *
 *  $RCSfile: XAccessibleValue.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: obo $ $Date: 2004-06-03 16:50:50 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_accessibility_XAccessibleValue_idl__
#define __com_sun_star_accessibility_XAccessibleValue_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

module com { module sun { module star { module accessibility {

/** Implement this interface to give access to a single numerical value.

    <p>The <type>XAccessibleValue</type> interface represents a single
    numerical value and should be implemented by any class that supports
    numerical value like scroll bars and spin boxes.  This interface lets
    you access the value and its upper and lower bounds.</p>

    @since #107627#
*/
published interface XAccessibleValue : ::com::sun::star::uno::XInterface
{
    /** Returns the value of this object as a number.
        
        <p>The exact return type is implementation dependent.  Typical types
        are long and double.</p>
        
        @return
            Returns the current value represented by this object.
    */
    any getCurrentValue ();

    /** Sets the value of this object to the given number.
        
        <p>The argument is clipped to the valid interval whose upper and
        lower bounds are returned by the methods
        <member>getMaximumAccessibleValue</member> and
        <member>getMinimumAccessibleValue</member>, i.e. if it is lower than
        the minimum value the new value will be the minimum and if it is
        greater than the maximum then the new value will be the maximum.</p>
        
        @param aNumber
            The new value represented by this object.  The set of admissible
            types for this argument is implementation dependent.
            
        @return
            Returns <TRUE/> if the new value could successfully be set and
            <FALSE/> otherwise.
    */
    boolean setCurrentValue ([in] any aNumber);
    
    /** Returns the maximal value that can be represented by this object.
        
        <p>The type of the returned value is implementation dependent.  It
        does not have to be the same type as that returned by
        <member>getCurrentAccessibleValue</member>.</p>
        
        @return
            Returns the maximal value in an implementation dependent type.
            If this object has no upper bound then an empty object is
            returned.
    */
    any getMaximumValue ();

    /** Returns the minimal value that can be represented by this object.
        
        <p>The type of the returned value is implementation dependent.  It
        does not have to be the same type as that returned by
        <member>getCurrentAccessibleValue</member>.</p>
        
        @return
            Returns the minimal value in an implementation dependent type.
            If this object has no upper bound then an empty object is
            returned.
    */
    any getMinimumValue ();
};
          
}; }; }; };

#endif
