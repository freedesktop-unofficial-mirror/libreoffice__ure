/*************************************************************************
 *
 *  $RCSfile: Shape.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-26 13:54:50 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_presentation_Shape_idl__ 
#define __com_sun_star_presentation_Shape_idl__ 
 
#ifndef __com_sun_star_presentation_AnimationEffect_idl__ 
#include <com/sun/star/presentation/AnimationEffect.idl> 
#endif 
 
#ifndef __com_sun_star_presentation_ClickAction_idl__ 
#include <com/sun/star/presentation/ClickAction.idl> 
#endif 
 
#ifndef __com_sun_star_presentation_AnimationSpeed_idl__ 
#include <com/sun/star/presentation/AnimationSpeed.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module presentation {  
 
//============================================================================= 
 
/** this service is supported from all shapes inside a <type>PresentationDocument</type>.

    
    This usually enahnces objects of type <type scope="com::sun::star::drawing">Shape</type> with
    presentation properties.
*/
service Shape
{ 
    //------------------------------------------------------------------------- 
     
    /** is a generic URL for the property OnClick.
     */
    [property] string Bookmark; 
 
    //------------------------------------------------------------------------- 
     
    /** This is the color for dimming this shape. 
        
        <p>This color is used if the property <member scope="com::sun::star::drawing">Shape::DimPrev</member> 
        is <TRUE/> and <member scope="com::sun::star::drawing">Shape::DimHide</member> is <FALSE/>.</p>
     */
    [property] long DimColor; 
 
    //------------------------------------------------------------------------- 
     
    /** If this property and the property <member scope="com::sun::star::drawing">Shape::DimPrev</member> 
        are both <TRUE/>, the shape is hidden instead of dimmed to a color.
     */
    [property] boolean DimHide; 
 
    //------------------------------------------------------------------------- 
     
    /** If this property is <TRUE/>, this shape is dimmed to the color of 
        property <member scope="com::sun::star::drawing">Shape::DimColor</member> after executing its 
        animation effect.
     */
    [property] boolean DimPrevious; 
 
    //------------------------------------------------------------------------- 
     
    /** selects the animation effect of this shape.
     */
    [property] com::sun::star::presentation::AnimationEffect Effect; 
 
    //------------------------------------------------------------------------- 

    /** If this is a default presentation object and if it is empty, 
        this property is <TRUE/>.
     */
    [property] boolean IsEmptyPresentationObject; 
 
    //------------------------------------------------------------------------- 
     
    /** If this is a presentation object, this property is <TRUE/>.
        <p>Presentation objects are objects like TitleTextShape and 
        OutlinerShape.</p>
     */
    [readonly, property] boolean IsPresentationObject; 
 
    //------------------------------------------------------------------------- 
     
    /** selects an action performed after the user clicks 
        on this shape.
     */
    [property] com::sun::star::presentation::ClickAction OnClick; 
 
    //------------------------------------------------------------------------- 
     
    /** If this property is <TRUE/>, the sound of this shape is played in
        full.
        
        <p>The default behavior is to stop the sound after completing the
        animation effect.</p>
     */
    [property] boolean PlayFull; 
 
    //------------------------------------------------------------------------- 
     
    /** This is the position of this shape in the order of the shapes which
        can be animated on its page.
        
        <p>The animations are executed in this order, starting at the shape 
        with the PresentationOrder "one."  You can change the order by
        changing this number. Setting it to "one" makes this shape the 
        first shape in the execution order for the animation effects.</p>
     */
    [property] long PresentationOrder; 
 
    //------------------------------------------------------------------------- 
     
    /** This is the URL to a soundfile that is played while the animation 
        effect of this shape is running.
     */
    [property] string Sound; 
 
    //------------------------------------------------------------------------- 
     
    /** If this property is set to <TRUE/>, a sound is played while the
        animation effect is executed.
     */
    [property] boolean SoundOn; 
 
    //------------------------------------------------------------------------- 
     
    /** This is the speed of the animation effect.
     */
    [property] com::sun::star::presentation::AnimationSpeed Speed; 
 
    //------------------------------------------------------------------------- 
     
    /** This is the animation effect for the text inside this shape.
     */
    [property] com::sun::star::presentation::AnimationEffect TextEffect; 
 
    //------------------------------------------------------------------------- 
     
    /** specifies an "ole2" verb for the ClickAction VERB in
        the property <member scope="com::sun::star::drawing">Shape::OnClick</member>.
     */
    [property] long Verb; 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
#endif 
