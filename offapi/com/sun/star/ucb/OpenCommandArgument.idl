/*************************************************************************
 *
 *  $RCSfile: OpenCommandArgument.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: obo $ $Date: 2004-06-04 01:19:10 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_OpenCommandArgument_idl__
#define __com_sun_star_ucb_OpenCommandArgument_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_Property_idl__
#include <com/sun/star/beans/Property.idl>
#endif

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** The argument for commands like "open", "update", and "synchronize".

    @see XCommandProcessor
*/
published struct OpenCommandArgument
{
    //-------------------------------------------------------------------------
    /** A mode.

        <p>The value can be one of the <type>OpenMode</type> constants.
    */
    long Mode;

    //-------------------------------------------------------------------------
    /** The command's priority, in the range <code>0</code> (highest) to
        <code>65535</code> (lowest).
    */
    long Priority;

    //-------------------------------------------------------------------------
    /** The data sink to write the contents into (supporting either
        <type scope="com::sun::star::io">XActiveDataSink</type>,
        <type scope="com::sun::star::io">XOutputStream</type> or
        <type scope="com::sun::star::io">XActiveDataStreamer</type>).

        <p>XActiveDataSink and XOutputStream give the caller read-only
        access to the contents.	XActiveDataStreamer offers both read and
        write access to the contents.

        <p>If an XActiveDataSink is supplied, the implementation of the command
        needs to provide an implementation of an object implementing the
        interface <type scope="com::sun::star::io">XInputStream</type>. It is
        highly recommended that this object also implements the interface
        <type scope="com::sun::star::io">XSeekable</type>, if this can be done
        without wasting resources (i.e. allocating huge memory buffers).
        The	implementation object has to be supplied to the data sink.
    */
    com::sun::star::uno::XInterface Sink;

    //-------------------------------------------------------------------------
    /** The properties, for that the values shall be provided by the
        <type>DynamicResultSet</type> returned by the command).
    */
    sequence< com::sun::star::beans::Property > Properties;
};

//=============================================================================

}; }; }; };

#endif
