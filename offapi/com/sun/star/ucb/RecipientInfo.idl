/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: RecipientInfo.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 07:45:44 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_RecipientInfo_idl__
#define __com_sun_star_ucb_RecipientInfo_idl__

#ifndef __com_sun_star_ucb_OutgoingMessageState_idl__
#include <com/sun/star/ucb/OutgoingMessageState.idl>
#endif


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** contains all information needed to send a message using one	send protocol.

    <p>To send one message via two different protocols, two RecipientInfos
    are needed - to send one message to different users with one protocol,
    one RecipientInfo can be used.
*/
published struct RecipientInfo
{
    //-------------------------------------------------------------------------
    /** the protocol to use for sending (i.e. "NNTP", "SMTP", "VIM").
    */
    string ProtocolType;

    //-------------------------------------------------------------------------
    /** the current state of the message.
    */
    com::sun::star::ucb::OutgoingMessageState State;

    //-------------------------------------------------------------------------
    /** the recipient(s) (e.g. e-mail address/es).

        <p>Multiple addresses are separated by commas.
    */
    string To;

    //-------------------------------------------------------------------------
    /** the recipient(s) of a "carbon copy" (e.g. e-mail address/es).

        <p>Multiple addresses are separated by commas.
    */
    string CC;

    //-------------------------------------------------------------------------
    /** the recipient(s) of "blind carbon copy" (e.g. e-mail address/es).

        <p>Multiple addresses are separated by commas.
    */
    string BCC;

    //-------------------------------------------------------------------------
    /** the newsgroup(s) to which an article is be posted.

        <p>Multiple addresses are separated by commas.
    */
    string Newsgroups;

    //-------------------------------------------------------------------------
    /** the name of the server to be used for sending the message.
    */
    string Server;

    //-------------------------------------------------------------------------
    /** the user name to be used for authorizing on the send server.
    */
    string Username;

    //-------------------------------------------------------------------------
    /** the password to be used for authorizing on the send server.
    */
    string Password;

    //-------------------------------------------------------------------------
    /** the Post Office Path (VIM only).
    */
    string VIMPostOfficePath;

    //-------------------------------------------------------------------------
    /** string representing the last error (generated by send server).
    */
    string ProtocolErrorString;

    //-------------------------------------------------------------------------
    /** the number representing the last error (generated by send server).
    */
    long ProtocolErrorNumber;

    //-------------------------------------------------------------------------
    /** the count of tries to send a message. This count is <code>1</code>
        if the message was sent with the first try and increases with every
        unsuccessful retry.
    */
    long SendTries;

};

//=============================================================================

}; }; }; };

#endif
