/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XRemoteContentProviderAcceptor.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 08:12:37 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_XRemoteContentProviderAcceptor_idl__
#define __com_sun_star_ucb_XRemoteContentProviderAcceptor_idl__

#ifndef __com_sun_star_lang_XMultiServiceFactory_idl__
#include <com/sun/star/lang/XMultiServiceFactory.idl>
#endif

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif


//=============================================================================

module com { module sun { module star { module ucb {

 published interface XRemoteContentProviderDoneListener;

//=============================================================================
/** Accept remote content providers that want to make themselves known to the
    local process.

    @version 1.0
    @author Stephan Bergmann
*/
published interface XRemoteContentProviderAcceptor: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Add a remote content provider.

        @param Identifier  An arbitrary identifier uniquely identifying the
        remote content provider.

        @param Factory  A factory through which the remote content provider's
        <type>UniversalContentBroker</type> service can be instantiated.

        @param Templates  A sequence of URL templates the remote content
        provider is willing to handle.

        @param DoneListener  If not null, the implementation of this interface
        can---through this callback---tell the calling side that the
        implementation no longer needs the remote content provider.  (And the
        calling side should call 
        <member>XRemoteContentProviderAcceptor::removeRemoteContentProvider</member>
        then.)

        To enable connection control, it is recommended that this argument
        also implements the interface
        <type>XRemoteContentProviderConnectionControl</type>.

        @return  true if the remote content provider has successfully been
        added.
    */
    boolean
    addRemoteContentProvider([in] string Identifier,
                             [in] com::sun::star::lang::XMultiServiceFactory
                                     Factory,
                             [in] sequence< string > Templates,
                             [in] XRemoteContentProviderDoneListener
                                      DoneListener);

    //-------------------------------------------------------------------------
    /** Remove a remote content provider.

        @param Identifier  An arbitrary identifier uniquely identifying the
        remote content provider.

        @return  true if the remote content provider has successfully been
        removed.
    */
    boolean
    removeRemoteContentProvider([in] string Identifier);
};

//=============================================================================

}; }; }; };

#endif
