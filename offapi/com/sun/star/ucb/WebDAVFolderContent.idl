/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: WebDAVFolderContent.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 07:57:35 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_WebDAVFolderContent_idl__
#define __com_sun_star_ucb_WebDAVFolderContent_idl__

#ifndef __com_sun_star_lang_XComponent_idl__
#include <com/sun/star/lang/XComponent.idl>
#endif

#ifndef __com_sun_star_ucb_XContent_idl__
#include <com/sun/star/ucb/XContent.idl>
#endif

#ifndef __com_sun_star_ucb_XCommandProcessor_idl__
#include <com/sun/star/ucb/XCommandProcessor.idl>
#endif

#ifndef __com_sun_star_ucb_XCommandProcessor2_idl__
#include <com/sun/star/ucb/XCommandProcessor2.idl>
#endif

#ifndef __com_sun_star_beans_XPropertiesChangeNotifier_idl__
#include <com/sun/star/beans/XPropertiesChangeNotifier.idl>
#endif

#ifndef __com_sun_star_beans_XPropertyContainer_idl__
#include <com/sun/star/beans/XPropertyContainer.idl>
#endif

#ifndef __com_sun_star_beans_XPropertySetInfoChangeNotifier_idl__
#include <com/sun/star/beans/XPropertySetInfoChangeNotifier.idl>
#endif

#ifndef __com_sun_star_ucb_XCommandInfoChangeNotifier_idl__
#include <com/sun/star/ucb/XCommandInfoChangeNotifier.idl>
#endif

#ifndef __com_sun_star_container_XChild_idl__
#include <com/sun/star/container/XChild.idl>
#endif

#ifndef __com_sun_star_ucb_XContentCreator_idl__
#include <com/sun/star/ucb/XContentCreator.idl>
#endif

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** A DCP Folder is a container for other DCP Folders or Documents.

    @see com::sun::star::ucb::WebDAVContentProvider
    @see com::sun::star::ucb::WebDAVDocumentContent
*/
published service WebDAVFolderContent
{
    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.
     */
    interface com::sun::star::lang::XComponent;

    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.
     */
    interface com::sun::star::ucb::XContent;

    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.

        <p>

        <b>Supported Commands</b>
        <ul>
        <li>
        getCommandInfo
        </li>
        <li>
        getPropertySetInfo
        </li>
        <li>
        getPropertyValues
        </li>
        <li>
        setPropertyValues
        </li>
        <li>
        insert ( makes a newly created folder persistent )
        </li>
        <li>
        delete
        </li>
        <li>
        open
        </li>
        <li>
        transfer ( only transfers from DCP Folders/DCP Documents to other
        DCP folders. Source and target must recide on the same server. )
        </li>
        </ul>

        <b>Supported Properties</b>
        <ul>
        <li>
        string ContentType ( read-only, always "application/vnd.sun.star.webdav-collection" )
        </li>
        <li>
        boolean IsDocument ( read-only, always false )
        </li>
        <li>
        boolean IsFolder ( read-only, always true )
        </li>
        <li>
        <type scope="com::sun::star::util">DateTime</type> DateCreated ( read-only )
        </li>
        <li>
        <type scope="com::sun::star::util">DateTime</type> DateModified ( read-only )
        </li>
        <li>
        string MediaType
        </li>
        <li>
        string Size ( read-only, always zero )
        </li>
        <li>
        string Title
        </li>
        </ul>

        </p>
     */
    interface com::sun::star::ucb::XCommandProcessor;

    //-------------------------------------------------------------------------
    /** is an enhanced version of <type>XCommandProcessor</type> that has an
        additional method for releasing command identifiers obtained via
        <member>XCommandProcessor::createCommandIdentifier</member> to avoid
        resource leaks. For a detailed description of the problem refer to
        <member>XCommandProcessor2::releaseCommandIdentifier</member>.

        <p>Where many existing <type>Content</type> implementations do not
        (yet), every new implementation should support this interface.
     */
    [optional] interface com::sun::star::ucb::XCommandProcessor2;

    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.
     */
    interface com::sun::star::beans::XPropertiesChangeNotifier;

    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.
     */
    interface com::sun::star::beans::XPropertyContainer;

    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.
     */
    interface com::sun::star::beans::XPropertySetInfoChangeNotifier;

    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.
     */
    interface com::sun::star::ucb::XCommandInfoChangeNotifier;

    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.
     */
    interface com::sun::star::container::XChild;

    //-------------------------------------------------------------------------
    /** This interface is implemented according to the specification of
        service <type>Content</type>.

        <p>

        A DCP Folder can create other DCP Folders and DCP Documents. To create
        a new child of a PCP Folder:

        <ol>
        <li>
        Let the parent folder create a new content by calling
        <member>XContentCreator::createNewContent</member> on it. The content
        type to use for new folders is
        "application/vnd.sun.star.webdav-collection". To create a new DCP
        Document, use the type "application/http-content".
        </li>
        <li>
        Set a title at the new folder / document. ( Let the new child execute
        the command "setPropertyValues", which sets at least the property
        "Title" to a non-empty value ).
        </li>
        <li>
        Let the new child ( not the parent! ) execute the command "insert".
        This will commit the creation process and persist the newly created
        content on the server. For documents, you need to supply the
        implementation of an <type scope="com::sun::star::io">XInputStream</type>
        with the command's parameters, that provides access to the stream data.
        </li>
        </ol>

        </p>
     */
    interface com::sun::star::ucb::XContentCreator;
};

//=============================================================================

}; }; }; };

#endif
