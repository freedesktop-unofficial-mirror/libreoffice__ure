/*************************************************************************
 *
 *  $RCSfile: ContentProviderProxy.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: obo $ $Date: 2004-06-04 01:02:29 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_ContentProviderProxy_idl__
#define __com_sun_star_ucb_ContentProviderProxy_idl__

#ifndef __com_sun_star_ucb_XContentProviderSupplier_idl__
#include <com/sun/star/ucb/XContentProviderSupplier.idl>
#endif

#ifndef __com_sun_star_ucb_XContentProvider_idl__
#include <com/sun/star/ucb/XContentProvider.idl>
#endif

#ifndef __com_sun_star_ucb_XParameterizedContentProvider_idl__
#include <com/sun/star/ucb/XParameterizedContentProvider.idl>
#endif

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** is a proxy for a content provider.

    <p>Implementing a content provider proxy can be useful if the creation of
    the real content provider object shall be deferred for some reason
    (i.e. performance) until the first method gets called on it. Instaead of
    instanciating and registering the real provider at the UCB, a proxy for
    the	real provider can be created and registered at the UCB.

    @see XContentProviderProxyFactory
*/
published service ContentProviderProxy
{
    //-------------------------------------------------------------------------
    /** The implementation of
        <member scope="com::sun::star::uno">XInterface::queryInterface</member>
        must instanciate the real provider and return the return value
        of a queryInterface call at the real provider, except for queries
        for the interfaces implemented by the proxy itself. So the caller of
        the queryInterface method at the proxy will get access to the real
        provider in a completely transparent way.
     */
    interface com::sun::star::uno::XInterface;

    //-------------------------------------------------------------------------
    /** gives access to the original content provider behind the proxy.

        <p>The implementation will instantiate the real content provider only
        on demand using its UNO service name. This will load the content
        providers implementation code (dynamic library), if not already done.
     */
    interface com::sun::star::ucb::XContentProviderSupplier;

    //-------------------------------------------------------------------------
    /** a content provider implementation that wrappes the original provider.
     */
    interface com::sun::star::ucb::XContentProvider;

    //-------------------------------------------------------------------------
    /** a parameterized content provider implementation that wrappes the
        original provider.
     */
    interface com::sun::star::ucb::XParameterizedContentProvider;
};

//=============================================================================

}; }; }; };

#endif
