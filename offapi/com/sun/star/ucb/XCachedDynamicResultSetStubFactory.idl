/*************************************************************************
 *
 *  $RCSfile: XCachedDynamicResultSetStubFactory.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: kso $ $Date: 2001-02-08 14:05:20 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_XCachedDynamicResultSetStubFactory_idl__
#define __com_sun_star_ucb_XCachedDynamicResultSetStubFactory_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_ucb_XDynamicResultSet_idl__
#include <com/sun/star/ucb/XDynamicResultSet.idl>
#endif

#ifndef __com_sun_star_ucb_NumberedSortingInfo_idl__
#include <com/sun/star/ucb/NumberedSortingInfo.idl>
#endif

#ifndef __com_sun_star_ucb_XAnyCompareFactory_idl__
#include <com/sun/star/ucb/XAnyCompareFactory.idl>
#endif

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** creates a <type>CachedDynamicResultSetStub</type> and connects a non-remote
    optimized <type>DynamicResultSet</type> to a remote optimized
    <type>CachedDynamicResultSet</type>.

    <p>Pay attention to instanciate this helper on serverside where your source
    <type>DynamicResultSet</type> was instanciated.

    <p>Method <method>createCachedDynamicResultSetStub</method> can be used to
    create a stub on serverside.

    <p>If you have instanciated a <type>CachedDynamicResultSet</type> on client
    side already, use method <member>connectToCache</member> to connect your
    given DynamicResultSet with this Cache.

    <p>The needed cache on server side you can create using
    <type>XCachedDynamicResultSetFactory</type>.
*/

[ uik(D5F56013-5298-11d4-8B1B0010-4BCAF449), ident( "XCachedDynamicResultSetStubFactory", 1.0 ) ]
interface XCachedDynamicResultSetStubFactory: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /**	creates a remote optimizes <type>XDynamicResultSet</type>.

        @param Source
        must be an instance of service <type>DynamicResultSet</type>.

        @returns
        an instance of service <type>CachedDynamicResultSetStub</type>.
    */

    com::sun::star::ucb::XDynamicResultSet	createCachedDynamicResultSetStub(
                [in] com::sun::star::ucb::XDynamicResultSet Source );

    //-------------------------------------------------------------------------
    /** If you have instanciated a <type>CachedDynamicResultSet</type> on
        client side already, use this to connect your given Source on server
        side to the TargetCache.

        @param Source
        is an instance of service <type>DynamicResultSet</type>.

        @param TargetCache
        is an instance of service <type>CachedDynamicResultSet</type>.

        @param SortingInfo
        can be an empty sequence. Otherwise, Source will be sorted according
        to the given sorting data.

        @param CompareFactory
        will be ignored unless SortingInfo is not empty. Then the supplied
        factory will be used to instanciate objects used to compare the
        properties that are involved in sorting.

        @throws ListenerAlreadySetException
        if <member>Source</member> is already in use.

        @throws AlreadyInitializedException
        if <member>TargetCache</member> already has been initialized.
    */
    void connectToCache(
                  [in] com::sun::star::ucb::XDynamicResultSet Source
                , [in] com::sun::star::ucb::XDynamicResultSet TargetCache
                , [in] sequence< com::sun::star::ucb::NumberedSortingInfo > SortingInfo
                , [in] com::sun::star::ucb::XAnyCompareFactory CompareFactory
                )
                raises(
                  com::sun::star::ucb::ListenerAlreadySetException
                , com::sun::star::ucb::AlreadyInitializedException
                 );
};

//=============================================================================

}; }; }; };

#endif
