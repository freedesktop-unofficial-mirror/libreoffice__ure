/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XDynamicResultSetListener.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 08:06:45 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_XDynamicResultSetListener_idl__
#define __com_sun_star_ucb_XDynamicResultSetListener_idl__

#ifndef __com_sun_star_lang_XEventListener_idl__
#include <com/sun/star/lang/XEventListener.idl>
#endif

#ifndef __com_sun_star_ucb_ListEvent_idl__
#include <com/sun/star/ucb/ListEvent.idl>
#endif

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/**	used to receive notifications from an <type>XDynamicResultSet</type>.
*/

published interface XDynamicResultSetListener: com::sun::star::lang::XEventListener
{
    //-------------------------------------------------------------------------
    /** A method used to propagate changes of a resultset.

        <p>In the first notify-call the listener gets two(!)
        <type scope="com::sun::star::sdbc">XResultSet</type>s and has to hold
        them. The <type scope="com::sun::star::sdbc">XResultSet</type>s are
        implementations of the service <type>ContentResultSet</type>.

        <p>The notified new 
        <type scope="com::sun::star::sdbc">XResultSet</type> will stay valid
        after returning from this method. The old one will become invalid after
        returning.

        <p>While in notify-call the listener is allowed to read from old and
        new	resultset, except in the first call, where only the new resultset
        is valid.

        <p>The Listener is allowed to stay (block) this call, until he really
        wants to use the new resultset. The only situation, where the listener
        has to return immediately is while he disposes his broadcaster or while
        he is removing himself as listener (otherwise you deadlock)!!!

        @param  Changes
        the changes to notify.
    */
    void notify( [in] ListEvent Changes );
};

//=============================================================================

}; }; }; };

#endif
