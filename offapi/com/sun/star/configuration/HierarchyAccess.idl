/*************************************************************************
 *
 *  $RCSfile: HierarchyAccess.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: jb $ $Date: 2001-04-06 16:24:30 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_configuration_HierarchyAccess_idl__
#define __com_sun_star_configuration_HierarchyAccess_idl__

#ifndef __com_sun_star_container_XNameAccess_idl__
#include <com/sun/star/container/XNameAccess.idl>
#endif

#ifndef __com_sun_star_container_XHierarchicalNameAccess_idl__
#include <com/sun/star/container/XHierarchicalNameAccess.idl>
#endif

#ifndef __com_sun_star_container_XContainer_idl__
#include <com/sun/star/container/XContainer.idl>
#endif

#ifndef __com_sun_star_beans_XExactName_idl__
#include <com/sun/star/beans/XExactName.idl>
#endif

//=============================================================================

module com { module sun { module star { module configuration { 

//=============================================================================
/** provides access to a (by name) hierarchy of descendant elements.

 <!-- Dennis: alphabetical? -->
 <!-- Developer: No. See the description in GroupAccess,GroupElement. -->

 <p>Values that are direct or indirect descendants of this tree node can be
 retrieved. Non-value subnodes can be navigated using container interfaces.
 Other interfaces provide access to information about this node.
 Changes to values in the subtree can be monitored by event listeners.
 </p>

 <p>Elements of this (by name) container that are not simple values
 are similar containers themselves, thus (recursively) forming a
 hierarchical tree.
 </p>

 <!-- Dennis: "(by name)" ?? -->
 <!-- Developer: Rather than by index, by language or by phase of the moon.
      As in XNameAccess vs. XIndexAccess vs  XWhateverAccess (container interfaces)
      having methods getByName(), getByIndex(), getByWhatever() -->
    
 <p>Implementations of this service usually also implement
 service <type>HierarchyElement</type>, which concerns the complementary role
 of being accessible as an element of the hierarchy.
 </p>

*/
service HierarchyAccess
{
/** allows access to immediate children of this node.

 <p><member scope="com::sun::star::container">XNameAccess::getByName</member>
 returns an <atom>any</atom> holding either a simple value or an interface
 on another HierarchyAccess if the child is not a simple value.
 </p>

 <!-- Dennis: I don't understand the phrase "returns an Any holding" -->
 <!-- Developer: Added missing <atom>. 'any' is a builtin variant type, 
  which can contain ('hold') values of any other type 
  (e.g a ('simple') integer or interface -->*/
    interface com::sun::star::container::XNameAccess;

/** allows access to all descendants of this node 

 <p><member scope="com::sun::star::container">XHierarchicalNameAccess::getByHierarchicalName</member>
 returns an <atom>any</atom> holding either a simple value or an interface
 on another HierarchyAccess if the descendant is not a simple value.
 </p>

 <!-- Dennis: I don't understand the phrase "returns an Any holding" -->
 <!-- Developer: Same as above. -->
*/
    interface com::sun::star::container::XHierarchicalNameAccess;

/** allows attaching listeners to this node to monitor changes to immediate child nodes.
*/
    interface com::sun::star::container::XContainer;

/** provides support for inexact names.
 <p>Exact names can be obtained for simple or hierarchical names for use in
 <type scope="com::sun::star::container">XNameAccess</type>,
 <type scope="com::sun::star::container">XHierarchicalNameAccess</type>,
 <type scope="com::sun::star::beans">XPropertySet</type>, etc. 
 </p>

 <!-- Dennis: What constitutes "etc"? -->
 <!-- Developer: Any other interfaces from any other services this object implements,
  where there are methods that take a string parameter that is a child or descendant name.
  Examples include (but are not necessarily limited to):
      com::sun::star::beans::XMultiPropertySet
      com::sun::star::beans::XHierarchicalPropertySet
      com::sun::star::beans::XMultiHierarchicalPropertySet
      com::sun::star::beans::XPropertySetInfo
      com::sun::star::beans::XHierarchicalPropertySetInfo
      com::sun::star::container::XNameReplace
      com::sun::star::container::XNameContainer
      com::sun::star::container::XHierarchicalName
 -->
*/
    interface com::sun::star::beans::XExactName;
};

//=============================================================================

}; }; }; }; 

#endif
