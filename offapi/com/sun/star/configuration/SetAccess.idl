/*************************************************************************
 *
 *  $RCSfile: SetAccess.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: mi $ $Date: 2001-10-26 09:09:33 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_configuration_SetAccess_idl__
#define __com_sun_star_configuration_SetAccess_idl__

#ifndef __com_sun_star_configuration_HierarchyAccess_idl__
#include <com/sun/star/configuration/HierarchyAccess.idl>
#endif

#ifndef __com_sun_star_configuration_SimpleSetAccess_idl__
#include <com/sun/star/configuration/SimpleSetAccess.idl>
#endif

#ifndef __com_sun_star_container_XContainer_idl__
#include <com/sun/star/container/XContainer.idl>
#endif

//=============================================================================

module com { module sun { module star { module configuration { 

//=============================================================================
/** provides access to a dynamic, homogeneous set of values or nested
 trees within a (by name) hierarchy.

 <!-- Dennis: (by name) ??? -->
 <!-- Developer: See the description in GroupAccess,GroupElement, HierarchyAccess. -->

 <p>Also provides information about the template for elements.
 Allows normalizing externally generated names.
 </p>
 
 <p><em>Sets</em> here are dynamic containers within the hierarchy.</p>

 <!-- Dennis: is the word "here" necessary because "Sets" elsewhere are not dynamic containers -->
 <!-- Developer: sets are always containers, probably dynamic ones. They are not necessarily
      parts of a hierarchy. In the configuration package 'set' has a very specific somewhat
      peculiar meaning. The 'here' is supposed to emphasize that there is such a special meaning.  -->

 <p>The number and names of contained elements are not fixed in advance,
 but all elements have to be of one predetermined type.
 </p>

 @see com::sun::star::configuration::SetElement
    Child objects of this service generally implement <type>SetElement</type>.
    The template name returned by the child from
    <member>XTemplateInstance::getTemplateName</member>
    corresponds to the name returned by the set from
    <member>XTemplateContainer::getElementTemplateName</member>.

 @see com::sun::star::configuration::GroupAccess
    A complementary service that provides for static heterogeneous groups of
    elements within the hierarchy.

*/
service SetAccess
{
/** is the basic service for accessing child and descendent nodes in a hierarchy.

 <p>External names (from foreign namespaces) should be normalized using
 <member scope="com::sun::star::util">XStringEscape::escapeString</member>
 (if available) before using them as element names.
 </p>
*/
    service HierarchyAccess;

/** is the basic service providing information about and access to elements
 of a not necessarily hierarchical <em>set</em>.

 <p>Interface <type scope="com::sun::star::configuration">XTemplateContainer</type>,
 which is optional in <type>SimpleSetAccess</type> must always be implemented
 in this service, if the elements are of object type.  </p>

 <p> If an implementation handles naming restrictions transparently, it must
 also handle the case of element names embedded in hierarchical names - passed
 to any object in the hierarchy. Otherwise, the implementation should implement
 <type scope="com::sun::star::util">XStringEscape</type>, in which case, 
 the client is responsible for constructing correct hierarchical names.  </p>
*/
    service SimpleSetAccess;

/** allows attaching listeners to this node to monitor changes to the set.

 <p>In this service, support for notifications is mandatory.
 </p>
*/
    interface com::sun::star::container::XContainer;

};

//=============================================================================

}; }; }; }; 

#endif
