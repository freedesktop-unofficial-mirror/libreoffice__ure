/*************************************************************************
 *
 *  $RCSfile: ConfigurationRegistry.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: mi $ $Date: 2002-10-03 13:02:39 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_configuration_ConfigurationRegistry_idl__
#define __com_sun_star_configuration_ConfigurationRegistry_idl__

//=============================================================================

#ifndef __com_sun_star_registry_XSimpleRegistry_idl__
#include <com/sun/star/registry/XSimpleRegistry.idl>
#endif
#ifndef __com_sun_star_util_XFlushable_idl__
#include <com/sun/star/util/XFlushable.idl>
#endif

module com { module sun { module star { module configuration { 

//=============================================================================


/*	provides access to a configuration tree as a registry. 

    <p> Using the <type scope="com::sun::star::registry">XSimpleRegistry</type> 
    interface, the service can be bound to a subtree within the 
    configuration tree, as provided by an 
    <type scope="com.sun.star.configuration">ConfigurationProvider</type>
    service, which must be accessible from the service factory you use for the
    creation of this service.
    </p>
    <p>	There are some restrictions when accessing a configuration tree using a registry.
    Most of them are implications of the fact that a configuration tree is very static in
    it's structure. Removal and addition of sub nodes is allowed only for special
    nodes, and even then the new elements have to comply to a given scheme (which is some
    kind of attribute of the container node). So for instance the
    <member scope="com.sun.star.registry">XRegistryKey::createKey()</member> method is not allowed
    for some nodes.
    </p><p>
    Thus anybody using this service is strongly advised to read and understand the specification
    of an configuration provider (<type scope="com.sun.star.configuration">ConfigurationProvider</type>)
    and all of it's aspects.
    </p>

    @author	Frank Schoenheit
    @version 1.0 2000/07/06
*/

service ConfigurationRegistry
{
    /** controls the binding of the object to a configuration sub tree.
        <p><member scope="com::sun::star::registry">XSimpleRegistry::open()</member> 
        is used to open a special subtree within the configuration tree.
        </p>
        <p>The parameters of this method control the location of the root of the to-be-opened
        configuration node and the access mode (read only or updatable).
        </p>
    */
    interface com::sun::star::registry::XSimpleRegistry;

    /** is used to commit changes to the configuration.
        <p>As specified for the 
        <type scope="com.sun.star.configuration">ConfigurationUpdateAccess</type>
        service, all changes made to an configuration subtree have to be commited 
        before they become persistent. 
        To do this for a configuration accessed as a registry, call
        <member scope="com.sun.star.util">XFlushable::flush()</member>.
        </p>
        <p><strong>Warning:</strong><em>Changes that are not flushed will be 
        lost.</em>
        </p>
    */
    interface com::sun::star::util::XFlushable;
};


//=============================================================================

}; }; }; }; 


#endif

