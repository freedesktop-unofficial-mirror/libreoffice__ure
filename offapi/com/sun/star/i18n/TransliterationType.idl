/*************************************************************************
 *
 *  $RCSfile: TransliterationType.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: mi $ $Date: 2002-10-03 13:05:48 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_i18n_TransliterationType_idl__
#define __com_sun_star_i18n_TransliterationType_idl__

//=============================================================================

module com {  module sun {  module star {  module i18n {

//=============================================================================

/**
    Bitmask transliteration types used with
    <member>XTransliteration::getType()</member> and
    <member>XTransliteration::getAvailableModules()</member> methods.

    <p> Non-IGNORE type modules provide
    <member>XTransliteration::transliterate()</member>. <br/>
    IGNORE type modules provide
    <member>XTransliteration::equals()</member> and
    <member>XTransliteration::transliterateRange()</member>. </p>
 */

constants TransliterationType
{
    const short NONE               = 0;

    /** A transliteration module is ONE_TO_ONE if and only if it's
        mapping between characters is one to one like a-z to A-Z.
        Transliteration modules of this type can be used as choice in
        regular expressions based search/replace. */
    const short ONE_TO_ONE         = 1;

    /** A transliteration module can have attribute NUMERIC if it
        tranliterates numbers in different languages like chinese
        numbers to arabic numbers and vice versa. This mapping need not
        be one to one, it should be primarily used by number formatting
        and parsing methods. */
    const short NUMERIC            = 2;

    /** A transliteration module is ONE_TO_ONE_NUMERIC if it offers
        both one to one mapping and handles number also. */
    const short ONE_TO_ONE_NUMERIC = 3;

    /** With a transliterator IGNORE case, the regular
        expression A-Z can be transformed to a-z, for example. */
    const short IGNORE             = 4;

    /** If the transliteration is cascaded (uses more than one
        algorithm). */
    const short CASCADE            = 8;
};

//=============================================================================
}; }; }; };
//=============================================================================
#endif
