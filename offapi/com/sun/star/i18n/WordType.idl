/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: WordType.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 01:54:35 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_i18n_WordType_idl__
#define __com_sun_star_i18n_WordType_idl__

//=============================================================================

module com {  module sun {  module star {  module i18n {

//=============================================================================

/** Constants to specify the type of words.

    <p> Used with <member>XBreakIterator::nextWord()</member>,
    <member>XBreakIterator::previousWord()</member>,
    <member>XBreakIterator::getWordBoundary()</member>,
    <member>XBreakIterator::getWordType()</member>,
    <member>XBreakIterator::isBeginWord()</member>,
    <member>XBreakIterator::isEndWord()</member> </p>
*/
published constants WordType
{
    /** Any "words" - words in the meaning of same character types,
        collection of alphanumeric characters, or collection of
        non-alphanumeric characters.
    */
    const short ANY_WORD                 = 0;

    /** Any "words" - words in the meaning of same character types,
        collection of alphanumeric characters, or collection of
        non-alphanumeric characters except blanks.
    */
    const short ANYWORD_IGNOREWHITESPACES= 1;

    /** "words" - in the meaning of a collection of alphanumeric
        characters and some punctuations, like dot for abbreviation.
    */
    const short DICTIONARY_WORD          = 2;

    /** The mode for counting words, it will combine punctuations and
        spaces as word trail.
     */
    const short WORD_COUNT               = 3;
};

//=============================================================================
}; }; }; };
//=============================================================================
#endif
