/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: KCharacterType.idl,v $
 *
 *  $Revision: 1.4 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 01:45:53 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_i18n_KCharacterType_idl__
#define __com_sun_star_i18n_KCharacterType_idl__

//============================================================================

module com {  module sun {  module star {  module i18n {

//============================================================================

/**
    Constants to identify the character type.
    
    <p> Returned by
    <member>XCharacterClassification::getCharacterType()</member> and
    <member>XCharacterClassification::getStringType()</member> </p>
 */

published constants KCharacterType
{
    /// digit
    const long DIGIT      = 0x00000001;
    
    /// upper case alpha letter
    const long UPPER      = 0x00000002;
    
    /// lower case alpha letter
    const long LOWER      = 0x00000004;
    
    /// title case alpha letter
    const long TITLE_CASE = 0x00000008;
    
    /// any alpha, ALPHA = UPPER | LOWER | TITLE_CASE
    const long ALPHA      = 0x0000000E;
    
    /// control character
    const long CONTROL    = 0x00000010;
    
    /// printable character
    const long PRINTABLE  = 0x00000020;
    
    /// base form
    const long BASE_FORM  = 0x00000040;
    
    /** any <type>UnicodeType</type>::..._LETTER.
        Note that a LETTER must not necessarily be ALPHA */
    const long LETTER     = 0x00000080;
};

//============================================================================
}; }; }; };
//============================================================================
#endif
