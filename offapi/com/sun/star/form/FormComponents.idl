/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: FormComponents.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:19:24 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_form_FormComponents_idl__ 
#define __com_sun_star_form_FormComponents_idl__ 
 
#ifndef __com_sun_star_container_XNameContainer_idl__ 
#include <com/sun/star/container/XNameContainer.idl> 
#endif 
 
#ifndef __com_sun_star_container_XIndexContainer_idl__ 
#include <com/sun/star/container/XIndexContainer.idl> 
#endif 
 
#ifndef __com_sun_star_container_XEnumerationAccess_idl__ 
#include <com/sun/star/container/XEnumerationAccess.idl> 
#endif 
 
#ifndef __com_sun_star_container_XContainer_idl__ 
#include <com/sun/star/container/XContainer.idl> 
#endif 

#include <com/sun/star/script/XEventAttacherManager.idl> 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  
 
//============================================================================= 
 
/** specifies the capabilities of a collection of <type>FormComponent</type>s.
    
    <p>The collection must provide the possibility of adding and removing
    components by name and by index. The name of a component is not
    necessarily unique, so the collection must be able to handle duplicate
    entry names.</p>

    @see FormComponent
 */
published service FormComponents
{ 
    /** allows to register listeners to be notified of changes in the container.
    */
    interface com::sun::star::container::XContainer; 
    
    /** allows to add/remove elements by name.
    */
    interface com::sun::star::container::XNameContainer; 
    
    /** gives access to the elements by index.
    */
    interface com::sun::star::container::XIndexContainer; 
    
    /** creates an enumeration of the elements.
    */
    interface com::sun::star::container::XEnumerationAccess; 

    /** This interface has to be implemented to supply the scripting environment
        for the contained components.

        <p>The interface allows managing of scripts associated with dependent components, accessed by index.
        However, as a client of the <type>FormComponents</type> service, there's no need to bother with
        the container aspect of the <type scope="com::sun::star::script">XEventAttacherManager</type>
        directly. A <type>FormComponents</type> container will automatically synchronize the elements
        you put into it with the scripting information obtained at the
        <type scope="com::sun::star::script">XEventAttacherManager</type> interface.</p>

        <p>For instance, at any time you can obtain the events associated with the <code>n</code><super>th</super>
        element in the form components by calling
        <member scope="com::sun::star::script">XEventAttacherManager::getScriptEvents</member>
        with paramter <code>n</code>. In particular, this invariant is always met, even after you
        inserted/removed elements into/from the container.</p>
     */
    interface com::sun::star::script::XEventAttacherManager;
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
