/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XDatabaseParameterBroadcaster.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:24:05 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_form_XDatabaseParameterBroadcaster_idl__ 
#define __com_sun_star_form_XDatabaseParameterBroadcaster_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_form_XDatabaseParameterListener_idl__ 
#include <com/sun/star/form/XDatabaseParameterListener.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  
 
//============================================================================= 
 
/** provides the possibility of receiving an event for configuration of parameters.
    <p>This interface is usually implemented by components which are to execute a statement,
    and may need parameter information. For example, the 
    <type scope="com::sun::star::form::component">DataForm</type> is such a component. When it is
    bound to a statement which contains parameters, or to a query which is based upon a parametrized
    statement, it needs values to fill in the parameters with actual values when it is being loaded.
    One method to gather these values is calling the <type>XDatabaseParameterListener</type> listeners, which
    can fill them in.</p>
 */
published interface XDatabaseParameterBroadcaster: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    /** adds the specified listener, to allow it to fill in necessary parameter values.
        @param aListener
            the listener to add.
        @see com::sun::star::form::XDatabaseParameterListener
     */
    [oneway] void addParameterListener( [in] com::sun::star::form::XDatabaseParameterListener aListener ); 
 
    //------------------------------------------------------------------------- 
     
    /** removes the specified listener.
        @param aListener
            the listener to remove.
        @see com::sun::star::form::XDatabaseParameterListener
     */
    [oneway] void removeParameterListener( [in] com::sun::star::form::XDatabaseParameterListener aListener ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
