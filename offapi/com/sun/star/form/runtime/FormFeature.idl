/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: FormFeature.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2007-07-24 11:57:54 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_form_runtime_FormFeature_idl__
#define __com_sun_star_form_runtime_FormFeature_idl__

//=============================================================================

module com { module sun { module star { module form { module runtime { 

//=============================================================================

/** specifies the operations on a user interface form, as supported by the
    <type>XFormOperations</type> interface.
 
    @since OpenOffice.org 2.2.0
*/
constants FormFeature
{
    /** moves the form to a record given by absolute position.

        <p>This operation cannot be executed without arguments. When executing it (i.e.
        when calling <member scope="com::sun::star::form::runtime">XFormOperations::executeWithArguments</member>),
        you need to specify a parameter named <em>Position</em> of type <code>long</code>, which
        denotes the position to move the form to.</p>
    */
    const short MoveAbsolute        = 1;

    /** determines the number of total records in the form,
        including the potentially active insertion row.

        <p>This is not strictly an operation you can do on a form, but rather a
        state you can retrieve (and display to the user) using the <type>XFormOperations</type>'
        respective methods.</p>

        <p>The state obtained here is a string, not a number. This is because in an UI
        form, the fact that the current record count is not yet known (since not all
        records have been visited, yet) is indicated by an asterik (<code>*</code>) besides
        the record count.</p>
    */
    const short TotalRecords        = 2;

    /// moves the form to the first record
    const short MoveToFirst         = 3;

    /// moves the form to the record before the current record, if there is any
    const short MoveToPrevious      = 4;

    /// moves the form to the record after the current record, if there is any
    const short MoveToNext          = 5;

    /// moves the form to the last record
    const short MoveToLast          = 6;

    /// moves the form to the insertion row, if privileges allow
    const short MoveToInsertRow     = 7;

    /** saves all changes in the form's current record, including changes in the current
        control which had not yet been committed to the form
    */
    const short SaveRecordChanges   = 8;

    /** revertsall changes in the form's current record, including changes in the current
        control which had not yet been committed to the form
    */
    const short UndoRecordChanges   = 9;

    /** deletes the current record, while honoring any registered
        <type scope="com::sun::star::form">XConfirmDeleteListener</type>s
    */
    const short DeleteRecord        = 10;

    /// reloads the form content
    const short ReloadForm          = 11;

    /// sorts the form ascending by the field which the active form control is bound to.
    const short SortAscending       = 12;

    /// sorts the form descending by the field which the active form control is bound to.
    const short SortDescending      = 13;

    /// opens a dialog which allows the user to interactively specify a form sorting order
    const short InteractiveSort     = 14;

    /** adds a filter to the form, which is defined by the active form control and its
        current value

        <p>For instance, if the currently active form control is bound to a table field
        named <code>Price</code>, and currently has a value of <code>100</code>, then invoking
        the <code>AutoFilter</code> operation will put an additional filter <code>Price = 100</code>
        on the form.</p>
    */
    const short AutoFilter          = 15;

    /// opens a dialog which allows the user to interactively specify a form filter
    const short InteractiveFilter   = 16;

    /** toggles the <member scope="com::sun::star::sdb">RowSet::ApplyFilter</member> property
        of a the form.
    */
    const short ToggleApplyFilter   = 17;

    /** removes all filter and sort criterions put on the form.

        <p>Note that this does not apply to criterios which are part of the form's
        data source. That is, if you bind the form to the SQL command <code>SELECT * FROM
        Articles WHERE Price &gt; 100</code>, then the <code>Price &gt; 100</code> filter
        will not be removed.</p>

        <p>Effectively, this operation resets the <member scope="com::sun::star::sdb">RowSet::Filter</member>
        and <member scope="com::sun::star::sdb">RowSet::Order</member> properties of the form.</p>
    */
    const short RemoveFilterAndSort = 18;
};

//=============================================================================

}; }; }; }; }; 

//=============================================================================

#endif
