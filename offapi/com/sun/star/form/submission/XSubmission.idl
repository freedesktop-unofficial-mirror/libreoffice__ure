/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XSubmission.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:50:36 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_form_submission_XSubmission_idl__
#define __com_sun_star_form_submission_XSubmission_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_util_VetoException_idl__
#include <com/sun/star/util/VetoException.idl>
#endif
#ifndef __com_sun_star_lang_WrappedTargetException_idl__
#include <com/sun/star/lang/WrappedTargetException.idl>
#endif
#ifndef __com_sun_star_lang_NoSupportException_idl__
#include <com/sun/star/lang/NoSupportException.idl>
#endif
#ifndef __com_sun_star_task_XInteractionHandler_idl__
#include <com/sun/star/task/XInteractionHandler.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module form { module submission {

interface XSubmissionVetoListener;

//=============================================================================

/** is implemented by components which support submitting data.
*/
interface XSubmission : com::sun::star::uno::XInterface
{
    /** tells the component to submit data

        @throws com::sun::star::util::VetoException
            if the submission has been vetoed. Usually, this indicates that not all
            requirements for the submission, e.g. data consistency, are fulfilled.

        @throws com::sun::star::lang::WrappedTargetException
            if an error occured during invoking the submission target
    */
    void submit( )
                raises ( com::sun::star::util::VetoException, com::sun::star::lang::WrappedTargetException );

    /** tells the component to submit data

        @param aHandler
            This handler allows additional user interaction, which may be necessary before
            the submission can be performed.

        @throws com::sun::star::util::VetoException
            if the submission has been vetoed. Usually, this indicates that not all
            requirements for the submission, e.g. data consistency, are fulfilled.

        @throws com::sun::star::lang::WrappedTargetException
            if an error occured during invoking the submission target
    */
    void submitWithInteraction( [in] com::sun::star::task::XInteractionHandler aHandler )
                raises ( com::sun::star::util::VetoException, com::sun::star::lang::WrappedTargetException );

    /** registers the given listener to be notified when a submission occurs

        @param listener
            the listener to register

        @throws com::sun::star::lang::NoSupportException
            when the component does not support external componentsw vetoing the submission
     */
    void addSubmissionVetoListener( [in] XSubmissionVetoListener listener )
        raises ( com::sun::star::lang::NoSupportException );
 
    /** revokes a listener which has previously been registered to be notified when a submission occurs

        @param listener
            the listener to revoke

        @throws com::sun::star::lang::NoSupportException
            when the component does not support external componentsw vetoing the submission
     */
    void removeSubmissionVetoListener( [in] XSubmissionVetoListener listener )
        raises ( com::sun::star::lang::NoSupportException );
};

//=============================================================================

}; }; }; }; };

#endif
