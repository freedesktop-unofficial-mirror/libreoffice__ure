/*************************************************************************
 *
 *  $RCSfile: XFormController.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-26 13:53:54 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_form_XFormController_idl__ 
#define __com_sun_star_form_XFormController_idl__ 
 
#ifndef __com_sun_star_awt_XTabController_idl__ 
#include <com/sun/star/awt/XTabController.idl> 
#endif 
 
#ifndef __com_sun_star_awt_XControl_idl__ 
#include <com/sun/star/awt/XControl.idl> 
#endif 
 
#ifndef __com_sun_star_form_XFormControllerListener_idl__ 
#include <com/sun/star/form/XFormControllerListener.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  
 
//============================================================================= 
 
/** provides functionality to control the activation of forms controls.

    <p>There is a duality of forms (<type scope="com::sun::star::form::component">DataForm</type>)
    and form controllers. In a document view, for every loaded form there is a form controller which is
    responsible	for exactly the controls which's models are direct children of the form.<br/>

    In some sense, a form controller is the view representation of a form, like a <em>form control</em> is the
    view representation of a <em>form control model</em>.<br/>

    This is also reflected in this interface: If you call
    <method scope="com::sun::star::awt">XTabController::getModel</method> on a form controller, the form which
    the controller is responsible for will be returned.<br/>

    As always in the model-view-paradigm, there is no way from a model to its controller, mostly, because for
    <em>one</em> given form, there is one controller for <em>every</em> view of the document.</p>

    <p>A controller is called <em>active</em> if one of the controls it is responsible for has the focus,
    else inactive. To be notified whenever this activation state of a given controller changes, you can
    add listeners.</p>

    @see com::sun::star::form::component::Form
 */
interface XFormController: com::sun::star::awt::XTabController
{ 
    //------------------------------------------------------------------------- 
     
    /** access to the currently active control

        @returns
            the currently active control, or <NULL/> if there is no such control
     */
    com::sun::star::awt::XControl getCurrentControl(); 
 
    //------------------------------------------------------------------------- 
     
    /** adds the specified listener to receive notifications whenever the activation state of
        the controller changes.

        @param l
            the listener to add.
     */
    [oneway] void addActivateListener( [in] com::sun::star::form::XFormControllerListener l ); 
 
    //------------------------------------------------------------------------- 
     
    /** removes the specified listener

        @param l
            the listener to remove.
     */
    [oneway] void removeActivateListener( [in] com::sun::star::form::XFormControllerListener l ); 
 
}; 
 
//============================================================================= 
 
}; }; }; };  
 
/*============================================================================= 
 
=============================================================================*/ 
#endif 
