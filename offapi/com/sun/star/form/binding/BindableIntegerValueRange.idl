/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: BindableIntegerValueRange.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:33:26 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_form_binding_BindableIntegerValueRange_idl__
#define __com_sun_star_form_binding_BindableIntegerValueRange_idl__

#ifndef __com_sun_star_form_binding_BindableControlModel_idl__
#include <com/sun/star/form/binding/BindableControlModel.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module form {  module binding {

//=============================================================================

/** this service specifies a <type>BindableControlModel</type> which reflects
    an integer value, out of a range of permitted integer values.

    <p><type>BindableIntegerValueRange</type>s have a value property, a minimum, and a maximum,
    all of type integer.</p>
*/
service BindableIntegerValueRange
{
    /** specifies that the control can be bound to external values

        <p>Any binding used with the control model (see <member>XBindableValue::setValueBinding</member>)
        must support exchanging double values.</p>

        <p>When the (integer) value reflected by the control model is changed, it's converted
        into an double value and propagated to the binding.</p>

        <p>When the external (double) value changes, it's converted as follows to an integer
        value:
        <ul><li>If the external value is <NULL/>, the current value of the control model
                will be set to it's minimum.</li>
            <li>If the external value is the <em>infinite</em> value, the control value will
                be set to its maximum or minimum, depending on the sign of the external value.</li>
            <li>If none of the aforementioned conditions is met, the external value will be simply
                rounded.</li>
        </ul>
    */
    service com::sun::star::form::binding::BindableControlModel;

};

//=============================================================================

}; }; }; }; };

#endif
