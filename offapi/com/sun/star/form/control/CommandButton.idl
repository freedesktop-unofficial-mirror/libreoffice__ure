/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: CommandButton.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:46:18 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_form_control_CommandButton_idl__ 
#define __com_sun_star_form_control_CommandButton_idl__ 

#ifndef __com_sun_star_awt_UnoControlButton_idl__ 
#include <com/sun/star/awt/UnoControlButton.idl> 
#endif 

#ifndef __com_sun_star_form_XApproveActionBroadcaster_idl__ 
#include <com/sun/star/form/XApproveActionBroadcaster.idl> 
#endif

//============================================================================= 
 
 module com {  module sun {  module star {  module form {  module control { 
 
//============================================================================= 
 
/** describes a button control.

    <p>The model of the control has to support the <type scope="com::sun::star::form::component">CommandButton</type>
    service.</p>

    <p>The control is clickable, the action taken upon clicking depends on the settings
    of the model the control belongs to.</p>

    @see com::sun::star::awt::UnoControl
    @see com::sun::star::awt::UnoControlModel
    @see com::sun::star::form::component::CommandButton::ButtonType
*/
published service CommandButton
{
    service com::sun::star::awt::UnoControlButton;

    /** allows external instances to register as veto listener for the button's actions.

        <p>An <type scope="com::sun::star::form">XApproveActionListener</type> returning false on
        it's approve-method will prevent any action which would usually be triggered - this includes
        not only submitting or resetting forms, but also calling the
        <type scope="com::sun::star::awt">XActionListener</type>s of the super service<br/>
        This may be interesting for e.g. forms which want to provide input validation before submitting
        data.<br/>

        @see com::sun::star::form::component::HTMLForm
        @see com::sun::star::form::XSubmit
        @see com::sun::star::form::XReset
        @see com::sun::star::awt::XButton
    */
    interface com::sun::star::form::XApproveActionBroadcaster;
};

//============================================================================= 
 
}; }; }; }; }; 
 
/*============================================================================= 
 
=============================================================================*/ 

#endif 


