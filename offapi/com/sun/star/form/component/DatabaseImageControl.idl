/*************************************************************************
 *
 *  $RCSfile: DatabaseImageControl.idl,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: mi $ $Date: 2002-10-03 13:04:52 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_form_component_DatabaseImageControl_idl__ 
#define __com_sun_star_form_component_DatabaseImageControl_idl__ 
 
#ifndef __com_sun_star_awt_UnoControlImageControlModel_idl__ 
#include <com/sun/star/awt/UnoControlImageControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_DataAwareControlModel_idl__ 
#include <com/sun/star/form/DataAwareControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_XImageProducerSupplier_idl__ 
#include <com/sun/star/form/XImageProducerSupplier.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  module component {  
 
//============================================================================= 
 
/** specifies the model of a control used for displaying images stored in a database.

    <p>As every <type scope="com::sun::star::form">DataAwareControlModel</type>, an image control
    can be bound to a database field. This means that for instance with every record change, the content
    of the database field is taken, interpreted as image, and displayed in the control.<br/>
    Unlike other more text-based controls, it does not interpret the content of the field as text or double,
    but as binary stream (see <member scope="com::sun::star::sdb">XColumn::getBinaryStream</member>).</p>

    <p>Usually, an image control model can be bound to binary columns only,	namely
    <member scope="com::sun::star::sdbc">DataType::BINARY</member>,
    <member scope="com::sun::star::sdbc">DataType::VARBINARY</member>,
    <member scope="com::sun::star::sdbc">DataType::LONGVARBINARY</member>,
    <member scope="com::sun::star::sdbc">DataType::OTHER</member>,
    <member scope="com::sun::star::sdbc">DataType::LONGVARCHAR</member></p>

    <p/>

    <p>Note that besides taking the image to be displayed from the bound field, there is another option. The
    <member scope="com::sun::star::awt">UnoControlImageControlModel::ImageURL</member> property specifies
    the URL of an image to be displayed. If this property is changed from outside, the respective file
    is loaded and set as image source.</p>

    <p>In a usual data form, the scenario will be as follows:
        <ul><li>There is a DatabaseImageControl as part of the document model, which acts as
                control model for an <type scope="com::sun::star::form::control">ImageControl</type>.</li>

            <li>The control is an <type scope="com::sun::star::awt">XImageConsumer</type> for the
                <type scope="com::sun::star::awt">XImageProducer</type> supplied by the model.</li>

            <li>Whenever the form's cursor is positioned on a new record, the column the control
                model is bound to is examined for a binary data stream. This stream is set as source
                at the image producer, which notifies it's consumers, which leads to the control
                displaying the image.</li>

            <li>When the user by some interaction tells the control to contain a new image, this is
                exchanged by URL. For example, implementations of the control service may allow the user
                to browse for image. After this, the URL of the image is set as
                <member scope="com::sun::star::awt">UnoControlImageControlModel::ImageURL</member>
                property at the model.<br/>
                Now the control loads the image determined by the property value, and starts producing
                a new data stream, which is displayed by the control (which is a consumer for this stream).<br/>
                From now on, the control and thus the database record counts as modified. If the cursor of the
                form is moved further, the modified record is saved, means the content of the image pointed to
                by <member scope="com::sun::star::awt">UnoControlImageControlModel::ImageURL</member>
                is saved into the column.</li>
        </ul>
    </p>
 */
service DatabaseImageControl
{ 
    service com::sun::star::awt::UnoControlImageControlModel; 
    
    service com::sun::star::form::DataAwareControlModel; 
 
    /** supplies the caller with an <type scope="com::sun::star::awt">XImageProducer</type>.

        <p>Other components can register as <type scope="com::sun::star::awt">XImageConsumer</type>
        at this producer. Then they will be notified of any change in the image to be displayed.</p>
     */
    interface com::sun::star::form::XImageProducerSupplier; 
 
    //------------------------------------------------------------------------- 
     
    /** indicates if it is possible to change the image being displayed.
     */
    [property] boolean ReadOnly; 
 
}; 
 
//============================================================================= 
 
}; }; }; }; };  
 
/*============================================================================= 
 
    $Log: not supported by cvs2svn $
    Revision 1.4.20.1  2002/07/26 09:49:11  fs
    IDL review form layer
    
    Revision 1.4  2001/01/23 16:05:23  fs
    #82676# corrected the property name for readonly
    
    Revision 1.3  2000/11/08 12:43:10  mi
    moved from api
    
    Revision 1.1.1.1  2000/09/18 23:35:18  hjs
    initial import
    
    Revision 1.3  2000/09/11 11:52:26  mi
    documentation merged from XML
     
    Revision 1.1.1.1  1999/11/11 09:48:42  jsc 
    new 
     
 
=============================================================================*/ 
#endif 
