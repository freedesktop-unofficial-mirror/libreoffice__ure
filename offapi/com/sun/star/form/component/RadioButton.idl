/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: RadioButton.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:43:55 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_form_component_RadioButton_idl__ 
#define __com_sun_star_form_component_RadioButton_idl__ 
 
#ifndef __com_sun_star_awt_UnoControlRadioButtonModel_idl__ 
#include <com/sun/star/awt/UnoControlRadioButtonModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_FormControlModel_idl__ 
#include <com/sun/star/form/FormControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_XReset_idl__ 
#include <com/sun/star/form/XReset.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  module component { 
 
//============================================================================= 
 
/** specifies a component which acts as a radio button as needed in <type>HTMLForm</type>s.

    <p>Radio buttons are controls which can be grouped together, and in every
    group, only one of the controls can be check. This means if one of them
    is checked by a user interaction, all other controls in the same group
    are automatically unchecked</p>

    <p>Like in HTML, radio buttons are grouped together if and only if they have the
    same name (see <member scope="com::sun::star::form">FormComponent::Name</member>).</p>
 */
published service RadioButton
{ 
    service com::sun::star::awt::UnoControlRadioButtonModel; 
    
    service com::sun::star::form::FormControlModel; 
    
    /** can be used to reset the control to it's default text.

        @see RadioButton::DefaultState
    */
    interface com::sun::star::form::XReset; 
 
    //------------------------------------------------------------------------- 
     
    /** contains a default value for the control.

        <p>This value is used when the control is initially displayed, and for resetting it.</p>

        <p> In a group of radio buttons only one button should be checked
        by default.</p>

        @see com::sun::star::awt::UnoControlRadioButtonModel::State
        @see com::sun::star::form::XReset
     */
    [property] short DefaultState; 
 
    //------------------------------------------------------------------------- 
     
    /** contains a reference value which is used for submission in a HTML
        form.

        <p>If the form the control belongs to is to be submitted (see
        <type scope="com::sun::star::form">XSubmit</type>), and the control is checked, this reference
        value is used for submission.</p>
     */
    [property] string RefValue; 
 

    /** specifies a value which is to be associated with the control when it's <em>not</em>
        selected.

        <p>In various situations, the <member>RefValue</member> is associated with the control
        if and only if it is selected.<br/>
        <member>UncheckedRefValue</member> provides a extensions of this concept: If present,
        the value should be associated with the control when it is <em>not</em> selected.</p>
    */
    [optional, property] string UncheckedRefValue;
}; 
 
//============================================================================= 
 
}; }; }; }; }; 
 
#endif 
