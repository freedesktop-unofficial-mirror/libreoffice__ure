/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: ImageButton.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:42:40 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_form_component_ImageButton_idl__ 
#define __com_sun_star_form_component_ImageButton_idl__ 
 
#ifndef __com_sun_star_awt_UnoControlImageControlModel_idl__ 
#include <com/sun/star/awt/UnoControlImageControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_FormControlModel_idl__ 
#include <com/sun/star/form/FormControlModel.idl> 
#endif 
 
#ifndef __com_sun_star_form_XApproveActionBroadcaster_idl__ 
#include <com/sun/star/form/XApproveActionBroadcaster.idl> 
#endif 
 
#ifndef __com_sun_star_form_XImageProducerSupplier_idl__ 
#include <com/sun/star/form/XImageProducerSupplier.idl> 
#endif 
 
#ifndef __com_sun_star_form_FormButtonType_idl__ 
#include <com/sun/star/form/FormButtonType.idl> 
#endif 
 
 
//============================================================================= 
 
 module com {  module sun {  module star {  module form {  module component { 
 
//============================================================================= 
 
/** This service specifies the control model for a clickable button which
    is represented by an image.

     <p>The image to be displayed is determined by <member scope="com::sun::star::awt">UnoControlImageControlModel::ImageURL</member>
    property specifies the URL of an image to be displayed.</p>

    @see CommandButton
*/
published service ImageButton
{ 
    service com::sun::star::awt::UnoControlImageControlModel; 
    
    service com::sun::star::form::FormControlModel; 
 
     
    /** supplies the caller with an <type scope="com::sun::star::awt">XImageProducer</type>.

        <p>Other components can register as <type scope="com::sun::star::awt">XImageConsumer</type>
        at this producer. Then they will be notified of any change in the image to be displayed.</p>

        <p>Whenever the <member scope="com::sun::star::awt">UnoControlImageControlModel::ImageURL</member>
        property is changed, the model loads the specified image, and sets it as image source
        at its <type scope="com::sun::star::awt">XImageProducer</type>. Then, all
        <type scope="com::sun::star::awt">XImageConsumer</type>s are notified and supplied with
        the binary data of the image.<br/>
        Usually, controls acting for an <type>ImageButton</type> model are consumers, and use the
        data stream to display the image</p>
     */
    interface com::sun::star::form::XImageProducerSupplier; 
 
    //------------------------------------------------------------------------- 
    /** describes the action to be executed by the button when pressed.
     */
    [property] com::sun::star::form::FormButtonType ButtonType; 

    //------------------------------------------------------------------------- 
    /** describes the frame, where to open the document specified by the TargetURL.

        <p>This property is evaluated if the button is of type URL.</p>

        <p>As always, there is a number of target names which have a special meaning, and force
        a special <type scope="com::sun::star::frame">Frame</type> to be used.</p>
     */
    [property] string TargetFrame; 

    //------------------------------------------------------------------------- 
    /** specifies the URL, which should be opened if the button was clicked.
        
        <p>This property is evaluated if the button is of type URL.</p>

        @see com::sun::star::form::FormButtonType
     */
    [property] string TargetURL; 
}; 
 
//============================================================================= 
 
}; }; }; }; }; 
 
#endif 
