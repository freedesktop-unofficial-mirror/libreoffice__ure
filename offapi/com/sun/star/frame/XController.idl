/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XController.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 01:08:57 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_XController_idl__
#define __com_sun_star_frame_XController_idl__

#ifndef __com_sun_star_lang_XComponent_idl__
#include <com/sun/star/lang/XComponent.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module frame {

 published interface XFrame;
 published interface XModel;

//=============================================================================
/** With this interface, components viewed in a <type>Frame</type> can serve
    events (by supplying dispatches).

    @see XFrame
    @see com::sun::star::awt::XWindow
    @see XModel
 */
published interface XController: com::sun::star::lang::XComponent
{
    //-------------------------------------------------------------------------
    /** is called to attach the controller with its managing frame.

        @param Frame
            the new owner frame of this controller
     */
    void attachFrame( [in] XFrame Frame );

    //-------------------------------------------------------------------------
    /** is called to attach the controller to a new model.

        @param Model
            the new model for this controller

        @return
            <TRUE/>if attach was successfully
            <br>
            <FALSE/>otherwise
     */
    boolean attachModel( [in] XModel Model );

    //-------------------------------------------------------------------------
    /** is called to prepare the controller for closing the view

        @param Suspend
            <TRUE/>force the controller to suspend his work
            <FALSE/>try to reactivate the controller

        @return
            <TRUE/>if request was accepted and of course successfully finished
            <br>
            <FALSE/>otherwise
     */
    boolean suspend( [in] boolean Suspend );

    //-------------------------------------------------------------------------
    /** provides access to current view status

        @returns
            set of data that can be used to restore the current view status
            at later time by using <member>XController::restoreViewData()</member>
     */
    any getViewData();

    //-------------------------------------------------------------------------
    /** restores the view status using the data gotten from a previous call to
        <member>XController::getViewData()</member>.

        @param Data
            set of data to restore it
     */
    void restoreViewData( [in] any Data );

    //-------------------------------------------------------------------------
    /** provides access to currently attached model

        @returns
            the currently attached model.
     */
    XModel getModel();

    //-------------------------------------------------------------------------
    /** provides access to owner frame of this controller

        @returns
            the frame containing this controller.
     */
    XFrame getFrame();
};

//=============================================================================

}; }; }; };

#endif
