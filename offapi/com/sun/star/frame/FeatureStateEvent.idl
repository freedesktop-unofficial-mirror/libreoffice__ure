/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: FeatureStateEvent.idl,v $
 *
 *  $Revision: 1.11 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 00:59:52 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_FeatureStateEvent_idl__
#define __com_sun_star_frame_FeatureStateEvent_idl__

#ifndef __com_sun_star_lang_EventObject_idl__
#include <com/sun/star/lang/EventObject.idl>
#endif

#ifndef __com_sun_star_util_URL_idl__
#include <com/sun/star/util/URL.idl>
#endif


//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================
/** This event is broadcast by a <type>Controller</type> whenever the state of
    the feature changes

    @see XController
    @see XStatusListener
 */
published struct FeatureStateEvent: com::sun::star::lang::EventObject
{
    //-------------------------------------------------------------------------
    /** contains the URL of the feature.
     */
    com::sun::star::util::URL FeatureURL;

    //-------------------------------------------------------------------------
    /** contains a descriptor of the feature for the user interface.
     */
    string FeatureDescriptor;

    //-------------------------------------------------------------------------
    /** specifies whether the feature is currently enabled or disabled.
     */
    boolean IsEnabled;

    //-------------------------------------------------------------------------
    /** specifies whether the <type>XDispatch</type> has to be requeried.

        <p>
        Interest code should listen for <type>FrameActionEvent</type>
        too, to update own feature states and dispatch listener on
        <const>FrameAction::CONTEXT_CHANGED</const>.
        </p>
     */
    boolean Requery;

    //-------------------------------------------------------------------------
    /** contains the state of the feature in this dispatch.

        <p>
        This can be, for example, simply <TRUE/> for a boolean feature like
        underline on/off. Some simple types like <code>string</code> or
        <atom>boolean</atom> are useful here for generic UI elements, like
        a checkmark in a menu.
        </p>
     */
    any State;
};

//=============================================================================

}; }; }; };

#endif
