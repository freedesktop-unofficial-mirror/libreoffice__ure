/*************************************************************************
 *
 *  $RCSfile: XDispatchRecorder.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: rt $ $Date: 2003-04-17 10:07:07 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_XDispatchRecorder_idl__
#define __com_sun_star_frame_XDispatchRecorder_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_util_URL_idl__
#include <com/sun/star/util/URL.idl>
#endif

#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module frame {

interface XFrame;

//=============================================================================
/** provides recording functionality of dispatches

    <p>
    With such recorder it will be possible to record requests of type
    <type>XDispatch</type> by using additional interface
    <type>XRecordableDispatch</type>. The result of that will be a
    a script which can be used to start the dispatch at later time again.
    Such recorder objects are available on a <type>XDispatchRecorderSupplier</type>
    which is provided by the <type>Frame</type> service.
    </p>

    @see Frame
    @see XDispatchRecorderSupplier

    @since #107627#
 */
interface XDispatchRecorder: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** initializes the recorder by passing the frame for which all
        macro statements shall be recorded

        @param Frame
            it includes the document on which such requests shall be recorded
    */
    void startRecording( [in] com::sun::star::frame::XFrame Frame );

        //-------------------------------------------------------------------------
    /** stops the recording process

        <p>
        Must be called in pairs with <member>XDispatchRecorder::startRecording()</member>.
        It's not allowed for the recorder to clear recorded data here - because
        the must be provided later at method <member>XDispatchRecorder::getRecordedMacro()</member>.
        </p>
    */
    void endRecording();

    //-------------------------------------------------------------------------
    /** records a single dispatch call identified by its command URL

        @param URL
            the full parsed command URL

        @param Arguments
            optional arguments for the command URL
            <br>
            (see <type scope="com::sun::star::document">MediaDescriptor</type>
             for further informations)
    */
    void recordDispatch(
        [in] com::sun::star::util::URL URL,
        [in] sequence<com::sun::star::beans::PropertyValue> Arguments);

    //-------------------------------------------------------------------------
    /** records a single dispatch call identified by its command URL, but
        comments it out

        <p>
        This way calls that failed on execution can be documented.
        </p>

        @param URL
            the full parsed command URL

        @param Arguments
            optional arguments for the command URL
            <br>
            (see <type scope="com::sun::star::document">MediaDescriptor</type>
             for further informations)
    */
    void recordDispatchAsComment(
        [in] com::sun::star::util::URL URL,
        [in] sequence<com::sun::star::beans::PropertyValue> Arguments);

    //-------------------------------------------------------------------------
    /** returns the recorded source code

        <p>
        The result of calling this method before calling <member>XDispatchRecorder::endRecording</member>() is undefined.
        </p>

        @returns
            the recorded data as a string which can be interpreted as a script
    */
    string getRecordedMacro();
};

//=============================================================================

}; }; }; };

#endif
