/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: DispatchProvider.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: hr $ $Date: 2006-05-08 15:22:08 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_DispatchProvider_idl__
#define __com_sun_star_frame_DispatchProvider_idl__

#ifndef __com_sun_star_frame_XDispatchProvider_idl__
#include <com/sun/star/frame/XDispatchProvider.idl>
#endif

#ifndef __com_sun_star_frame_XDispatchProviderInterception_idl__
#include <com/sun/star/frame/XDispatchProviderInterception.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module frame {

//=============================================================================
/** provides <type>XDispatch</type> objects for certain functions which
    are useful at the UI

    <p>
    Such dispatch objects must be queried explicitly and used for
    queried purposes only. They can handle requests with guaranteed
    notifications (<type>XNotifyingDispatch</type>) or with possible
    (but not guaranteed) notifications (<type>XDispatch</type>).
    </p>

    @see XNotifyingDispatch
    @see XDispatch
    @see XControlNotificationListener
 */
published service DispatchProvider
{
    //-------------------------------------------------------------------------
    /** provides handling of dispatches with defined result state

        <p>
        Base interface of <type>XNotifyingDispatch</type> is <type>XDispatch</type>
        and can be called for requests if result isn't neccessary for dispatch operation.
        </p>

        @see XDispatch
     */
    interface XDispatchProvider;

    //-------------------------------------------------------------------------
    /** provides dispatch interception

        <p>
        It makes it possible to register an <type>XDispatchProvider</type> which
        intercepts all requests of <type>XDispatch</type> to this instance.
        </p>
     */
    [optional] interface XDispatchProviderInterception;
};

//=============================================================================

}; }; }; };

#endif
