/*************************************************************************
 *
 *  $RCSfile: ProtocolHandler.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: as $ $Date: 2002-09-05 11:31:11 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_ProtocolHandler_idl__
#define __com_sun_star_frame_ProtocolHandler_idl__

#ifndef __com_sun_star_frame_XDispatchProvider_idl__
#include <com/sun/star/frame/XDispatchProvider.idl>
#endif

#ifndef __com_sun_star_lang_XInitialization_idl__
#include <com/sun/star/lang/XInitialization.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================
/** special dispatch provider registered for URL protocols

    <p>
    The generic dispatch mechanism on a <type>Frame</type>
    search for such registered protocol handler and use it if it agrees with
    the dispatched URL.
    </p>

    <p>
    Supported URLs must match follow format: <protocol scheme>:<protocol specific part>
    If a handler provides optional arguments ("?") or jump marks ("#") depends from his
    defintion and implementation. The generic dispatch provider will use registered
    URL pattern to detect right handler.
    </p>
 */
service ProtocolHandler
{
        //-------------------------------------------------------------------------
        /** used from the generic dispatch mechanism of the frame, to ask ProtocolHandler
            for his agreement for the dispatched URL

        <p>
        Such asked handler can agree by returning itself or a special sub dispatch object, which
        can handle the given URL. Of course he can disagree with it by returning an empty reference.
        </p>
        */
        interface XDispatchProvider;

        //-------------------------------------------------------------------------
        /** initialize the new handler instance with some context informations

        <p>
        Sometimes it can be usefull for a handler object, to know something about the
        environment, in which it runs - especily the frame. For this case the generic
        code (which uses the handler) will ask for this optional interface and use it, if it exist.
        Following parameters are passed to the service:
        <ul>
        <li>sequence< any >[0] => the frame for which this ProtocolHandler was created [com.sun.star.frame.XFrame]</li>
        </ul>
        </p>

        <p>
        Please note: if this mechanism is used it seams not usefull (nor possible) to implement a ProtocolHandler
        as a singleton. Otherwhise the implementation can't distinguish between different environments
        and her corresponding dispatch requests.
        </p>
        */
        [optional] interface ::com::sun::star::lang::XInitialization;
};

//=============================================================================

}; }; }; };

#endif
