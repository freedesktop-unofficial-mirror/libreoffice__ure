/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XModule.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: vg $ $Date: 2008-01-28 15:52:13 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_frame_XModule_idl__
#define __com_sun_star_frame_XModule_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_frame_UnknownModuleException_idl__
#include <com/sun/star/frame/UnknownModuleException.idl>
#endif

//===============================================

module com { module sun { module star { module frame {

//===============================================
/** can be used to overrule identification of office modules.

    <p>
    Normaly an office module will be identified by it's service name
    in combination with a set of configuration data.
    But sometimes whole existing office modules will be used as black box components
    to implement a different office module on top of it. Patching a service name
    is not possible. So this optional interface can be used to overwrite identification
    of a module.
    </p>

    @see XModuleManager
    
    @since OOo 2.3.0
 */
interface XModule : com::sun::star::uno::XInterface
{
    //-------------------------------------------
    /** @param  Identifier
                a new "name" for this module.
     */
    void setIdentifier([in] string Identifier);

    //-------------------------------------------
    /** @return the module identifier.
     */
    string getIdentifier();
};

}; }; }; };

#endif
