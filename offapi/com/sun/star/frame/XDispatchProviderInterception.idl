/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XDispatchProviderInterception.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 01:10:58 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_XDispatchProviderInterception_idl__
#define __com_sun_star_frame_XDispatchProviderInterception_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_frame_XDispatchProviderInterceptor_idl__
#include <com/sun/star/frame/XDispatchProviderInterceptor.idl>
#endif


//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================
/** makes it possible to register an <type>XDispatchProvider</type> which
    intercepts all requests of <type>XDispatch</type> to this instance.

    <p>
    Note: Nobody can guarantee order of used interceptor objects if more then ones exist.
    Later registered ones will be used at first. But it's possible to increase the chance
    for that by providing the optional interface <type>XInterceptorInfo</type>.
    </p>

    @see XDispatchProvider
    @see XDispatch
    @see XInterceptorInfo
 */
published interface XDispatchProviderInterception: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** registers an <type>XDispatchProviderInterceptor</type>, which will become
        the first interceptor in the chain of registered interceptors.

        @param Interceptor
            the interceptor which whish to be registered

        @see XDispatchProviderInterception::releaseDispatchProviderInterceptor()
     */
    void registerDispatchProviderInterceptor( [in] XDispatchProviderInterceptor Interceptor );

    //-------------------------------------------------------------------------
    /** removes an <type>XDispatchProviderInterceptor</type> which was previously registered

        <p>
        The order of removals is arbitrary. It is not necessary to remove the last
        registered interceptor first.
        </p>

        @param Interceptor
            the interceptor which whish to be unregistered

        @see XDispatchProviderInterception::registerDispatchProviderInterceptor()
     */
    void releaseDispatchProviderInterceptor( [in] XDispatchProviderInterceptor Interceptor );
};

//=============================================================================

}; }; }; };

#endif
