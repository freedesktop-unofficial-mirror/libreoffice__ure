/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: FrameLoader.idl,v $
 *
 *  $Revision: 1.10 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 01:01:03 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_FrameLoader_idl__
#define __com_sun_star_frame_FrameLoader_idl__

#ifndef __com_sun_star_frame_XFrameLoader_idl__
#include <com/sun/star/frame/XFrameLoader.idl>
#endif

#ifndef __com_sun_star_lang_XInitialization_idl__
#include <com/sun/star/lang/XInitialization.idl>
#endif

#ifndef __com_sun_star_container_XNamed_idl__
#include <com/sun/star/container/XNamed.idl>
#endif

//=============================================================================

 module com {  module sun {  module star {  module frame {

//=============================================================================
/** derivations of this abstract service are used to load components
    into <type>Frame</type>s of the environment

    <p>
    Concrete implementations of this service register, for example,
    for file name extensions or MIME types to load appropriate
    components. The components loaded are at least <type>Controller</type>.
    Instead of <type>SynchronousFrameLoader</type> this one use asynchronous
    processes to load the component.
    </p>

    @see SynchronousFrameLoader
 */
published service FrameLoader
{
    //-------------------------------------------------------------------------
    /** support asynchronous loading of the component
     */
    interface XFrameLoader;

    //-------------------------------------------------------------------------
    /**	support initialization of loader with its own configuration!

        <p>
        Concrete implementations should use it to get her own configuration data
        directly after creation by the <type>FrameLoaderFactory</type>.
        Otherwhise they must use normal configuration api to do so.
        </p>
     */
    [optional] interface com::sun::star::lang::XInitialization;

    //-------------------------------------------------------------------------
    /** provides access to the internal name of this frame loader

        <p>
        The internal name is a part of his configuration and will be passed by
        the <type>FrameLoaderFactory</type> after creation
        if optional interface <type scope="com::sun::star::lang">XInitialization</type>
        is supported. Value of function <member scope="com::sun::star::container">XNamed::getName()</member> 
    can be used on service <type>FrameLoaderFactory</type> to get further informations about this loader.
        Setting of this name by calling <member scope="com::sun::star::container">XNamed::setName()</member> 
    must be forwarded to same factory service. He should decide, if it's allowed or not.
        The reason: prevent code against name ambigities.
        </p>
     */
     [optional] interface com::sun::star::container::XNamed;
};

//=============================================================================

}; }; }; };

#endif
