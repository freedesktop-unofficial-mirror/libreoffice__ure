/*************************************************************************
 *
 *  $RCSfile: XModuleManager.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: kz $ $Date: 2005-03-01 18:16:40 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_frame_XModuleManager_idl__
#define __com_sun_star_frame_XModuleManager_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif

#ifndef __com_sun_star_frame_UnknownModuleException_idl__
#include <com//sun/star/frame/UnknownModuleException.idl>
#endif

//===============================================

module com { module sun { module star { module frame {

//===============================================
/** can be used to identify office modules.
    
    @since OOo 2.0.0
 */
interface XModuleManager : com::sun::star::uno::XInterface
{
    //-------------------------------------------
    /** @short  identifies the given module.
     
       @descr  This identifier can then be used at the service <type>ModuleManager</type>
               to get more information about this module.
     
               For identification the interface <type scope="com::sun::star::lang">XServiceInfo</type>
               is requested on the given module. Because all module service registrations must be unique
               this value can be queried and checked against the configuration.
     
       @param  Module
               Possible objects for this parameter can be the following one:
               <ul>
                   <li>
                       <b><type scope="com::sun::star::frame">XFrame</type></b><br>
                       A frame contains (against a component window) a controller.
                       Such controller represent the module (in case no model exists).
                   </li>
                   <li>
                       <b><type scope="com::sun::star::frame">XController</type></b><br>
                       A controller can be bound to a model. Then the model represent the module.
                       If no model exists - the controller is used for identification.
                   </li>
                   <li>
                       <b><type scope="com::sun::star::frame">XModel</type></b><br>
                       A model represent a module everytimes and can be used for
                       identification directly.
                   </li>
               </ul>
     
       @throw  <type scope="com::sun::star::lang">IllegalArgumentException</type>
               if the parameter Module is:
               <ul>
                   <li>an empty one</li>
                   <li>or does not provide one of the needed interface
                       XFrame, XControllerm, XModel</li>
                   <li>or does not provide the needed interface XServiceInfo.</li>
               </ul>
     
       @throw  <type>UnknownModuleException</type>
               if the given module could not be identified.
               Note: If the module represent a XFrame instance with does not contain
               a document, this exception is thrown too!
     
       @return An identifier for the given module.
               Note: This value is valie everytimes. Error will be transported
               by thrown exceptions!
     */
    string identify( [in] ::com::sun::star::uno::XInterface Module )
        raises(::com::sun::star::lang::IllegalArgumentException,
                                       UnknownModuleException  );
                                       
                                           
};

}; }; }; };

#endif
