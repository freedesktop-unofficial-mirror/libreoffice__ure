/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XSessionManagerClient.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 01:25:36 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_XSessionManagerClient_idl__
#define __com_sun_star_frame_XSessionManagerClient_idl__

#ifndef __com_sun_star_frame_XSessionManagerListener_idl__
#include <com/sun/star/frame/XSessionManagerListener.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module frame {

//=============================================================================
/** Connect to a session manager to get information about pending
    desktop shutdown

 */
    interface XSessionManagerClient : com::sun::star::uno::XInterface
    {

        /** addSessionManagerListener registers a listener for session management events
            
        @param xListener
        listener for session management events

        @see XSessionManagerListener
        @see XSessionManagerClient::removeSessionManagerListener()
        */
        [oneway] void addSessionManagerListener( [in] XSessionManagerListener xListener );

        /** removeSessionManagerListener deregisters a listener for session events
        
        @param xListener
            listener to be removed

        @see XSessionManagerListener
        @see XSessionManagerClient::addSessionManagerListener()
        */
        [oneway] void removeSessionManagerListener( [in] XSessionManagerListener xListener );

        /** queryInteraction issues a request for a user interaction slot
            from the session manager

        @param xListener
        the listener requesting user interaction

        @see XSessionManagerListener
        */
        [oneway] void queryInteraction( [in] XSessionManagerListener xListener );

        /** interactionDone is called when a listener has finished user interaction

        @param xListener
        the listener done with user interaction

        @see XSessionManagerListener
        */
        [oneway] void interactionDone( [in] XSessionManagerListener xListener );

        /** saveDone signals that a listener has processed a save request

        @param listener
        the listener having finished save request processing

        @see XSessionManagerListener
        */
        [oneway] void saveDone( [in] XSessionManagerListener xListener );

        /** Call cancelShutdown to try to cancel a desktop shutdown in progress

        @returns
        <TRUE/> if shutdown was canceled,
        <FALSE/> else.
        */
        boolean cancelShutdown();
    };

}; }; }; };


#endif
