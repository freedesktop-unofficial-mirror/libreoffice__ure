/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: IndexType.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:44:01 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_IndexType_idl__ 
#define __com_sun_star_sdbc_IndexType_idl__ 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
// DocMerge from idl: constants com::sun::star::sdbc::IndexType
/** indicates the type of index.
 */
published constants IndexType
{ 
     
    // DocMerge from idl: value com::sun::star::sdbc::IndexType::STATISTIC
    /** A possible value for column
            <code>TYPE</code>
            in the 
            <type scope="com::sun::star::sdbc">XResultSet</type>
            object returned by the method 
            <member scope="com::sun::star::sdbc">XDatabaseMetaData::getIndexInfo()</member>
            . 
            <P>
            Indentifies table statistics that are returned in conjunction 
            with a table's index description.
            </P>
     */
    const short STATISTIC = 0; 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::sdbc::IndexType::CLUSTERED
    /** A possible value for column 
            <code>TYPE</code>
            in the
            <type scope="com::sun::star::sdbc">XResultSet</type>
            object returned by the method 
            <member scope="com::sun::star::sdbc">XDatabaseMetaData::getIndexInfo()</member>
            .
            <P>
            Indicates that this table index is a clustered index.
            </P>
     */
    const short CLUSTERED = 1; 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::sdbc::IndexType::HASHED
    /** A possible value for column
            <code>TYPE</code>
            in the 
            <type scope="com::sun::star::sdbc">XResultSet</type>
            object returned by the method 
            <member scope="com::sun::star::sdbc">XDatabaseMetaData::getIndexInfo()</member>
            .
             <P>
             Indicates that this table index is a hashed index.
             </P>
     */
    const short HASHED    = 2; 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::sdbc::IndexType::OTHER
    /** A possible value for column
            <code>TYPE</code>
            in the 
            <type scope="com::sun::star::sdbc">XResultSet</type>
            object returned by the method 
            <member scope="com::sun::star::sdbc">XDatabaseMetaData::getIndexInfo()</member>
            .
             <P>
             Indicates that this table index is not a clustered 
             index, a hashed index, or table statistics; 
             it is something other than these.
             </P>
     */
    const short OTHER     = 3; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
