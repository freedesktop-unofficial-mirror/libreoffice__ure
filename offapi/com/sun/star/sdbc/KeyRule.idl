/*************************************************************************
 *
 *  $RCSfile: KeyRule.idl,v $
 *
 *  $Revision: 1.6 $
 *
 *  last change: $Author: hr $ $Date: 2003-03-26 13:55:24 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_KeyRule_idl__ 
#define __com_sun_star_sdbc_KeyRule_idl__ 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
// DocMerge from idl: constants com::sun::star::sdbc::KeyRule
/** determines the rules for foreign key constraints.
 */
constants KeyRule
{ 
     
    // DocMerge from idl: value com::sun::star::sdbc::KeyRule::CASCADE
    /** a possible value for the column's
            <code>UPDATE_RULE</code>
            and
            <code>DELETE_RULE</code>
            in the 
            <type scope="com::sun::star::sdbc">XResultSet</type>
             objects returned by the methods 
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getImportedKeys()</member>
             ,
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getExportedKeys()</member>
             , 
             and
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getCrossReference()</member>
             . 
             <P>
             For the column 
             <code>UPDATE_RULE</code>
             ,
             it indicates that 
             when the primary key is updated, the foreign key (imported key) 
             is changed to agree with it. 
             </P>
             <P>
             For the column 
             <code>DELETE_RULE</code>
            , 
             it indicates that 
             when the primary key is deleted, rows that imported that key 
             are deleted.
             </P>
     */
    const long CASCADE	= 0; 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::sdbc::KeyRule::RESTRICT
    /** a possible value for the column's 
             <code>UPDATE_RULE</code>
             and
             <code>DELETE_RULE</code>
            in the 
             <type scope="com::sun::star::sdbc">XResultSet</type>
             objects returned by the methods 
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getImportedKeys()</member>
             ,
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getExportedKeys()</member>
             , 
             and
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getCrossReference()</member>
             .
             <P>
             For the column
             <code>UPDATE_RULE</code>
            , it indicates that 
             a primary key may not be updated if it has been imported by 
             another table as a foreign key. 
             </P>
             <P>
             For the column
             <code>DELETE_RULE</code>
            , it indicates that 
             a primary key may not be deleted if it has been imported by 
             another table as a foreign key.
             </P>
     */
    const long RESTRICT = 1; 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::sdbc::KeyRule::SET_NULL
    /** a possible value for the column's
             <code>UPDATE_RULE</code>
             and
             <code>DELETE_RULE</code>
            in the 
             <type scope="com::sun::star::sdbc">XResultSet</type>
              objects returned by the methods 
            <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getImportedKeys()</member>
             ,
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getExportedKeys()</member>
             ,
             and
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getCrossReference()</member>
             . 
             <P>
             For the columns
             <code>UPDATE_RULE</code>
             and
             <code>DELETE_RULE</code>
            , 
             it indicates that 
             when the primary key is updated or deleted, the foreign key (imported key) 
             is changed to <code>NULL</code>.
             </P>
     */
    const long SET_NULL  = 2; 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::sdbc::KeyRule::NO_ACTION
    /** a possible value for the column's
            <code>UPDATE_RULE</code>
             and
             <code>DELETE_RULE</code>
             in the 
             <type scope="com::sun::star::sdbc">XResultSet</type>
             objects returned by the methods 
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getImportedKeys()</member>
             ,
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getExportedKeys()</member>
             ,
             and 
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getCrossReference()</member>
             . 
             <P>
             For the columns
             <code>UPDATE_RULE</code>
             and
             <code>DELETE_RULE</code>
            , 
             it indicates that if the primary key has been imported, it cannot be updated or deleted.
             </P>
     */
    const long NO_ACTION = 3; 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: value com::sun::star::sdbc::KeyRule::SET_DEFAULT
    /** a possible value for the column's
            <code>UPDATE_RULE</code>
             and
             <code>DELETE_RULE</code>
            in the 
             <type scope="com::sun::star::sdbc">XResultSet</type>
             objects returned by the methods 
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getImportedKeys()</member>
             ,
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getExportedKeys()</member>
             , 
             and
             <member  scope="com::sun::star::sdbc">XDatabaseMetaData::getCrossReference()</member>
             . 
             <P>
             For the columns
             <code>UPDATE_RULE</code>
             and
             <code>DELETE_RULE</code>
            , 
             it indicates that 
             if the primary key is updated or deleted, the foreign key (imported key) 
             is set to the default value.
             </P>
     */
    const long SET_DEFAULT  = 4; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
