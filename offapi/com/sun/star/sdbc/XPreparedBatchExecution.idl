/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XPreparedBatchExecution.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:51:59 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_XPreparedBatchExecution_idl__ 
#define __com_sun_star_sdbc_XPreparedBatchExecution_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#include <com/sun/star/sdbc/SQLException.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
// DocMerge from xml: interface com::sun::star::sdbc::XPreparedBatchExecution
/** is used for batch execution on PreparedStatements.
    
    
    <p>
    A 
    <type scope="com::sun::star::sdbc">PreparedStatement</type>
    uses one precompiled SQL Statement. In batch execution
    it is possible to set collection of parameter settings, which are executed in
    one batch job.
    </p>
 */
published interface XPreparedBatchExecution: com::sun::star::uno::XInterface
{ 
     
    // DocMerge from xml: method com::sun::star::sdbc::XPreparedBatchExecution::addBatch
    /** adds a set of parameters to the batch.
        @throws SQLException 
            if a database access error occurs.
     */
    void addBatch() raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XPreparedBatchExecution::clearBatch
    /** makes the set of commands in the current batch empty.
        @throws SQLException 
            if a database access error occurs.
     */
    void clearBatch() raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from idl: method com::sun::star::sdbc::XPreparedBatchExecution::executeBatch
    /** submits a batch of commands to the database for execution. 
             @returns 
                an array of update counts containing one element for each 
                 command in the batch. The array is ordered according to the order in 
                which commands were inserted into the batch. 
             @throws SQLException 
                if a database access error occurs.
     */
    sequence<long> executeBatch() raises (SQLException); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
