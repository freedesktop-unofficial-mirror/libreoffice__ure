/*************************************************************************
 *
 *  $RCSfile: XResultSetUpdate.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: mi $ $Date: 2000-11-08 12:43:35 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_XResultSetUpdate_idl__ 
#define __com_sun_star_sdbc_XResultSetUpdate_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#include <com/sun/star/sdbc/SQLException.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
// DocMerge from xml: interface com::sun::star::sdbc::XResultSetUpdate
/** provides the possiblity to write changes mode on a result set back to
    database.
 */
[ uik(D6B6024A-9067-11d3-9EE00010-5AD7A5C4), ident("XResultSetUpdate", 1.0) ]
interface XResultSetUpdate: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XResultSetUpdate::insertRow
    /** inserts the contents of the insert row into the result set and
        the database. Must be on the insert row when this method is called.
     */
    void insertRow() raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XResultSetUpdate::updateRow
    /** updates the underlying database with the new contents of the
        current row. Cannot be called when on the insert row.
     */
    void updateRow() raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XResultSetUpdate::deleteRow
    /** deletes the current row from the result set and the underlying
        database. Cannot be called when on the insert row.
     */
    void deleteRow() raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XResultSetUpdate::cancelRowUpdates
    /** cancels the updates made to a row.
        
        
        <p>This method may be called after calling an
        <code>updateXXX</code> method(s) and before calling <code>updateRow</code>
        to rollback the updates made to a row. If no updates have been made or
        <code>updateRow</code> has already been called, then this method has no
        effect.
        </p>
     */
    void cancelRowUpdates() raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XResultSetUpdate::moveToInsertRow
    /** moves the cursor to the insert row.  The current cursor position is
        remembered while the cursor is positioned on the insert row.
        
        
        <p> The insert row is a special row associated with an updatable
        result set. It is essentially a buffer where a new row may
        be constructed by calling the <code>updateXXX</code> methods prior to
        inserting the row into the result set.
        </p>
        <p>Only the <code>updateXXX</code>, <code>getXXX</code>,
        and <code>insertRow</code> methods may be
        called when the cursor is on the insert row.  All of the columns in
        a result set must be given a value each time this method is
        called before calling <code>insertRow</code>.
        The method <code>updateXXX</code> must be called before a
        <code>getXXX</code> method can be called on a column value.
        </p>
     */
    void moveToInsertRow() raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XResultSetUpdate::moveToCurrentRow
    /** moves the cursor to the remembered cursor position, usually the
        current row. This method has no effect if the cursor is not on the insert
        row.
     */
    void moveToCurrentRow() raises (SQLException); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
    $Log: not supported by cvs2svn $
    Revision 1.1.1.1  2000/09/18 23:35:43  hjs
    initial import
    
    Revision 1.5  2000/09/11 11:52:43  mi
    documentation merged from XML
     
    Revision 1.3  2000/01/27 08:35:29  dg 
    #72102# documentation of insertRow() 
     
    Revision 1.2  2000/01/06 07:27:42  dg 
    #70278# rowDeleted moved to XResultSet 
 
    Revision 1.1  1999/11/24 08:41:08  dg 
    new StarDataBaseConnectivity 
 
===========================================================================*/ 
#endif 
