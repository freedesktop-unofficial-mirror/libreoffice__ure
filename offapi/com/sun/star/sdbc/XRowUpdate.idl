/*************************************************************************
 *
 *  $RCSfile: XRowUpdate.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: mi $ $Date: 2000-11-06 13:16:35 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_XRowUpdate_idl__ 
#define __com_sun_star_sdbc_XRowUpdate_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_util_Date_idl__ 
#include <com/sun/star/util/Date.idl> 
#endif 
 
#ifndef __com_sun_star_util_DateTime_idl__ 
#include <com/sun/star/util/DateTime.idl> 
#endif 
 
#ifndef __com_sun_star_util_Time_idl__ 
#include <com/sun/star/util/Time.idl> 
#endif 
 
 module com {  module sun {  module star {  module io { 
interface XInputStream; 
};};};}; 
 
#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#include <com/sun/star/sdbc/SQLException.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
// DocMerge from xml: interface com::sun::star::io::com::sun::star::sdbc::XRowUpdate
/** is used to update data which is collected in a row.
 */
[ uik(D6B60248-9067-11d3-9EE00010-5AD7A5C4), ident("XRowUpdate", 1.0) ]
interface XRowUpdate: com::sun::star::uno::XInterface
{ 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateNull
    /** gives a nullable column a null value.
     */
    void updateNull([in]long columnIndex) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateBoolean
    /** updates a column with a boolean value.
     */
    void updateBoolean([in]long columnIndex, [in]boolean x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateByte
    /** updates a column with a byte value.
     */
    void updateByte([in]long columnIndex, [in]byte x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateShort
    /** updates a column with a short value.
     */
    void updateShort([in]long columnIndex, [in]short x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateInt
    /** updates a column with an long value.
     */
    void updateInt([in]long columnIndex, [in]long x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateLong
    /** updates a column with a hyper value.
     */
    void updateLong([in]long columnIndex, [in]hyper x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateFloat
    /** updates a column with a float value.
     */
    void updateFloat([in]long columnIndex, [in]float x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateDouble
    /** updates a column with a Double value.
     */
    void updateDouble([in]long columnIndex, [in]double x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateString
    /** updates a column with a String value.
     */
    void updateString([in]long columnIndex, [in]string x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateBytes
    /** updates a column with a byte array value.
     */
    void updateBytes([in]long columnIndex, [in]sequence<byte> x) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateDate
    /** updates a column with a Date value.
     */
    void updateDate([in]long columnIndex, [in]com::sun::star::util::Date x) 
        raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateTime
    /** updates a column with a Time value.
     */
    void updateTime([in]long columnIndex, [in]com::sun::star::util::Time x) 
        raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateTimestamp
    /** updates a column with a Timestamp value.
     */
    void updateTimestamp([in]long columnIndex, 
                         [in]com::sun::star::util::DateTime x) 
      raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateBinaryStream
    /** updates a column with a stream value.
     */
    void updateBinaryStream([in]long columnIndex, 
                             [in]com::sun::star::io::XInputStream x, 
                              [in]long length) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateCharacterStream
    /** updates a column with a stream value.
     */
    void updateCharacterStream([in]long columnIndex, 
                                [in]com::sun::star::io::XInputStream x, 
                                 [in]long length) raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateObject
    /** updates a column with an Object value.
     */
    void updateObject([in]long columnIndex, [in]any x) 
      raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::io::com::sun::star::sdbc::XRowUpdate::updateNumericObject
    /** updates a column with an Object value.
     */
    void updateNumericObject([in]long columnIndex, [in]any x, [in]long scale) 
      raises (SQLException); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
    $Log: not supported by cvs2svn $
    Revision 1.1.1.1  2000/09/18 23:35:43  hjs
    initial import
    
    Revision 1.8  2000/09/11 11:52:44  mi
    documentation merged from XML
     
    Revision 1.6  2000/01/28 07:57:04  dg 
    #72121# documentation of update/setCharacterStream 
     
    Revision 1.5  1999/12/20 16:11:35  dg 
    #70278# changes in API 
 
    Revision 1.4  1999/12/14 12:05:46  dg 
    #70278# CompareBookmark removed 
 
    Revision 1.3  1999/12/13 13:47:55  dg 
    #70278# XSQLErrorBroadcaster removed 
 
    Revision 1.2  1999/11/24 11:33:26  dg 
    chk includes 
 
    Revision 1.1  1999/11/24 08:41:12  dg 
    new StarDataBaseConnectivity 
 
===========================================================================*/ 
#endif 
