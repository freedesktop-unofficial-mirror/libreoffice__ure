/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XStruct.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:55:53 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_XStruct_idl__ 
#define __com_sun_star_sdbc_XStruct_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
 module com {  module sun {  module star {  module container { 
 published interface XNameAccess; 
};};};}; 
 
#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#include <com/sun/star/sdbc/SQLException.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
// DocMerge from xml: interface com::sun::star::container::com::sun::star::sdbc::XStruct
/** is used for the standard mapping for a SQL structured type.
    
    
    <p>
    A 
    <code>Struct</code>
    object contains a value for each attribute
    of the SQL structured type that it represents.
    By default, an instance of 
    <code>Struct</code>
    is valid as long as the
    application has a reference to it.
    </p>
 */
published interface XStruct: com::sun::star::uno::XInterface
{ 
     
    // DocMerge from xml: method com::sun::star::container::com::sun::star::sdbc::XStruct::getSQLTypeName
    /** retrieves the SQL type name of the SQL structured type
        that this 
        <code>Struct</code>
        object represents.
        @returns
            the name of the SQL type.
        @throws SQLException 
            if a database access error occurs.
     */
    string getSQLTypeName() raises (SQLException); 
 
      //------------------------------------------------------------------------- 
     
    // DocMerge from idl: method com::sun::star::container::com::sun::star::sdbc::XStruct::getAttributes
    /** produces the ordered values of the attributes of the SQL 
             structured type that this 
             <code>Struct</code>
             object represents. 
             <p>
             This method uses the given type map for customizations of the type 
             mappings. If there is no entry in the given type map that matches or 
             the given type map is 
             <NULL/>
             , the structured type that this 
             <code>Struct</code>
             object represents, the driver uses 
             the connection type mapping. 
             @param typeMap 
                is a map object that contains mappings of SQL type names to 
                services. If the 
                <code>typeMap</code>is
                <NULL/>
                , the type-map 
                   associated with the connection for customizations of the type-mappings 
                is used. 
             @returns 
                an array containing the ordered attribute values. 
             @throws SQLException 
                if a database access error occurs.
     */
    sequence<any> getAttributes([in]com::sun::star::container::XNameAccess typeMap) 
        raises (SQLException); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
