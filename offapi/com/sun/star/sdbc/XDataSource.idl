/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XDataSource.idl,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:49:25 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_XDataSource_idl__ 
#define __com_sun_star_sdbc_XDataSource_idl__ 
 
#ifndef __com_sun_star_uno_XInterface_idl__ 
#include <com/sun/star/uno/XInterface.idl> 
#endif 
 
#ifndef __com_sun_star_sdbc_SQLException_idl__ 
#include <com/sun/star/sdbc/SQLException.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 published interface XConnection; 
 
 
// DocMerge from xml: interface com::sun::star::sdbc::XDataSource
/** is used for establishing connections via a factory which is identified
    by its name. A DataSource object is typically registered by a naming service
    provider.
 */
published interface XDataSource: com::sun::star::uno::XInterface
{ 
    //------------------------------------------------------------------------- 
      
    // DocMerge from xml: method com::sun::star::sdbc::XDataSource::getConnection
    /** attempts to establish a database connection.
        @param user
            the user name
        @param password
            the password
        @returns
            the connection object
        @throws SQLException 
            if a database access error occurs.
     */
    XConnection getConnection([in]string user, [in]string password) 
        raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XDataSource::setLoginTimeout
    /** sets the maximum time in seconds that this data source will wait
        while attempting to connect to a database.
        
        
        <p>
        A value of zero specifies that the timeout is the default system
        timeout if there is one; otherwise, it specifies that there is no timeout.
        When a DataSource object is created the login timeout is initially zero.
        </p>
        @param seconds
            the login time limit in seconds
        @throws SQLException 
            if a database access error occurs.
     */
    void setLoginTimeout([in]long seconds) 
         raises (SQLException); 
    //------------------------------------------------------------------------- 
     
    // DocMerge from xml: method com::sun::star::sdbc::XDataSource::getLoginTimeout
    /** gets the maximum time in seconds that this data source can wait
        while attempting to connect to a database.
        
        
        <p>
        A value of zero means that the timeout is the default system timeout
        if there is one; otherwise, it means that there is no timeout. When a
        DataSource object is created the login timeout is initially zero.
        </p>
        @returns
            the login time limit in seconds
        @throws SQLException 
            if a database access error occurs.
     */
    long getLoginTimeout() raises (SQLException); 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
