/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: DataType.idl,v $
 *
 *  $Revision: 1.8 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 03:42:09 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_DataType_idl__ 
#define __com_sun_star_sdbc_DataType_idl__ 
 
 module com {  module sun {  module star {  module sdbc { 
 
 
// DocMerge from idl: constants com::sun::star::sdbc::DataType
/** These constants are used to specify database data types which are used 
        to identify the generic SQL types. The definition is based on JDBC 3.0. 
     
        <p>
        The actual type constant values are equivalent to those in the X/Open CLI.
        </p>
        <p>
        Precise information about the specfic types can be got from 
        <member>XDatabaseMetaData::getTypeInfo()</member>
        .</p>
 */
published constants DataType
{ 
    // DocMerge: empty anyway
    const long BIT 			=  -7; 
    
    // DocMerge: empty anyway
    const long TINYINT 		=  -6; 
    
    // DocMerge: empty anyway
    const long SMALLINT		=   5; 
    
    // DocMerge: empty anyway
    const long INTEGER 		=   4; 
    
    // DocMerge: empty anyway
    const long BIGINT 		=  -5; 
 
    // DocMerge: empty anyway
    const long FLOAT 		=   6; 
    
    // DocMerge: empty anyway
    const long REAL 		=   7; 
    
    // DocMerge: empty anyway
    const long DOUBLE 		=   8; 
 
    // DocMerge: empty anyway
    const long NUMERIC 		=   2; 
    
    // DocMerge: empty anyway
    const long DECIMAL		=   3; 
 
    // DocMerge: empty anyway
    const long CHAR			=   1; 
    
    // DocMerge: empty anyway
    const long VARCHAR 		=  12; 
    
    // DocMerge: empty anyway
    const long LONGVARCHAR 	=  -1; 
 
    // DocMerge: empty anyway
    const long DATE 		=  91; 
    
    // DocMerge: empty anyway
    const long TIME 		=  92; 
    
    // DocMerge: empty anyway
    const long TIMESTAMP 	=  93; 
 
    // DocMerge: empty anyway
    const long BINARY		=  -2; 
    
    // DocMerge: empty anyway
    const long VARBINARY 	=  -3; 
    
    // DocMerge: empty anyway
    const long LONGVARBINARY =  -4; 
 
    // DocMerge: empty anyway
    const long SQLNULL		=   0; 
 
     
    // DocMerge from idl: value com::sun::star::sdbc::DataType::OTHER
    /** indicates that the SQL type is database-specific and 
             gets mapped to an object that can be accessed via 
             the method 
             <member scope="com::sun::star::sdbc">XRow::getObject()</member>
             .
     */
    const long OTHER		= 1111; 
 
     
    // DocMerge from idl: value com::sun::star::sdbc::DataType::OBJECT
    /** indicates a type which is represented by an object which implements 
             this type.
     */
    const long OBJECT        = 2000; 
 
     
    // DocMerge from idl: value com::sun::star::sdbc::DataType::DISTINCT
    /** describes a type based on a built-in type. 
                 It is a user-defined data type (UDT).
     */
    const long DISTINCT     = 2001; 
 
     
    // DocMerge from idl: value com::sun::star::sdbc::DataType::STRUCT
    /** indicates a type consisting of attributes that may be any type. 
                 It is a user-defined data type (UDT).
     */
    const long STRUCT       = 2002; 
 
     
    // DocMerge from idl: value com::sun::star::sdbc::DataType::ARRAY
    /** indicates a type representing an SQL ARRAY.
     */
    const long ARRAY        = 2003; 
 
     
    // DocMerge from idl: value com::sun::star::sdbc::DataType::BLOB
    /** indicates a type representing an SQL Binary Large Object.
     */
    const long BLOB         = 2004; 
 
     
    // DocMerge from idl: value com::sun::star::sdbc::DataType::CLOB
    /** indicates a type representing an SQL Character Large Object.
     */
    const long CLOB         = 2005; 
 
     
    // DocMerge from idl: value com::sun::star::sdbc::DataType::REF
    /** indicates a type representing an SQL REF, a referencing type.
     */
    const long REF          = 2006; 

    /** identifies the generic SQL type
     * <code>BOOLEAN</code>.
     *
     * @since OOo 2.0.0
     */
    const long BOOLEAN = 16;
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
