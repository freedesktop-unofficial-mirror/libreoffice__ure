/*************************************************************************
 *
 *  $RCSfile: CallableStatement.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: obo $ $Date: 2004-06-03 21:49:47 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_CallableStatement_idl__ 
#define __com_sun_star_sdbc_CallableStatement_idl__ 
 
#ifndef __com_sun_star_sdbc_PreparedStatement_idl__ 
#include <com/sun/star/sdbc/PreparedStatement.idl> 
#endif 
 
 module com {  module sun {  module star {  module sdbc { 
 
 published interface XRow; 
 published interface XOutParameters; 
 
 
// DocMerge from xml: service com::sun::star::sdbc::CallableStatement
/** is used to execute SQL stored procedures.
    
    
    <p>
    SDBC provides a stored procedure SQL escape that allows stored procedures
    to be called in a standard way for all RDBMSs. This escape syntax has one
    form that includes a result parameter and one that does not. If used, the
    result parameter must be registered as an OUT parameter. The other parameters
    can be used for input, output, or both. Parameters are referred to sequentially,
    by number. The first parameter is 1.
    </p>
    <p>
    <code>{?=call&amp;lt;procedure-name&amp;gt;[&amp;lt;arg1&amp;gt;,&amp;lt;arg2&amp;gt;,...]}<br/>{call&amp;lt;procedure-name&amp;gt;[&amp;lt;arg1&amp;gt;,&amp;lt;arg2&amp;gt;,...]}
    </code>
    </p>
    <p>
    IN parameter values are set using the set methods inherited from
    <type scope="com::sun::star::sdbc">PreparedStatement</type>
    . The type of all
    OUT parameters must be registered prior to executing the stored procedure;
    their values are retrieved after execution via the 
    <code>get</code>
    methods
    provided by the 
    <type scope="com::sun::star::sdbc">XRow</type>
    .
    </p>
    <p>
    A 
    <code>CallableStatement</code>
    can return one
    <type scope="com::sun::star::sdbc">XResultSet</type>
    or multiple
    <type scope="com::sun::star::sdbc">ResultSet</type>
    objects. Multiple 
    <code>ResultSet</code>
    objects are
    handled using operations inherited from
    <type scope="com::sun::star::sdbc">XPreparedStatement</type>
    .
    </p>
    <p>
    For maximum portability, a call's 
    <type scope="com::sun::star::sdbc">ResultSet</type>
    objects and
    update counts should be processed prior to getting the values of output
    parameters.
    </p>
*/
published service CallableStatement
{ 
    // DocMerge: empty anyway
    service PreparedStatement; 
 
     
    // DocMerge from xml: service com::sun::star::sdbc::CallableStatement: interface com::sun::star::sdbc::XRow
    /** is used for retrieve the values of OUT parameters.
     */
    interface XRow; 
 
     
    // DocMerge from xml: service com::sun::star::sdbc::CallableStatement: interface com::sun::star::sdbc::XOutParameters
    /** is used to declare parameters as OUT parameters.
     */
    interface XOutParameters; 
}; 
 
//============================================================================= 
 
}; }; }; }; 
 
/*=========================================================================== 
===========================================================================*/ 
#endif 
