/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: modules.idl,v $
 *
 *  $Revision: 1.14 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 20:25:25 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __com_sun_star_modules_idl__
#define __com_sun_star_modules_idl__

module com { module sun { module star {

/// security and authenticates interfaces
module auth {};

/// Java AWT-like user interface toolkit interface specifications for UNO.
module awt {};

/** UNO Accessibility API

    <p>This modules contains the basic interfaces of the UAA (UNO
    Accessibility API).  Services that describe how these interfaces are
    implemented can be found in other modules.  The services in this module
    describe only what every accessible object has to support.</p>

    <p>Making a class accessible starts by supporting the <type
    scope="::com::sun::star::accessibility">XAccessible</type> interface.
    This interface' only method returns the actual accessibility object, an
    instance of <type
    scope="::com::sun::star::accessibility">XAccessibleContext</type>.
    These two interfaces may be implemented by the same class in which case
    a call to <method scope="::com::sun::star::accessibility"
    >XAccessible::getAccessible</method> returns the same object that is
    called.  Alternatively the implementation of the <type
    scope="::com::sun::star::accessibility">XAccessibleContext</type>
    interface can be done by another class.  This makes it possible to put
    all accessibility implementations into their own library which has only
    to be loaded when necessary.</p>

    <p>Note that all other interfaces have to be implemented by the same
    class that implements the <type
    scope="::com::sun::star::accessibility">XAccessibleContext</type>
    interface.  Note also that there is no way back from an accessibility
    object to the object from which it has been obtained by means of the
    UAA.  If you need such a back-link you have to provide one on your
    own.</p>
*/
module accessibility {};

/// Charting diagram interfaces.
module chart {};

/** New implementation of Charting diagram interfaces.  This module
    contains only a rather small public API.  In addition there is a
    private API in the chart2 project.
 */
module chart2 {};

/// Non-JDBC conform database interfaces <b>(deprecated)</d>
module data {};

/// Access to the tree of configuration data.
module configuration {};

/// Clipboard and Drag&amp;Drop interfaces.
module datatransfer {};

/// Office document related interfaces.
module document {};

/// Drawing and shape specific interfaces.
module drawing {};

/// Interfaces for managing forms and controls.
module form {};

/// Interfaces for mathematical formulas.
module formula {};

/// Desktop environment framework interfaces.
module frame {};

/// Interfaces for graphic handling
module graphic {};

/// Interface for internationalization (deprecated draft).
module i18n {};

/// Interfaces to control installations.
module installation {};

/// lightweight directory access protocol (LDAP)
module ldap {};

/// Spell checker, hyphenation and thesaurus interfaces.
module linguistic2 {};

/// Interfaces for Email connectivity 
module mail {};

/// Interfaces for Mozilla integration.
module mozilla {};

/// Interfaces to access package file formats.
module package {};

/// Pretty Good Privacy (deprecated).
module pgp {};

/// Netscape-like plugin interfaces.
module plugin {};

/// Presentation specific interfaces.
module presentation {};

/// Interfaces to access (UI) resource files.
module resource {};

/// Interfaces for scanner control.
module scanner {};

/// Basic interfaces for database access.
module sdb {};

/// Database component interfaces.
module sdbc {};

/// High-level database component interfaces.
module sdbcx {};

/// Interfaces to control the setup process.
module setup {};

/// Spreadsheet specific interfaces.
module sheet {};

/// Formatting and layout style and stylesheet interfaces.
module style {};

/// Interfaces for import/export of Scaleable Vector Format.
module svg {};

/// Data synchronization interfaces (deprecated).
module sync {};

/// Data synchronization interfaces (deprecated).
module sync2 {};

/// Table specific interfaces (for text and spreadsheet).
module table {};

/// Task management interfaces.
module task {};

/// Test interfaces for core-reflection, introspection and marshalling.
module test {};

/// Text specific interfaces.
module text {};

/// Universal Content Broker interfaces.
module ucb {};

/// Dialogs and other UI elements.
module ui {};

/// Miscellaneous interfaces for sorting, connecting objects etc.
module util {};

/// Document view specfic interfaces (e.g. selection access and printing).
module view {};

/// XML related interfaces.
module xml {};

/// Host operating system integration interfaces.
module system {};

/// Package file format interfaces.
module packages {};

/// image manupulation interfaces.
module image {};

/// interfaces for XForms (XML-based forms) implementation
module xforms {};

}; }; };

#endif

