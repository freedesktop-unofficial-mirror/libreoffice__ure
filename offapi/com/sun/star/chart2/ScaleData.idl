#ifndef com_sun_star_chart2_ScaleData_idl
#define com_sun_star_chart2_ScaleData_idl

#ifndef com_sun_star_chart2_Break_idl
#include <com/sun/star/chart2/Break.idl>
#endif

#ifndef com_sun_star_chart2_XScaling_idl
#include <com/sun/star/chart2/XScaling.idl>
#endif

#ifndef com_sun_star_chart2_AxisOrientation_idl
#include <com/sun/star/chart2/AxisOrientation.idl>
#endif

#ifndef com_sun_star_chart2_data_XLabeledDataSequence_idl
#include <com/sun/star/chart2/data/XLabeledDataSequence.idl>
#endif

#ifndef com_sun_star_chart2_AxisType_idl
#include <com/sun/star/chart2/AxisType.idl>
#endif

#ifndef com_sun_star_chart_IncrementData_idl
#include <com/sun/star/chart2/IncrementData.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module chart2 {

//=============================================================================

struct ScaleData
{
    /** if the any contains a double value this is used as a fixed
        maximum.  Otherwise, if the any is empty or contains an
        incompatible type, the maximum is automatic.

        <p>If the maximum is automatic, this means, each view that
        represents the model containing this scale, has to calculate a
        maximum by its own means.</p>
     */
    any Minimum;

    /** if the any contains a double value this is used as a fixed
        minimum.  Otherwise, if the any is empty or contains an
        incompatible type, the minimum is automatic.

        <p>If the minimum is automatic, this means, each view that
        represents the model containing this scale, has to calculate a
        minimum by its own means.</p>
     */
    any Maximum;


    /** The Origin indicates where other axes cross this axis.
        If the any contains a double value that value is used.
        Otherwise an appropriate value has to be calculated
        by that instances using Origin.
     */
    any Origin;

    /** Note: Is this a good place for the AXIS-orientation?  Two axes may use the same
        scale, but point into two different directions (?)
     */
    AxisOrientation     Orientation;

    XScaling            Scaling;

    sequence< Break >   Breaks;

    data::XLabeledDataSequence Categories;

    /** describes the type of the axis. E.g. it can be a real number axis or a category axis or something else.
        AxisType is one value out of the constant group <type>AxisType</type>.
    */
    long   AxisType;

    IncrementData IncrementData;
};

//=============================================================================

}; }; }; };

#endif
