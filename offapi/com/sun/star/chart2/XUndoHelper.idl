/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * 
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef com_sun_star_chart2_XUndoHelper_idl
#define com_sun_star_chart2_XUndoHelper_idl

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/frame/XModel.idl>
// #include <com/sun/star/beans/PropertyValue.idl>

module com
{
module sun
{
module star
{
module chart2
{

/** An interface for storing frame::XModel objects for container undo.
 */
interface XUndoHelper : ::com::sun::star::uno::XInterface
{
    /** call this before you change the xCurrentModel

        @return a clone of the current model that can later be used to
                restore the state of a changed model
     */
    ::com::sun::star::frame::XModel getModelCloneForUndo(
        [in] ::com::sun::star::frame::XModel xModelBeforeChange );

    /** call this before you change the xCurrentModel. You can pass
        parameters to refine the information that is cloned.

        @return a clone of the current model that can later be used to
                restore the state of a changed model using the same
                arguments in applyModelContentWithArguments.
     */
//     ::com::sun::star::frame::XModel getModelCloneForUndoWithArguments(
//         [in] ::com::sun::star::frame::XModel xModelBeforeChange,
//         [in] sequence< ::com::sun::star::beans::PropertyValue > aArguments );

    /** apply the content of xModelToCopyFrom to the XModel in xModelToChange
     */
    void applyModelContent( [inout] ::com::sun::star::frame::XModel xModelToChange,
                            [in] ::com::sun::star::frame::XModel xModelToCopyFrom );

    /** apply the content of xModelToCopyFrom to the XModel in
        xModelToChange. You can pass parameters to refine the
        information that is applied.

        <p>Note that xModelToCopyFrom should have been created with
        getModelCloneForUndoWithArguments using the same arguments as
        are passed here.</p>
     */
//     void applyModelContentWithArguments(
//         [inout] ::com::sun::star::frame::XModel xModelToChange,
//         [in] ::com::sun::star::frame::XModel xModelToCopyFrom,
//         [in] sequence< ::com::sun::star::beans::PropertyValue > aArguments );
};

} ; // chart2
} ; // com
} ; // sun
} ; // star

#endif
