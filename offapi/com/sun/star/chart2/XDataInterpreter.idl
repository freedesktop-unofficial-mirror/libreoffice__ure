/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XDataInterpreter.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: vg $ $Date: 2007-05-22 15:01:18 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef com_sun_star_chart2_XDataInterpreter_idl
#define com_sun_star_chart2_XDataInterpreter_idl

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_beans_PropertyValue_idl__
#include <com/sun/star/beans/PropertyValue.idl>
#endif

#include <com/sun/star/chart2/InterpretedData.idl>
#include <com/sun/star/chart2/data/XDataSource.idl>
#include <com/sun/star/chart2/XDataSeries.idl>

module com
{
module sun
{
module star
{
module chart2
{

/** offers tooling to interpret different data sources in a structural
    and chart-type-dependent way.
 */
interface XDataInterpreter  : ::com::sun::star::uno::XInterface
{
    /** Interprets the given data.

        @param aArguments
            Arguments that tell the template how to slice the given
            range.  The properties should be defined in a separate
            service.

            <p>For standard parameters that may be used, see the
            service <type>StandardDiagramCreationParameters</type>.
            </p>

        @param aSeriesToReUse
            use all the data series given here for the result before
            creating new ones.
     */
    InterpretedData interpretDataSource(
        [in] data::XDataSource xSource,
        [in] sequence< com::sun::star::beans::PropertyValue > aArguments,
        [in] sequence< XDataSeries > aSeriesToReUse );

    /** Re-interprets the data given in <code>aInterpretedData</code>
        while keeping the number of data series and the categories.

        <p>the data passed in
        <member>InterpretedData::UnusedData</member> may be used to be
        added to existing <type>DataSeries</type>.</p>
     */
    InterpretedData reinterpretDataSeries( [in] InterpretedData aInterpretedData );

    /** parses the given data and states, if a
        <member>reinterpretDataSeries</member> call can be done
        without data loss.

        <p>if this method returns <TRUE/>, a call to
        <member>reinterpretDataSeries</member> should leave the
        <member>InterpretedData::UnusedData</member> list
        untouched.</p>

        @return
            <TRUE/>, if the data given in
            <code>aInterpretedData</code> has a similar structure than
            the one required is used as output of the data interpreter.
     */
    boolean isDataCompatible( [in] InterpretedData aInterpretedData );

    /** Try to reverse the operation done in
        <member>interpretDataSource</member>.

        <p>In case <code>aInterpretedData</code> is the result of
        <member>interpretDataSource</member>( <code>xSource</code> ),
        the result of this method should be <code>xSource</code>.</p>
     */
    data::XDataSource mergeInterpretedData( [in] InterpretedData aInterpretedData );
};

} ; // chart2
} ; // com
} ; // sun
} ; // star


#endif
