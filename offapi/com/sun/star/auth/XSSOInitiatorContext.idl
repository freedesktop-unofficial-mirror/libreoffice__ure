/*************************************************************************
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

#ifndef __com_sun_star_auth_XSSOInitiatorContext_idl__
#define __com_sun_star_auth_XSSOInitiatorContext_idl__

#ifndef __com_sun_star_auth_XSSOContext_idl__
#include <com/sun/star/auth/XSSOContext.idl>
#endif

#ifndef __com_sun_star_auth_SSOExceptions_idl__
#include <com/sun/star/auth/SSOExceptions.idl>
#endif

module com { module sun { module star { module auth {

/** represents an initiator side security context.
    <P>This context may be used to initialise authetication tokens to send to
    an acceptor and to authenticate any token sent back in response.

    @since #107627#
 */
interface XSSOInitiatorContext : ::com::sun::star::auth::XSSOContext
{
    /** initialises an SSO Token to send to the acceptor side and
        authenticates an SSO Token returned by the acceptor if the
        context supports mutual authentication.
        <P>
        init should be called only once for contexts which don't support
        mutual authentication and at most twice for contexts which do
        support mutual authentication. Additional calls produce undefined
        results.

        @param Token
        the SSO token received from the acceptor side in response to an
        authentication request. This token is ignored on the first call
        to init and should only be specified for the second call on a
        context supporting mutual authentication.

        @returns
        the sequence of bytes to be sent to the acceptor side as part of
        an authentication request. This sequence will be non zero length
        for the first call to init, zero length for the second call to init
        on a context supporting mutual authentication and undefined in all
        other cases.
     */
    sequence< byte > init(	[in] sequence< byte > Token )
        raises( InvalidArgumentException,
                InvalidCredentialException,
                InvalidContextException,
                AuthenticationFailedException );
};

}; }; }; };

#endif
