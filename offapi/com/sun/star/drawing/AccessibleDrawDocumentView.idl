/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: AccessibleDrawDocumentView.idl,v $
 *
 *  $Revision: 1.7 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-07 23:17:39 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

#ifndef __com_sun_star_drawing_AccessibleGraphicShape_idl__
#define __com_sun_star_drawing_AccessibleGraphicShape_idl__

#ifndef __com_sun_star_accessibility_XAccessible_idl__
#include <com/sun/star/accessibility/XAccessible.idl>
#endif
#ifndef __com_sun_star_accessibility_XAccessibleContext_idl__
#include <com/sun/star/accessibility/XAccessibleContext.idl>
#endif
#ifndef __com_sun_star_accessibility_XAccessibleComponent_idl__
#include <com/sun/star/accessibility/XAccessibleComponent.idl>
#endif

module com {  module sun {  module star {  module drawing {

/** The <type>AccessibleDrawDocumentView</type> service is implemented by
    views of Draw and Impress documents.

    <p>An object that implements the <type>AccessibleDrawDocumentView</type>
    service provides information about the view of a Draw or Impress
    document in one of the various view modes.  With its children it gives
    access to the current page and the shapes on that page.</p>

    <p>This service gives a simplified view on the underlying document.  It
    tries both to keep the structure of the accessibility representation
    tree as simple as possible and provide as much relevant information as
    possible.  This has the following consequences:
    <ol>
    <li>Only the current draw page and only the visible shapes are
    accessible.  To switch to another page or to access shapes that lie
    outside the currently visible area, the user has to issue these requests
    manually or programmatically through the usual chanels, e.g. pressing
    keys or selecting menu entries.</li>
    <li>The hierarchy exposed through the 
    <type scope="::com::sun::star::accessibility">XAccessibleContext</type>
    interface does not necessarily correspond directly to the underlying
    draw page structure.  Internal nodes in this hierarchy are introduced 
    by group shapes, 3D scenes, and OLE objects.</li>
    <li>The view modes editing view, outline view, slides view, notes view,
    handout view, and presentation view are not exposed explicitly.
    However, if there happens to be a view mode change which results in a
    rearrangement of the visible shapes, the user gets notified of this.</li>
    </ol></p>

     @since OOo 1.1.2
*/
published service AccessibleDrawDocumentView
{
    /** Base interface for being accessible.  It gives access to the 
        <type scope="::com::sun::star::accessibility">XAccessibleContext</type> 
        interface.
    */
    interface ::com::sun::star::accessibility::XAccessible;

    /** Provide access to the view of a document.

        <p>You can access the following information:
        <ul>
        <li>Role: The object's role is <const
            scope="com::sun::star::accessibility"
                >AccessibleRole::DOCUMENT</const>.</li>
        <li>Name: Its name is "AccessibleDrawDocumentView",
        "AccessibleOutlineView", or "slide window".</li> 
        <li>Description: The description is "Draw Document", "Accessible 
        Draw Document Outline", or "slide window".</li>
        <li>Children: The shapes of the current draw page that are currently
            visible are direct and indirect children of (an object
            implementing) 
            this service.  Group shapes, 3D scenes, and OLE objects
            introduce further levels into the hierarchy.  If the visibility
            of shapes changes--due to 
            scrolling, switching the current draw page, or changing the view
            mode--the appropriate listeners are called and the user gets
            informed of this.</li>
        <li>Parent: The parent will usually be the window that contains the
            draw document view.  It has to be set via implementation dependend
            ways.</li>
        <li>Relations: Relations are set and modified from the outside.</li> 
        <li>States: <const scope="com::sun::star::accessibility"
                >AccessibleStateType::DEFUNC</const> is set if a document view
                becomes obsolete like when the window, which displays the view,
                is closed.  Otherwise the states
                <const scope="com::sun::star::accessibility"
                    >AccessibleStateType::ENABLED</const>,
                <const scope="com::sun::star::accessibility"
                    >AccessibleStateType::SHOWING</const>,
                <const scope="com::sun::star::accessibility"
                    >AccessibleStateType::VISIBLE</const>,
                <const scope="com::sun::star::accessibility"
                    >AccessibleStateType::FOCUSABLE</const>, and
                <const scope="com::sun::star::accessibility"
                   >AccessibleStateType::SELECTABLE</const>
            are always set.</li>
        <li>Locale: Is obtained from the parent and returned unchanged.</li>
        </ul></p>
    */
    interface ::com::sun::star::accessibility::XAccessibleContext;

    /** Provide access to a draw document's graphical representation.

        <p>The main purpose of this interface is to provide a bounding box
        of the currently visible area and to let the user find children
        (i.e. shapes) that cover a given test point.  The more interesting
        part of the graphical representation of a draw page lies in its
        children.  See the <type>AccessibleShape</type> service for more
        information about shapes.</p>

        @see AccessibleShape
    */
    interface ::com::sun::star::accessibility::XAccessibleComponent;
};

}; }; }; };

#endif
