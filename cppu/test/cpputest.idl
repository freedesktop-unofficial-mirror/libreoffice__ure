/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: cpputest.idl,v $
 *
 *  $Revision: 1.3 $
 *
 *  last change: $Author: rt $ $Date: 2005-09-08 08:55:25 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef _TEST_CPPUTEST_IDL_
#define _TEST_CPPUTEST_IDL_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/TypeClass.idl>

module test
{
    
struct Test1
{
    short	nInt16;
    double 	dDouble;
    boolean	bBool;
};

struct Test2
{
    short	nInt16;
    Test1	aTest1;
};

typedef Test1 TdTest1;

struct Test3
{
    byte						nInt8;
    float						nFloat;
    double						nDouble;
    short						nInt16;
    string						aString;
    unsigned short				nuInt16;
    hyper						nInt64;
    long						nInt32;
    unsigned hyper				nuInt64;
    unsigned long				nuInt32;
    com::sun::star::uno::TypeClass		eType;
    char						wChar;
    TdTest1						td;
    boolean						bBool;
    any							aAny;
};


struct Base
{ 
    long	n;
    short	o;
};

struct Base1 : Base
{ 
    short	p;
};

struct Base2 : Base1
{ 
    double	p2;
};

interface XSimpleInterface : com::sun::star::uno::XInterface
{
    void method();
};

}; //module test

#endif
